{"version":3,"sources":["utils/navbar.jsx","utils/Route_images/linearsearch.png","utils/Route_images/binaryImg-scaled.jpg","utils/Route_images/sorting.jpg","utils/svg/maskShapesNew.svg","utils/indexPage.jsx","sortingAlgorithms/components/elementalComponents/Button/constants.js","sortingAlgorithms/components/elementalComponents/Button/index.js","sortingAlgorithms/components/elementalComponents/Switch/index.js","sortingAlgorithms/components/elementalComponents/Background/constants.js","sortingAlgorithms/components/elementalComponents/Background/index.js","sortingAlgorithms/components/subComponents/Menu/index.js","sortingAlgorithms/components/subComponents/AlgoControls/index.js","sortingAlgorithms/components/superComponents/TopBar/index.js","sortingAlgorithms/components/superComponents/AppDrawer/index.js","sortingAlgorithms/components/elementalComponents/Bar/index.js","sortingAlgorithms/components/superComponents/SortChart/index.js","sortingAlgorithms/components/subComponents/VisualizerControls/index.js","sortingAlgorithms/components/subComponents/ProgressBar/index.js","sortingAlgorithms/components/subComponents/ColorClusters/index.js","sortingAlgorithms/components/subComponents/SortInfo/index.js","sortingAlgorithms/components/superComponents/SortVisualizer/index.js","utils/Program_codes/view_code/useFakeLazyImport.tsx","utils/Program_codes/view_code/Container.tsx","utils/Program_codes/view_code/SortingAlgorithms/BubbleSort/CodingwithC.tsx","utils/Program_codes/view_code/SortingAlgorithms/BubbleSort/CodingwithCpp.tsx","utils/Program_codes/view_code/SortingAlgorithms/BubbleSort/CodingwithPython.tsx","utils/Program_codes/view_code/SortingAlgorithms/BubbleSort/CodingwithJava.tsx","utils/Program_codes/view_code/SortingAlgorithms/BubbleSort/CodingwithC#.tsx","utils/Program_codes/view_code/SortingAlgorithms/BubbleSort/CodingwithPHP.tsx","utils/Program_codes/view_code/SortingAlgorithms/BubbleSort/CrossFadeElementBubble.tsx","utils/Program_codes/view_code/SortingAlgorithms/BubbleSort/viewcodebubble.tsx","utils/Program_codes/view_code/SortingAlgorithms/BubbleSort/togglerbubble.tsx","sortingAlgorithms/algorithms/helpers.js","sortingAlgorithms/algorithms/BubbleSort.js","utils/Program_codes/view_code/SortingAlgorithms/SelectionSort/CodingwithC.tsx","utils/Program_codes/view_code/SortingAlgorithms/SelectionSort/CodingwithCpp.tsx","utils/Program_codes/view_code/SortingAlgorithms/SelectionSort/CodingwithPython.tsx","utils/Program_codes/view_code/SortingAlgorithms/SelectionSort/CodingwithJava.tsx","utils/Program_codes/view_code/SortingAlgorithms/SelectionSort/CodingwithC#.tsx","utils/Program_codes/view_code/SortingAlgorithms/SelectionSort/CodingwithPHP.tsx","utils/Program_codes/view_code/SortingAlgorithms/SelectionSort/CrossFadeElementSelection.tsx","utils/Program_codes/view_code/SortingAlgorithms/SelectionSort/viewcodeselection.tsx","utils/Program_codes/view_code/SortingAlgorithms/SelectionSort/togglerselection.tsx","sortingAlgorithms/algorithms/SelectionSort.js","utils/Program_codes/view_code/SortingAlgorithms/InsertionSort/CodingwithC.tsx","utils/Program_codes/view_code/SortingAlgorithms/InsertionSort/CodingwithCpp.tsx","utils/Program_codes/view_code/SortingAlgorithms/InsertionSort/CodingwithPython.tsx","utils/Program_codes/view_code/SortingAlgorithms/InsertionSort/CodingwithJava.tsx","utils/Program_codes/view_code/SortingAlgorithms/InsertionSort/CodingwithC#.tsx","utils/Program_codes/view_code/SortingAlgorithms/InsertionSort/CodingwithPHP.tsx","utils/Program_codes/view_code/SortingAlgorithms/InsertionSort/CrossFadeElementInsertion.tsx","utils/Program_codes/view_code/SortingAlgorithms/InsertionSort/viewcodeinsertion.tsx","utils/Program_codes/view_code/SortingAlgorithms/InsertionSort/togglerinsertion.tsx","sortingAlgorithms/algorithms/InsertionSort.js","utils/Program_codes/view_code/SortingAlgorithms/MergeSort/CodingwithC.tsx","utils/Program_codes/view_code/SortingAlgorithms/MergeSort/CodingwithCpp.tsx","utils/Program_codes/view_code/SortingAlgorithms/MergeSort/CodingwithPython.tsx","utils/Program_codes/view_code/SortingAlgorithms/MergeSort/CodingwithJava.tsx","utils/Program_codes/view_code/SortingAlgorithms/MergeSort/CodingwithC#.tsx","utils/Program_codes/view_code/SortingAlgorithms/MergeSort/CodingwithPHP.tsx","utils/Program_codes/view_code/SortingAlgorithms/MergeSort/CrossFadeElementMerge.tsx","utils/Program_codes/view_code/SortingAlgorithms/MergeSort/viewcodemerge.tsx","utils/Program_codes/view_code/SortingAlgorithms/MergeSort/togglermerge.tsx","sortingAlgorithms/algorithms/MergeSort.js","utils/Program_codes/view_code/SortingAlgorithms/QuickSort/CodingwithC.tsx","utils/Program_codes/view_code/SortingAlgorithms/QuickSort/CodingwithCpp.tsx","utils/Program_codes/view_code/SortingAlgorithms/QuickSort/CodingwithPython.tsx","utils/Program_codes/view_code/SortingAlgorithms/QuickSort/CodingwithJava.tsx","utils/Program_codes/view_code/SortingAlgorithms/QuickSort/CodingwithC#.tsx","utils/Program_codes/view_code/SortingAlgorithms/QuickSort/CodingwithPHP.tsx","utils/Program_codes/view_code/SortingAlgorithms/QuickSort/CrossFadeElementQuick.tsx","utils/Program_codes/view_code/SortingAlgorithms/QuickSort/viewcodequick.tsx","utils/Program_codes/view_code/SortingAlgorithms/QuickSort/togglerquick.tsx","sortingAlgorithms/algorithms/QuickSort.js","utils/Program_codes/view_code/SortingAlgorithms/HeapSort/CodingwithC.tsx","utils/Program_codes/view_code/SortingAlgorithms/HeapSort/CodingwithCpp.tsx","utils/Program_codes/view_code/SortingAlgorithms/HeapSort/CodingwithPython.tsx","utils/Program_codes/view_code/SortingAlgorithms/HeapSort/CodingwithJava.tsx","utils/Program_codes/view_code/SortingAlgorithms/HeapSort/CodingwithC#.tsx","utils/Program_codes/view_code/SortingAlgorithms/HeapSort/CodingwithPHP.tsx","utils/Program_codes/view_code/SortingAlgorithms/HeapSort/CrossFadeElementHeap.tsx","utils/Program_codes/view_code/SortingAlgorithms/HeapSort/viewcodeheap.tsx","utils/Program_codes/view_code/SortingAlgorithms/HeapSort/togglerheap.tsx","sortingAlgorithms/algorithms/HeapSort.js","sortingAlgorithms/sortingVisualizer.js","utils/randomIntGenerator.js","searchingAlgorithms/searchingAlgorithms.js","utils/header.jsx","searchingAlgorithms/ArrayBlock.jsx","utils/sidebar.jsx","utils/Program_codes/view_code/BinarySearch/CodingwithC.tsx","utils/Program_codes/view_code/BinarySearch/CodingwithCpp.tsx","utils/Program_codes/view_code/BinarySearch/CodingwithPython.tsx","utils/Program_codes/view_code/BinarySearch/CodingwithJava.tsx","utils/Program_codes/view_code/BinarySearch/CodingwithC#.tsx","utils/Program_codes/view_code/BinarySearch/CodingwithPHP.tsx","utils/Program_codes/view_code/BinarySearch/CrossFadeElementAsyncBinary.tsx","utils/Program_codes/view_code/BinarySearch/viewcodesbinary.tsx","utils/Program_codes/view_code/BinarySearch/togglerbinary.tsx","searchingAlgorithms/binarySearch/binarySearch.jsx","utils/Program_codes/view_code/LinearSearch/CodingwithC.tsx","utils/Program_codes/view_code/LinearSearch/CodingwithCpp.tsx","utils/Program_codes/view_code/LinearSearch/CodingwithPython.tsx","utils/Program_codes/view_code/LinearSearch/CodingwithJava.tsx","utils/Program_codes/view_code/LinearSearch/CodingwithC#.tsx","utils/Program_codes/view_code/LinearSearch/CodingwithPHP.tsx","utils/Program_codes/view_code/LinearSearch/CrossFadeElementAsyncLinear.tsx","utils/Program_codes/view_code/LinearSearch/viewcodeslinear.tsx","utils/Program_codes/view_code/LinearSearch/toggler.tsx","searchingAlgorithms/linearSearch/linearSearch.jsx","sortingAlgorithms/components/subComponents/Footer/index.js","App.js","index.js","utils/Program_codes/view_code/SortingAlgorithms/BubbleSort/UseCSSTransition.module.scss","utils/Program_codes/view_code/SortingAlgorithms/SelectionSort/UseCSSTransition.module.scss","utils/Program_codes/view_code/SortingAlgorithms/InsertionSort/UseCSSTransition.module.scss","utils/Program_codes/view_code/SortingAlgorithms/MergeSort/UseCSSTransition.module.scss","utils/Program_codes/view_code/SortingAlgorithms/QuickSort/UseCSSTransition.module.scss","utils/Program_codes/view_code/SortingAlgorithms/HeapSort/UseCSSTransition.module.scss","utils/Program_codes/view_code/BinarySearch/UseCSSTransition.module.scss","utils/Program_codes/view_code/LinearSearch/UseCSSTransition.module.scss"],"names":["NavBar","className","href","maskStyles","margin","textAlign","backgroundImage","MaskedStyleSVG","backgroundSize","backgroundPosition","backgroundRepeat","width","backgroundClip","WebkitBackgroundClip","color","IndexTable","props","state","style","to","src","SortingAlgoPoster","alt","class","LinearSearchPoster","BinarySearchPoster","React","Component","CSS_CLASSES","renderIcon","icon","iconClass","ICON","Button","raised","unelevated","outlined","dense","notCased","disabled","onClick","children","classNames","rootClass","ClassMappings","userClassName","Object","keys","forEach","buildClassNames","Switch","checked","toggleChecked","setState","prevState","handleClick","e","preventDefault","onSwitch","this","prevProps","htmlFor","label","name","id","type","Background","show","opaque","dark","undefined","MenuList","open","items","onSelect","map","item","i","evt","Menu","close","toggle","selected","placeholder","noDropIcon","ArrowUp","ArrowDown","AppControls","algorithm","onAlgorithmChange","onGenerateRandomArray","arraySize","onArraySizeChange","onToggleDarkMode","darkMode","String","TopBar","drawerOpen","toggleDrawer","Close","AppDrawer","closeDrawer","Bar","height","val","stateA","stateB","stateC","stateD","sorted","BarStyle","getListOfBars","numbers","maxNum","clusterA","clusterB","clusterC","clusterD","sortedIndices","num","length","includes","marginRight","SortChart","isDisabled","action","VisualizerControls","onPlay","onPause","onBackward","onForward","onRepeat","onAdjustSpeed","playing","playDisabled","pauseDisabled","backwardDisabled","forwardDisabled","repeatDisabled","playbackSpeed","Repeat","Backward","Pause","Play","Forward","vf","ProgressBar","ColorKey","keySorted","keyA","keyB","keyC","keyD","SortInfo","title","code","description","worstCase","avgCase","bestCase","space","SortVisualizer","trace","traceStep","originalArray","array","timeoutIds","_reset","clearTimeouts","timeoutId","clearTimeout","_changeVisualState","visualState","run","timer","setTimeout","push","pause","continue","slice","stepForward","step","stepBackward","repeat","comparing","compared","adjustPlaybackSpeed","speed","Number","split","Math","max","bind","colorKey","desc","fakeImport","delay","Promise","resolve","window","default","useFakeLazyImport","key","useMemo","lazy","forwardRef","ref","cn","Text","CurrentPage","page","content","CrossFade","CrossFadeExamplesAsyncBubble","useState","setPage","Content","TabsManager","activeIndex","onActiveIndexChange","index","tabs","tabsId","AppBar","theme","Tabs","fallback","CircularProgress","ViewcodeBubble","Divider","DemoBubble","transitionIn","setTransitionIn","useCSSTransition","timeout","enter","styles","enterActive","entering","exit","exitActive","exiting","temporary","rendered","transitionProps","themeType","TextIconSpacing","StorageSVGIcon","ExpandMoreSVGIcon","iconAfter","newTrace","addToTrace","lastSorted","swap","j","tmp","createRange","start","end","Array","elem","createKey","BubbleSortKey","BubbleSortDesc","Configuration","target","rel","BubbleSort","nums","CrossFadeExamplesAsyncSelection","ViewcodeSelection","DemoSelection","SelectionSortKey","SelectionSortDesc","SelectionSort","minIndex","CrossFadeExamplesAsyncInsertion","ViewcodeInsertion","DemoInsertion","InsertionSortKey","InsertionSortDesc","InsertionSort","value","hole","CrossFadeExamplesAsyncMerge","ViewcodeMerge","DemoMerge","MergeSortKey","MergeSortDesc","MergeSort","recursiveMergeSort","original","midPoint","floor","mid","left","right","k","merge","CrossFadeExamplesAsyncQuick","ViewcodeQuick","DemoQuick","QuickSortKey","QuickSortDesc","QuickSort","recursiveQuickSort","pivot","random","choosePivot","partition","listStyleType","CrossFadeExamplesAsyncHeap","ViewcodeHeap","DemoHeap","HeapSortKey","HeapSortDesc","HeapSort","maxHeapify","heapsize","leftChild","rightChild","largest","BuildMaxHeap","heapSort","SortingVisualizer","appDrawerOpen","ALGORITHM","ALGORITHM_KEY","ALGORITHM_DESC","generateRandomArray","fill","createTrace","handleAlgorithmChange","handleArraySizeChange","size","sort","toggleDarkMode","toggleAppDrawer","controls","randomIntFromInterval","min","binarySearchAnimations","element","animations","parseInt","Header","ArrayBlock","idx","SideBar","CrossFadeExamplesAsyncBinary","ViewcodesBinary","Binary","DEFAULT_COLOR","BinarySearch","found","elementFoundAt","msgAfterExecution","msg","previousLength","resetArray","prevArray","document","getElementsByClassName","getElementById","backgroundColor","classList","remove","sortedArray","a","b","ArrayBlocks","transition","count","counter","console","log","resetAllTiles","add","hightlightWithinBounds","alert","binarySearch","CrossFadeExamplesAsync","Viewcodes","background","Demo","LinearSearch","ele","linearSearchAnimations","currentEle","arrayBar","arrayBarStyle","linearSearch","Footer","App","exact","path","component","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.275ccd24.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// For installing Fontawesome @5.0.0 the latest one, run the command** -- \"npm install --save @fortawesome/fontawesome-free\"\r\n\r\n\r\nconst NavBar = () => (\r\n    <div className=\"bg-dark py-2 px-2\">\r\n        <span>\r\n            <a className=\"btn-sm text-decoration-none bg-secondary rounded text-light\" href=\"https://github.com/Ranjan-Das-cloud/dsa-visualization-using-react\">\r\n                <i className=\"fab text-light fa-github\"></i>&nbsp; Source Code\r\n            </a>\r\n            <a className=\"btn-sm text-decoration-none bg-primary rounded float-right text-light\" href=\"https://linkedin.com/in/\">\r\n                <i className=\"fab text-light fa-linkedin\"></i>\r\n                &nbsp; Demonstrated by Ranjan Das\r\n            </a>\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/linearsearch.4661a330.png\";","export default __webpack_public_path__ + \"static/media/binaryImg-scaled.15b88557.jpg\";","export default __webpack_public_path__ + \"static/media/sorting.4e3a1709.jpg\";","export default __webpack_public_path__ + \"static/media/maskShapesNew.34cd8a3b.svg\";","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport LinearSearchPoster from \"./Route_images/linearsearch.png\";\r\nimport BinarySearchPoster from \"./Route_images/binaryImg-scaled.jpg\";\r\nimport SortingAlgoPoster from \"./Route_images/sorting.jpg\";\r\n\r\nimport MaskedStyleSVG from \"./svg/maskShapesNew.svg\";\r\n\r\nimport \"./bootstrap.min.css\";\r\nimport '../sortingAlgorithms/__colorHub/codestyle.css';\r\n\r\nconst maskStyles = {\r\n    margin: \"0 auto\",\r\n    textAlign: \"center\",\r\n    backgroundImage: `url(${MaskedStyleSVG})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"50%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    width: \"auto\",\r\n    backgroundClip: \"text\",\r\n    WebkitBackgroundClip: \"text\",\r\n    color: \"transparent\",\r\n};\r\nexport default class IndexTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container blackpink mt-2\">\r\n                <div className=\"text-center text-muted\">\r\n                    <h1 style={maskStyles} className=\"maskText mt-1\">\r\n                        Data Structure Algorithms\r\n                        <br />\r\n                        Visualizer\r\n                    </h1>\r\n                </div>\r\n                <center>\r\n                    <div className=\"row mt-5\">\r\n                        <div className=\"col-sm-4 col-12 col-md-4 col-lg-4 col-xl-4\">\r\n                            <NavLink to=\"/sorting\">\r\n                                <img\r\n                                    className=\"img-fluid icon_view fixed-image shadowB\"\r\n                                    src={SortingAlgoPoster}\r\n                                    alt=\"Sorting\"\r\n                                />\r\n                                <h5>\r\n                                    <p className=\"text-white thumb-title badge bg-grad badge-pill bg-rounded font-bold\">\r\n                                    <span>\r\n                                        <i class=\"cil-signal-cellular-4\"></i>&nbsp;\r\n                                    </span>\r\n                                        Sorting Visualizer\r\n                                    </p>\r\n                                </h5>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className=\"col-sm-4 col-12 col-md-4 col-lg-4 col-xl-4\">\r\n                            <NavLink to=\"/linear-search\">\r\n                                <img\r\n                                    className=\"img-fluid icon_view fixed-image shadowB\"\r\n                                    src={LinearSearchPoster}\r\n                                    alt=\"Linear Search\"\r\n                                />\r\n                                <h5>\r\n                                    <p className=\"text-white thumb-title badge bg-primary badge-pill bg-rounded font-bold\">\r\n                                    <span>\r\n                                        <i class=\"cil-search\"></i>&nbsp;\r\n                                    </span>\r\n                                        Linear Search\r\n                                    </p>\r\n                                </h5>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className=\"col-sm-4 col-12\">\r\n                            <NavLink to=\"/binary-search\">\r\n                                <img\r\n                                    className=\"img-fluid icon_view fixed-image shadowB\"\r\n                                    src={BinarySearchPoster}\r\n                                    alt=\"Binary Search\"\r\n                                />\r\n                                <h5>\r\n                                    <p className=\"text-white thumb-title badge bg-grad badge-pill bg-rounded font-bold\">\r\n                                    <span>\r\n                                        <i class=\"cil-search\"></i>&nbsp;\r\n                                    </span>\r\n                                        Binary Search\r\n                                    </p>\r\n                                </h5>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"text-center text-muted end-text mt-5\">\r\n                        <h4 className=\"mb-0 greetings\">Have a Great Learning Day!</h4>\r\n                    </div><br></br><br></br>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const CSS_CLASSES = {\r\n  ROOT: 'Button',\r\n  ICON: 'Button__Icon',\r\n  LABEL: 'Button__Label',\r\n  DENSE: 'Button_dense',\r\n  RAISED: 'Button_raised',\r\n  OUTLINED: 'Button_outlined',\r\n  UNELEVATED: 'Button_unelevated',\r\n  UPPERCASE: 'Button_uppercase'\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\nimport { CSS_CLASSES } from './constants';\r\n\r\nfunction buildClassNames(rootClass, ClassMappings, userClassName) {\r\n  let classNames = `${rootClass}`;\r\n  Object.keys(ClassMappings).forEach((className) => {\r\n    if (ClassMappings[className]) {\r\n      classNames += ` ${className}`;\r\n    }\r\n  });\r\n  classNames += ` ${userClassName}`;\r\n  return classNames;\r\n}\r\n\r\nfunction renderIcon(icon, iconClass) {\r\n  const ICON = icon;\r\n  return <ICON className={`${CSS_CLASSES.ICON} ${iconClass}`} />;\r\n}\r\n\r\nconst Button = ({\r\n  className,\r\n  raised,\r\n  unelevated,\r\n  outlined,\r\n  dense,\r\n  notCased,\r\n  disabled,\r\n  icon,\r\n  iconClass,\r\n  href,\r\n  onClick,\r\n  children\r\n}) => {\r\n  const classNames = buildClassNames(\r\n    CSS_CLASSES.ROOT,\r\n    {\r\n      [CSS_CLASSES.DENSE]: dense,\r\n      [CSS_CLASSES.RAISED]: raised,\r\n      [CSS_CLASSES.OUTLINED]: outlined,\r\n      [CSS_CLASSES.UNELEVATED]: unelevated,\r\n      [CSS_CLASSES.UPPERCASE]: !notCased\r\n    },\r\n    className\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <a href={href} className={classNames} disabled={disabled}>\r\n        {icon ? renderIcon(icon, iconClass) : null}\r\n        <span className=\"Button__Label\">{children}</span>\r\n      </a>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={classNames}\r\n      disabled={disabled}\r\n    >\r\n      {icon ? renderIcon(icon, iconClass) : null}\r\n      <span className=\"Button__Label\">{children}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  raised: PropTypes.bool,\r\n  unelevated: PropTypes.bool,\r\n  outlined: PropTypes.bool,\r\n  dense: PropTypes.bool,\r\n  notCased: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n  href: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node])\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nclass Switch extends Component {\r\n  state = {\r\n    checked: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.checked) {\r\n      this.setState({ checked: this.props.checked });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.checked !== this.props.checked) {\r\n      this.setState({ checked: this.props.checked });\r\n    }\r\n  }\r\n\r\n  toggleChecked = () => {\r\n    this.setState((prevState) => ({ checked: !prevState.checked }));\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    e.preventDefault();\r\n    this.toggleChecked();\r\n    this.props.onSwitch();\r\n  };\r\n\r\n  render() {\r\n    let Switch = `Switch`;\r\n    if (this.state.checked) Switch += ` Switch_checked`;\r\n    if (this.props.className) Switch += ` ${this.props.className}`;\r\n    return (\r\n      <div className={Switch}>\r\n        <label className=\"Switch__Label\" htmlFor=\"Switch__Thumb\">\r\n          {this.props.label}\r\n        </label>\r\n\r\n        <div className=\"Switch__Button\">\r\n          <div className=\"Switch__Track\"></div>\r\n          <input\r\n            className=\"Switch__Thumb\"\r\n            onClick={this.handleClick}\r\n            name=\"Switch__Thumb\"\r\n            id=\"Switch__Thumb\"\r\n            type=\"button\"\r\n          ></input>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSwitch.propTypes = {\r\n  onSwitch: PropTypes.func,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Switch;\r\n","export const CSS_CLASSES = {\r\n  ROOT: 'Background',\r\n  OPAQUE: 'Background_opaque',\r\n  DARK: 'Background_dark',\r\n  CLICKABLE: 'Background_clickable'\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\nimport { CSS_CLASSES } from './constants';\r\n\r\nfunction buildClassNames(rootClass, ClassMappings, userClassName) {\r\n  let classNames = `${rootClass}`;\r\n  Object.keys(ClassMappings).forEach((className) => {\r\n    if (ClassMappings[className]) {\r\n      classNames += ` ${className}`;\r\n    }\r\n  });\r\n  classNames += ` ${userClassName}`;\r\n  return classNames;\r\n}\r\n\r\nconst Background = ({ show, opaque, dark, className, onClick }) => {\r\n  const classNames = buildClassNames(\r\n    CSS_CLASSES.ROOT,\r\n    {\r\n      [CSS_CLASSES.OPAQUE]: opaque,\r\n      [CSS_CLASSES.DARK]: dark,\r\n      [CSS_CLASSES.CLICKABLE]: onClick !== undefined\r\n    },\r\n    className\r\n  );\r\n\r\n  return show ? <div className={classNames} onClick={onClick} /> : null;\r\n};\r\n\r\nBackground.propTypes = {\r\n  show: PropTypes.bool,\r\n  opaque: PropTypes.bool,\r\n  dark: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  onClick: PropTypes.func\r\n};\r\nexport default Background;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\n// Sub components\r\nimport Background from '../../elementalComponents/Background';\r\n\r\nimport {\r\n  KeyboardArrowDownSVGIcon as ArrowDown,\r\n  KeyboardArrowUpSVGIcon as ArrowUp\r\n} from '@react-md/material-icons';\r\n\r\nimport Button from '../../elementalComponents/Button';\r\n\r\n//Conditionally applying inline styles and Classes or Action\r\n/* When using inline styles or classes or action, we might also want to apply or remove styles or classes or action based on the state of the component. \r\nWe can easily add conditional styles using the ternary operator.\r\n*/\r\n\r\nconst MenuList = ({ open, items, onSelect }) => {\r\n  return open ? (\r\n    <ul className=\"Menu__List\">\r\n      {items.map((item, i) => (\r\n        <li\r\n          key={`${item}_${i}`}\r\n          onClick={(evt) => {\r\n            onSelect(evt, item);\r\n          }}\r\n          className=\"Menu__Item\"\r\n        >\r\n          {item}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  ) : null;\r\n};\r\n\r\nclass Menu extends Component {\r\n  state = {\r\n    open: this.props.open || false\r\n  };\r\n\r\n  close = (evt) => {\r\n    evt.preventDefault();\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  toggle = (evt) => {\r\n    evt.preventDefault();\r\n    this.setState((prevState) => ({ open: !prevState.open }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      className,\r\n      selected,\r\n      onSelect,\r\n      placeholder,\r\n      items,\r\n      noDropIcon\r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Background show={this.state.open} onClick={this.close} />\r\n        <div className={`Menu ${className}`}>\r\n          <header className=\"Menu__Header\">\r\n            {noDropIcon ? (\r\n              <Button\r\n                onClick={this.toggle}\r\n                notCased\r\n                className={selected ? null : 'Menu__Placeholder'}\r\n              >\r\n                {selected ? selected : placeholder}\r\n              </Button>\r\n            ) : (\r\n              <div\r\n                className={\r\n                  selected ? 'Menu__SelectedItem' : 'Menu__Placeholder'\r\n                }\r\n              >\r\n                {selected ? selected : placeholder}\r\n              </div>\r\n            )}\r\n            {noDropIcon ? null : (\r\n              <Button\r\n                icon={this.state.open ? ArrowUp : ArrowDown}\r\n                onClick={this.toggle}\r\n              />\r\n            )}\r\n          </header>\r\n          <MenuList\r\n            open={this.state.open}\r\n            items={items}\r\n            onSelect={(evt, item) => {\r\n              onSelect(item);\r\n              this.close(evt);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMenu.propTypes = {\r\n  className: PropTypes.string,\r\n  selected: PropTypes.string,\r\n  onSelect: PropTypes.func,\r\n  placeholder: PropTypes.string,\r\n  items: PropTypes.arrayOf(PropTypes.string),\r\n  noDropIcon: PropTypes.bool\r\n};\r\n\r\nexport default Menu;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport Button from '../../elementalComponents/Button';\r\nimport Switch from '../../elementalComponents/Switch';\r\nimport Menu from '../Menu';\r\n\r\nconst AppControls = ({\r\n  algorithm,\r\n  onAlgorithmChange,\r\n  onGenerateRandomArray,\r\n  arraySize,\r\n  onArraySizeChange,\r\n  onToggleDarkMode,\r\n  darkMode\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Menu\r\n        placeholder=\"-- Select Algorithm\"\r\n        items={[\r\n          'Bubble Sort',\r\n          'Selection Sort',\r\n          'Insertion Sort',\r\n          'Merge Sort',\r\n          'Quick Sort',\r\n          'Heap Sort'\r\n        ]}\r\n        selected={algorithm}\r\n        onSelect={onAlgorithmChange}\r\n      />\r\n\r\n      <div className=\"AppControls__Size\">\r\n        <span>Size</span>\r\n        <Menu\r\n          placeholder=\"Array Size\"\r\n          items={['5', '10', '25', '50', '75', '100']}\r\n          selected={String(arraySize)}\r\n          onSelect={onArraySizeChange}\r\n        />\r\n      </div>\r\n\r\n      <Button onClick={onGenerateRandomArray}>Randomize</Button>\r\n\r\n      <Switch\r\n        label=\"Dark Mode\"\r\n        onSwitch={onToggleDarkMode}\r\n        checked={darkMode}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAppControls.propTypes = {\r\n  algorithm: PropTypes.string,\r\n  onAlgorithmChange: PropTypes.func.isRequired,\r\n  onGenerateRandomArray: PropTypes.func.isRequired,\r\n  arraySize: PropTypes.number,\r\n  onArraySizeChange: PropTypes.func.isRequired,\r\n  onToggleDarkMode: PropTypes.func.isRequired,\r\n  darkMode: PropTypes.bool\r\n};\r\n\r\nexport default AppControls;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nimport Button from '../../elementalComponents/Button';\r\nimport { VscMenu as Menu, VscClose as Close } from 'react-icons/vsc';\r\n\r\nconst TopBar = ({ drawerOpen, toggleDrawer, children }) => {\r\n  return (\r\n    <header className=\"TopBar\">\r\n      <div className=\"TopBar__Row\">\r\n        <section className=\"TopBar__Section\">\r\n          <Button\r\n            icon={drawerOpen ? Close : Menu}\r\n            className=\"TopBar__MenuButton\"\r\n            iconClass=\"TopBar__Icon\"\r\n            onClick={toggleDrawer}\r\n          />\r\n          <span className=\"TopBar__Title\"><i class=\"cis-badge bg-success\"></i>&nbsp;&nbsp;All-sort-in-one Visualizer</span>\r\n        </section>\r\n        <section className=\"TopBar__Section TopBar__Section_align_end\">\r\n          {children}\r\n        </section>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { Fragment } from 'react';\r\nimport './style.css';\r\n\r\nimport Background from '../../elementalComponents/Background';\r\n\r\nconst AppDrawer = ({ open, children, closeDrawer }) => {\r\n  let className = 'AppDrawer';\r\n  className += open ? ` AppDrawer_open` : ` AppDrawer_closed`;\r\n  return (\r\n    <Fragment>\r\n      <div className={className}>\r\n        <div className=\"AppDrawer_Content\">{children}</div>\r\n      </div>\r\n      <Background show={open} onClick={closeDrawer} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AppDrawer;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Bar = ({\r\n  width,\r\n  height,\r\n  val,\r\n  stateA,\r\n  stateB,\r\n  stateC,\r\n  stateD,\r\n  sorted,\r\n  style\r\n}) => {\r\n  let classNames = 'Bar';\r\n  if (sorted) classNames += ' Bar_sorted';\r\n  if (stateD) classNames += ' Bar_stateD';\r\n  else if (stateC) classNames += ' Bar_stateC';\r\n  else if (stateB) classNames += ' Bar_stateB';\r\n  else if (stateA) classNames += ' Bar_stateA';\r\n\r\n  let BarStyle = { ...style, width: `${width}%`, height: `${height}%` };\r\n  if (stateA || stateB || stateC || stateD) {\r\n    BarStyle['marginRight'] = `${0.3 * width}%`;\r\n    BarStyle['marginLeft'] = `${0.3 * width}% `;\r\n  }\r\n\r\n  return (\r\n    <div style={BarStyle} className={classNames}>\r\n      <span className=\"Bar__Text\">{val}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport Bar from '../../elementalComponents/Bar';\r\n\r\nconst getListOfBars = (\r\n  numbers,\r\n  maxNum,\r\n  clusterA,\r\n  clusterB,\r\n  clusterC,\r\n  clusterD,\r\n  sortedIndices\r\n) => {\r\n  return numbers.map((num, i) => {\r\n    let width = 100 / numbers.length;\r\n    let height = (num / maxNum) * 100;\r\n    let stateA = clusterA.includes(i);\r\n    let stateB = clusterB.includes(i);\r\n    let stateC = clusterC.includes(i);\r\n    let stateD = clusterD.includes(i);\r\n    let sorted = sortedIndices.includes(i);\r\n\r\n    let margin =\r\n      i === numbers.length ? '0' : width > 3 ? '0.5rem' : '0.125rem';\r\n    return (\r\n      <Bar\r\n        key={`${i}_${num}`}\r\n        width={width}\r\n        height={height}\r\n        val={width > 4 ? num : null}\r\n        stateA={stateA}\r\n        stateB={stateB}\r\n        stateC={stateC}\r\n        stateD={stateD}\r\n        sorted={sorted}\r\n        style={{ marginRight: `${margin}` }}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\nconst SortChart = ({\r\n  numbers,\r\n  maxNum,\r\n  clusterA,\r\n  clusterB,\r\n  clusterC,\r\n  clusterD,\r\n  sortedIndices\r\n}) => {\r\n  return (\r\n    <div className=\"SortChart\">\r\n      {getListOfBars(\r\n        numbers,\r\n        maxNum,\r\n        clusterA,\r\n        clusterB,\r\n        clusterC,\r\n        clusterD,\r\n        sortedIndices\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nSortChart.propTypes = {\r\n  numbers: PropTypes.arrayOf(PropTypes.number),\r\n  maxNum: PropTypes.number,\r\n  clusterA: PropTypes.arrayOf(PropTypes.number),\r\n  clusterB: PropTypes.arrayOf(PropTypes.number),\r\n  clusterC: PropTypes.arrayOf(PropTypes.number),\r\n  clusterD: PropTypes.arrayOf(PropTypes.number),\r\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\r\n};\r\n\r\nexport default SortChart;\r\n","import React from 'react';\r\nimport './style.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../../elementalComponents/Button';\r\nimport {\r\n  MdPlayArrow as Play,\r\n  MdPause as Pause,\r\n  MdFastForward as Forward,\r\n  MdFastRewind as Backward,\r\n  MdCached as Repeat\r\n} from 'react-icons/md';\r\nimport Menu from '../Menu';\r\n\r\n// Helper function\r\nfunction isDisabled(action, disabled = false) {\r\n  return action === undefined || disabled;\r\n}\r\n\r\nconst VisualizerControls = ({\r\n  // Actions\r\n  onPlay,\r\n  onPause,\r\n  onBackward,\r\n  onForward,\r\n  onRepeat,\r\n  onAdjustSpeed,\r\n\r\n  // States\r\n  playing,\r\n  playDisabled,\r\n  pauseDisabled,\r\n  backwardDisabled,\r\n  forwardDisabled,\r\n  repeatDisabled,\r\n  playbackSpeed\r\n}) => {\r\n  return (\r\n    <div className=\"VisualizerControls\">\r\n      {/* Repeat */}\r\n      <Button\r\n        icon={Repeat}\r\n        onClick={onRepeat}\r\n        disabled={isDisabled(onRepeat, repeatDisabled)}\r\n        className=\"VisualizerControls__Button\"\r\n      />\r\n\r\n      {/* Backward Button  */}\r\n      <Button\r\n        icon={Backward}\r\n        onClick={onBackward}\r\n        disabled={isDisabled(onBackward, backwardDisabled)}\r\n        iconClass=\"VisualizerControls__Icon\"\r\n        className=\"VisualizerControls__Button\"\r\n      />\r\n\r\n      {/* Play or Pause button - context dependent */}\r\n      <Button\r\n        icon={playing ? Pause : Play}\r\n        onClick={playing ? onPause : onPlay}\r\n        disabled={\r\n          playing\r\n            ? isDisabled(onPause, pauseDisabled)\r\n            : isDisabled(onPlay, playDisabled)\r\n        }\r\n        raised\r\n        iconClass=\"VisualizerControls__Icon\"\r\n        className=\"VisualizerControls__CenterButton\"\r\n      />\r\n\r\n      {/* Forward Button  */}\r\n      <Button\r\n        icon={Forward}\r\n        onClick={onForward}\r\n        disabled={isDisabled(onForward, forwardDisabled)}\r\n        iconClass=\"VisualizerControls__Icon\"\r\n        className=\"VisualizerControls__Button\"\r\n      />\r\n\r\n      {/* Playback Speed */}\r\n      <Menu\r\n        items={['0.25x', '0.5x', '1x', '2x', '4x']}\r\n        placeholder=\"Speed\"\r\n        selected={`${playbackSpeed}x`} vf\r\n        onSelect={onAdjustSpeed}\r\n        noDropIcon\r\n        className=\"VisualizerControls__SpeedButton\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nVisualizerControls.propTypes = {\r\n  onPlay: PropTypes.func,\r\n  onPause: PropTypes.func,\r\n  onBackward: PropTypes.func,\r\n  onForward: PropTypes.func,\r\n  onRepeat: PropTypes.func,\r\n  onAdjustSpeed: PropTypes.func,\r\n\r\n  playing: PropTypes.bool,\r\n  playDisabled: PropTypes.bool,\r\n  pauseDisabled: PropTypes.bool,\r\n  backwardDisabled: PropTypes.bool,\r\n  forwardDisabled: PropTypes.bool,\r\n  repeatDisabled: PropTypes.bool,\r\n  playbackSpeed: PropTypes.number\r\n};\r\n\r\nexport default VisualizerControls;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst ProgressBar = ({ width }) => (\r\n  <div className=\"ProgressBar\">\r\n    <div\r\n      className=\"ProgressBar__Active\"\r\n      style={{\r\n        width: `${width}%`\r\n      }}\r\n    >{`${width}%`}</div>\r\n  </div>\r\n);\r\n\r\nProgressBar.propTypes = {\r\n  width: PropTypes.number.isRequired\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst ColorKey = ({ clusterA, clusterB, clusterC, clusterD }) => {\r\n  const keySorted =\r\n    clusterA || clusterB || clusterC || clusterD ? (\r\n      <div className=\"Item_Color\">\r\n        <div className=\"Color_Box Sorted_Color\"></div>\r\n        <span>Sorted</span>\r\n      </div>\r\n    ) : (\r\n      <div className=\"Item_Color\">\r\n        <div className=\"Color_Box Unsorted_Color\"></div>\r\n        <span>Unsorted</span>\r\n      </div>\r\n    );\r\n\r\n  const keyA = clusterA ? (\r\n    <div className=\"Item_Color\">\r\n      <div className=\"Color_Box Color__clusterA\"></div>\r\n      <span>{clusterA}</span>\r\n    </div>\r\n  ) : null;\r\n\r\n  const keyB = clusterB ? (\r\n    <div className=\"Item_Color\">\r\n      <div className=\"Color_Box Color__clusterB\"></div>\r\n      <span>{clusterB}</span>\r\n    </div>\r\n  ) : null;\r\n\r\n  const keyC = clusterC ? (\r\n    <div className=\"Item_Color\">\r\n      <div className=\"Color_Box Color__clusterC\"></div>\r\n      <span>{clusterC}</span>\r\n    </div>\r\n  ) : null;\r\n\r\n  const keyD = clusterD ? (\r\n    <div className=\"Item_Color\">\r\n      <div className=\"Color_Box Color__clusterD\"></div>\r\n      <span>{clusterD}</span>\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"ColorKey\">\r\n      {keySorted}\r\n      {keyA}\r\n      {keyB}\r\n      {keyC}\r\n      {keyD}\r\n    </div>\r\n  );\r\n};\r\n\r\nColorKey.propTypes = {\r\n  clusterA: PropTypes.string,\r\n  clusterB: PropTypes.string,\r\n  clusterC: PropTypes.string,\r\n  clusterD: PropTypes.string\r\n};\r\n\r\nexport default ColorKey;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nconst SortInfo = ({\r\n  title,\r\n  code,\r\n  description,\r\n  worstCase,\r\n  avgCase,\r\n  bestCase,\r\n  space\r\n}) => {\r\n  return (\r\n    <div className=\"SortInfo\">\r\n      <hr />\r\n      <h1><i class=\"cil-mood-very-good\"></i>&nbsp;{title ? title : 'Select Algorithm'}&nbsp;&nbsp;<i class=\"fas fa-laptop-code\"></i></h1>\r\n\r\n      <div className=\"SortInfo__Body\">\r\n        <article className=\"SortInfo_desc\">\r\n          {description ? (\r\n            description\r\n          ) : (\r\n            <p>\r\n              <span><i class=\"cil-sad\"></i>&nbsp;</span>You have to select an algorithm before you can visualize it's behavioral execution over an array.\r\n            </p>\r\n          )}\r\n        </article>\r\n\r\n        <aside className=\"SortInfo__right\">\r\n          <h3><span><i class=\"cil-graph\"></i>&nbsp;</span>Algorithm Performance</h3>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td><span><i class=\"cil-chart-line\"></i>&nbsp;</span>Worst-case time complexity</td>\r\n                <td>\r\n                  <code>{worstCase}</code>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td><span><i class=\"cil-chart-line\"></i>&nbsp;</span>Average time complexity</td>\r\n                <td>\r\n                  <code>{avgCase}</code>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td><span><i class=\"cil-chart-line\"></i>&nbsp;</span>Best-case time complexity</td>\r\n                <td>\r\n                  <code>{bestCase}</code>\r\n                </td>\r\n              </tr>\r\n\r\n              <tr>\r\n                <td><span><i class=\"cli-chart-line\"></i>&nbsp;</span>Worst-case space complexity</td>\r\n                <td>\r\n                  <code>{space}</code>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </aside>\r\n      </div><br></br>\r\n      <div>\r\n        {code ? code : \"Oops..!!! Select an algorithm to visualize and learn more !!\"}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSortInfo.propTypes = {\r\n  title: PropTypes.string,\r\n  code: PropTypes.object,\r\n  description: PropTypes.object,\r\n  worstCase: PropTypes.object,\r\n  avgCase: PropTypes.object,\r\n  bestCase: PropTypes.object,\r\n  space: PropTypes.object\r\n};\r\n\r\nexport default SortInfo;\r\n","import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\n// Sub components\r\nimport SortChart from '../SortChart';\r\nimport VisualizerControls from '../../subComponents/VisualizerControls';\r\nimport ProgressBar from '../../subComponents/ProgressBar';\r\nimport ColorKey from '../../subComponents/ColorClusters';\r\nimport SortInfo from '../../subComponents/SortInfo';\r\n\r\nclass SortVisualizer extends Component {\r\n  state = {\r\n    trace: [],\r\n    traceStep: -1,\r\n\r\n    originalArray: [],\r\n    array: [],\r\n    clusterA: [],\r\n    clusterB: [],\r\n    clusterC: [],\r\n    clusterD: [],\r\n    sortedIndices: [],\r\n\r\n    timeoutIds: [],\r\n    playbackSpeed: 1\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.array !== this.props.array) {\r\n      this._reset(this.props.array);\r\n    }\r\n    if (prevProps.trace !== this.props.trace) {\r\n      this.clearTimeouts();\r\n      this.setState({ trace: this.props.trace });\r\n    }\r\n  }\r\n\r\n  // Actions\r\n\r\n  _reset = (array) => {\r\n    this.setState({\r\n      array,\r\n      trace: [],\r\n      traceStep: -1,\r\n      clusterA: [],\r\n      clusterB: [],\r\n      clusterC: [],\r\n      clusterD: [],\r\n      sortedIndices: [],\r\n      originalArray: [...array]\r\n    });\r\n  };\r\n\r\n  clearTimeouts = () => {\r\n    this.state.timeoutIds.forEach((timeoutId) =>\r\n      clearTimeout(timeoutId)\r\n    );\r\n    this.setState({ timeoutIds: [] });\r\n  };\r\n\r\n  _changeVisualState = (visualState) => {\r\n    this.setState({\r\n      array: visualState.array,\r\n      clusterA: visualState.clusterA,\r\n      clusterB: visualState.clusterB,\r\n      clusterC: visualState.clusterC,\r\n      clusterD: visualState.clusterD,\r\n      sortedIndices: visualState.sortedIndices\r\n    });\r\n  };\r\n\r\n  run = (trace) => {\r\n    const timeoutIds = [];\r\n    const timer = 250 / this.state.playbackSpeed;\r\n\r\n    // Set a timeout for each item in the trace\r\n    trace.forEach((item, i) => {\r\n      let timeoutId = setTimeout(\r\n        (item) => {\r\n          this.setState(\r\n            (prevState) => ({\r\n              traceStep: prevState.traceStep + 1\r\n            }),\r\n            this._changeVisualState(item)\r\n          );\r\n        },\r\n        i * timer,\r\n        item\r\n      );\r\n\r\n      timeoutIds.push(timeoutId);\r\n    });\r\n\r\n    // Clear timeouts upon completion\r\n    let timeoutId = setTimeout(\r\n      this.clearTimeouts,\r\n      trace.length * timer\r\n    );\r\n    timeoutIds.push(timeoutId);\r\n\r\n    this.setState({ timeoutIds });\r\n  };\r\n\r\n  pause = () => {\r\n    this.clearTimeouts();\r\n  };\r\n\r\n  continue = () => {\r\n    const trace = this.state.trace.slice(this.state.traceStep);\r\n    this.run(trace);\r\n  };\r\n\r\n  stepForward = () => {\r\n    const trace = this.state.trace;\r\n    const step = this.state.traceStep;\r\n    if (step < trace.length - 1) {\r\n      const item = trace[step + 1];\r\n      this.setState(\r\n        { traceStep: step + 1 },\r\n        this._changeVisualState(item)\r\n      );\r\n    }\r\n  };\r\n\r\n  stepBackward = () => {\r\n    const trace = this.state.trace;\r\n    const step = this.state.traceStep;\r\n    if (step > 0) {\r\n      const item = trace[step - 1];\r\n      this.setState(\r\n        { traceStep: step - 1 },\r\n        this._changeVisualState(item)\r\n      );\r\n    }\r\n  };\r\n\r\n  repeat = () => {\r\n    this.clearTimeouts();\r\n    this.setState((prevState) => ({\r\n      array: [...prevState.originalArray],\r\n      traceStep: -1,\r\n      comparing: [],\r\n      compared: [],\r\n      sorted: []\r\n    }));\r\n    this.run(this.state.trace);\r\n  };\r\n\r\n  adjustPlaybackSpeed = (speed) => {\r\n    const playing = this.state.timeoutIds.length > 0;\r\n    this.pause();\r\n    const playbackSpeed = Number(speed.split('x')[0]);\r\n    this.setState({ playbackSpeed }, () => {\r\n      if (playing) this.continue();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SortVisualizer\">\r\n        <SortChart\r\n          numbers={this.state.array}\r\n          maxNum={Math.max(...this.state.array)}\r\n          clusterA={this.state.clusterA}\r\n          clusterB={this.state.clusterB}\r\n          clusterC={this.state.clusterC}\r\n          clusterD={this.state.clusterD}\r\n          sortedIndices={this.state.sortedIndices}\r\n        />\r\n\r\n        <div className=\"SortVisualizer__ProgressBar\">\r\n          <ProgressBar\r\n            width={\r\n              this.state.trace.length > 0\r\n                ? (this.state.traceStep /\r\n                    (this.state.trace.length - 1)) *\r\n                  100\r\n                : 0\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <VisualizerControls\r\n          onPlay={\r\n            this.state.traceStep === -1\r\n              ? this.run.bind(this, this.state.trace)\r\n              : this.continue.bind(this)\r\n          }\r\n          onPause={this.pause.bind(this)}\r\n          onForward={this.stepForward.bind(this)}\r\n          onBackward={this.stepBackward.bind(this)}\r\n          onRepeat={this.repeat.bind(this)}\r\n          onAdjustSpeed={this.adjustPlaybackSpeed}\r\n          playing={this.state.timeoutIds.length > 0}\r\n          playDisabled={\r\n            (this.state.traceStep >= this.state.trace.length - 1 &&\r\n              this.state.traceStep !== -1) ||\r\n            this.state.trace.length <= 0\r\n          }\r\n          forwardDisabled={\r\n            this.state.traceStep >= this.state.trace.length - 1\r\n          }\r\n          backwardDisabled={this.state.traceStep <= 0}\r\n          repeatDisabled={this.state.traceStep <= 0}\r\n          playbackSpeed={this.state.playbackSpeed}\r\n        />\r\n\r\n        <ColorKey {...this.props.colorKey} />\r\n\r\n        <SortInfo {...this.props.desc} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortVisualizer;\r\n","import { FC, useMemo, lazy, LazyExoticComponent } from \"react\";\r\n\r\nfunction fakeImport<P>(\r\n  Component: FC<P>,\r\n  delay: number\r\n): Promise<{ default: FC<P> }> {\r\n  return new Promise((resolve) => {\r\n    window.setTimeout(() => {\r\n      resolve({ default: Component });\r\n    }, delay);\r\n  });\r\n}\r\n\r\n/**\r\n * This is a hook that will allow lazily import a component each time the `Component`\r\n * changes or the `key` changes so that it can work with `Suspense` from React.\r\n *\r\n *\r\n * You should probably never do this... but this is a way to make it so that\r\n * the lazy loaded component can be re-loaded infinitely after resetting the\r\n * demo. Without this, the lazy implementation will immediately resolve the\r\n * fake import and not show any progress\r\n */\r\nexport default function useFakeLazyImport<P = {}>(\r\n  Component: FC<P>,\r\n  key: string | number | null = null,\r\n  delay = 5000\r\n): LazyExoticComponent<FC<P>> {\r\n  // disabled since this is really hacky and want it to also update if the key changes\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  return useMemo(() => lazy(() => fakeImport(Component, delay)), [\r\n    Component,\r\n    key,\r\n    delay,\r\n  ]);\r\n}","import React, { forwardRef, HTMLAttributes, ReactNode } from \"react\";\r\n\r\nimport cn from \"classnames\";\r\n\r\n//import styles from \"../../sortingAlgorithms/__colorHub/scss/Container.module.scss\";\r\n\r\ninterface Props extends HTMLAttributes<HTMLDivElement> {\r\n  children: ReactNode;\r\n}\r\n\r\nexport default forwardRef<HTMLDivElement, Props>(function Container(\r\n  { children, className, ...props },\r\n  ref\r\n) {\r\n  return (\r\n    <div {...props} className={cn(className)} ref={ref}>\r\n      {children}\r\n    </div>\r\n  );\r\n});","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageBu1(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Bubble Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C program for implementation of Bubble sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;stdio.h&gt; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">swap(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">*xp, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">*yp) </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">temp = *xp; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*xp = *yp; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*yp = temp; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"comments\">&#47;&#47; A function to implement bubble sort </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"keyword bold\">void</code> <code className=\"plain\">bubbleSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n) </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i, j; </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; n-1; i++)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Last i elements are already in place&nbsp;&nbsp;&nbsp; </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(j = 0; j &lt; n-i-1; j++)&nbsp; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[j] &gt; arr[j+1]) </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">swap(&amp;arr[j], &amp;arr[j+1]); </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"comments\">&#47;&#8727; Function to print an array &#8727;&#47;</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">size) </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i=0; i &lt; size; i++) </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"%d \"</code><code className=\"plain\">, arr[i]); </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"comments\">&#47;&#47; Driver program to test above functions </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main() </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123;64, 34, 25, 12, 22, 11, 90&#125;; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr)/</code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]); </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">bubbleSort(arr, n); </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"Sorted array: \\n\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n); </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0; </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageBu2(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C++</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Bubble Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C++ program for implementation of Bubble sort&nbsp; </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;bits/stdc++.h&gt; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">swap(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">*xp, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">*yp)&nbsp; </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">temp = *xp;&nbsp; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*xp = *yp;&nbsp; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*yp = temp;&nbsp; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"comments\">&#47;&#47; A function to implement bubble sort&nbsp; </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">bubbleSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n)&nbsp; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i, j;&nbsp; </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; n-1; i++)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Last i elements are already in place&nbsp; </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(j = 0; j &lt; n-i-1; j++)&nbsp; </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[j] &gt; arr[j+1])&nbsp; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">swap(&amp;arr[j], &amp;arr[j+1]);&nbsp; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"comments\">&#47;&#8727; Function to print an array &#8727;&#47;</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">size)&nbsp; </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i;&nbsp; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; size; i++)&nbsp; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; arr[i] &lt;&lt; </code><code className=\"string\">\" \"</code><code className=\"plain\">;&nbsp; </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; endl;&nbsp; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"comments\">&#47;&#47; Driver code&nbsp; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main()&nbsp; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123;64, 34, 25, 12, 22, 11, 90&#125;;&nbsp; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr)/</code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]);&nbsp; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">bubbleSort(arr, n);&nbsp; </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout&lt;&lt;</code><code className=\"string\">\"Sorted array: \\n\"</code><code className=\"plain\">;&nbsp; </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n);&nbsp; </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0;&nbsp; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Recursive </b>Implementation of Bubble Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C/C++ program for recursive implementation</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; of Bubble sort</code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"preprocessor\">#include &lt;bits/stdc++.h&gt;</code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std;</code></div>\r\n                  <div className=\"line number5 index4 alt2\">&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"comments\">&#47;&#47; A function to implement bubble sort</code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">bubbleSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n)</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Base case</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(n == 1)</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number12 index11 alt1\">&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; One pass of bubble sort. After</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; this pass, the largest element</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; is moved (or bubbled) to end.</code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i=0; i&lt;n-1; i++)</code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[i] &gt; arr[i+1])</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">swap(arr[i], arr[i+1]);</code></div>\r\n                  <div className=\"line number19 index18 alt2\">&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Largest element is fixed,</code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; recur for remaining array</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">bubbleSort(arr, n-1);</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number24 index23 alt1\">&nbsp;</div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"comments\">&#47;&#8727; Function to print an array &#8727;&#47;</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n)</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i=0; i &lt; n; i++)</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"%d \"</code><code className=\"plain\">, arr[i]);</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number32 index31 alt1\">&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"comments\">&#47;&#47; Driver program to test above functions</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main()</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123;64, 34, 25, 12, 22, 11, 90&#125;;</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr)/</code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]);</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">bubbleSort(arr, n);</code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"Sorted array : \\n\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n);</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0;</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageBu3(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Python</Text>\r\n        <Text>\r\n          <code>\r\n          <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Bubble Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Python program for implementation of Bubble Sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number3 index2 alt2 highlighted\"><code className=\"keyword\">def</code> <code className=\"plain\">bubbleSort(arr): </code></div>\r\n                  <div className=\"line number4 index3 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">n </code><code className=\"keyword\">=</code> <code className=\"functions\">len</code><code className=\"plain\">(arr) </code></div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Traverse through all array elements </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(n): </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Last i elements are already in place </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">j </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(</code><code className=\"value\">0</code><code className=\"plain\">, n</code><code className=\"keyword\">-</code><code className=\"plain\">i</code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">): </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># traverse the array from 0 to n-i-1 </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Swap if the element found is greater </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># than the next element </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">arr[j] &gt; arr[j</code><code className=\"keyword\">+</code><code className=\"value\">1</code><code className=\"plain\">] : </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j], arr[j</code><code className=\"keyword\">+</code><code className=\"value\">1</code><code className=\"plain\">] </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[j</code><code className=\"keyword\">+</code><code className=\"value\">1</code><code className=\"plain\">], arr[j] </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"comments\"># Driver code to test above </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"plain\">arr </code><code className=\"keyword\">=</code> <code className=\"plain\">[</code><code className=\"value\">64</code><code className=\"plain\">, </code><code className=\"value\">34</code><code className=\"plain\">, </code><code className=\"value\">25</code><code className=\"plain\">, </code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">22</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">90</code><code className=\"plain\">] </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"plain\">bubbleSort(arr) </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"functions\">print</code> <code className=\"plain\">(</code><code className=\"string\">\"Sorted array is:\"</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(</code><code className=\"functions\">len</code><code className=\"plain\">(arr)): </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code> <code className=\"plain\">(</code><code className=\"string\">\"%d\"</code> <code className=\"keyword\">%</code><code className=\"plain\">arr[i]),&nbsp; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Recursive </b>Implementation of Bubble Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Python Program for implementation of</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\"># Recursive Bubble sort</code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">class</code> <code className=\"plain\">bubbleSort:</code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">\"\"\"</code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">bubbleSort:</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">function:</code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">bubbleSortRecursive : recursive </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">function to sort array</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">__str__ : format print of array</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">__init__ : constructor </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">function in python</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">variables:</code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">self.array = contains array</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">self.length = length of array</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">\"\"\"</code></div>\r\n                  <div className=\"line number16 index15 alt1\">&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">def</code> <code className=\"plain\">__init__(</code><code className=\"color1\">self</code><code className=\"plain\">, array):</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1\">self</code><code className=\"plain\">.array </code><code className=\"keyword\">=</code> <code className=\"plain\">array</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1\">self</code><code className=\"plain\">.length </code><code className=\"keyword\">=</code> <code className=\"functions\">len</code><code className=\"plain\">(array)</code></div>\r\n                  <div className=\"line number20 index19 alt1\">&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">def</code> <code className=\"plain\">__str__(</code><code className=\"color1\">self</code><code className=\"plain\">):</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"string\">\" \"</code><code className=\"plain\">.join([</code><code className=\"functions\">str</code><code className=\"plain\">(x) </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">x </code><code className=\"keyword\">in</code> <code className=\"color1\">self</code><code className=\"plain\">.array])</code></div>\r\n                  <div className=\"line number24 index23 alt1\">&nbsp;</div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">def</code> <code className=\"plain\">bubbleSortRecursive(</code><code className=\"color1\">self</code><code className=\"plain\">, n</code><code className=\"keyword\">=</code><code className=\"color1\">None</code><code className=\"plain\">):</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">n </code><code className=\"keyword\">is</code> <code className=\"color1\">None</code><code className=\"plain\">:</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">n </code><code className=\"keyword\">=</code> <code className=\"color1\">self</code><code className=\"plain\">.length</code></div>\r\n                  <div className=\"line number28 index27 alt1\">&nbsp;</div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Base case</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">n </code><code className=\"keyword\">=</code><code className=\"keyword\">=</code> <code className=\"value\">1</code><code className=\"plain\">:</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code></div>\r\n                  <div className=\"line number32 index31 alt1\">&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># One pass of bubble sort. After</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># this pass, the largest element</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># is moved (or bubbled) to end.</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(n </code><code className=\"keyword\">-</code> <code className=\"value\">1</code><code className=\"plain\">):</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"color1\">self</code><code className=\"plain\">.array[i] &gt; </code><code className=\"color1\">self</code><code className=\"plain\">.array[i </code><code className=\"keyword\">+</code> <code className=\"value\">1</code><code className=\"plain\">]:</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1\">self</code><code className=\"plain\">.array[i], </code><code className=\"color1\">self</code><code className=\"plain\">.array[i </code><code className=\"keyword\">+</code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"value\">1</code><code className=\"plain\">] </code><code className=\"keyword\">=</code> <code className=\"color1\">self</code><code className=\"plain\">.array[i </code><code className=\"keyword\">+</code> <code className=\"value\">1</code><code className=\"plain\">], </code><code className=\"color1\">self</code><code className=\"plain\">.array[i]</code></div>\r\n                  <div className=\"line number40 index39 alt1\">&nbsp;</div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Largest element is fixed,</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">#&nbsp; recur for remaining array</code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1\">self</code><code className=\"plain\">.bubbleSortRecursive(n </code><code className=\"keyword\">-</code> <code className=\"value\">1</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number44 index43 alt1\">&nbsp;</div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"comments\"># Driver Code</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"keyword\">def</code> <code className=\"plain\">main():</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">array </code><code className=\"keyword\">=</code> <code className=\"plain\">[</code><code className=\"value\">64</code><code className=\"plain\">, </code><code className=\"value\">34</code><code className=\"plain\">, </code><code className=\"value\">25</code><code className=\"plain\">, </code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">22</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">90</code><code className=\"plain\">]</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Creating object for class</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">sort </code><code className=\"keyword\">=</code> <code className=\"plain\">bubbleSort(array)</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Sorting array</code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">sort.bubbleSortRecursive()</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">print</code><code className=\"plain\">(</code><code className=\"string\">\"Sorted array :\\n\"</code><code className=\"plain\">, sort)</code></div>\r\n                  <div className=\"line number55 index54 alt2\">&nbsp;</div>\r\n                  <div className=\"line number56 index55 alt1\">&nbsp;</div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"keyword\">if</code> <code className=\"plain\">__name__ </code><code className=\"keyword\">=</code><code className=\"keyword\">=</code> <code className=\"string\">\"__main__\"</code><code className=\"plain\">:</code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">main()</code></div>\r\n                  <div className=\"line number59 index58 alt2\">&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageBu4(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Java</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Bubble Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Java program for implementation of Bubble Sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">BubbleSort </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number4 index3 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">bubbleSort(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[]) </code></div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length; </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = </code><code className=\"value\">0</code><code className=\"plain\">; i &lt; n-</code><code className=\"value\">1</code><code className=\"plain\">; i++) </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">j = </code><code className=\"value\">0</code><code className=\"plain\">; j &lt; n-i-</code><code className=\"value\">1</code><code className=\"plain\">; j++) </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[j] &gt; arr[j+</code><code className=\"value\">1</code><code className=\"plain\">]) </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; swap arr[j+1] and arr[j] </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp = arr[j]; </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j] = arr[j+</code><code className=\"value\">1</code><code className=\"plain\">]; </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j+</code><code className=\"value\">1</code><code className=\"plain\">] = temp; </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Prints the array &#8727;&#47;</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[]) </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i=</code><code className=\"value\">0</code><code className=\"plain\">; i&lt;n; ++i) </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.print(arr[i] + </code><code className=\"string\">\" \"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(); </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver method to test above </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String args[]) </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">BubbleSort ob = </code><code className=\"keyword\">new</code> <code className=\"plain\">BubbleSort(); </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123;</code><code className=\"value\">64</code><code className=\"plain\">, </code><code className=\"value\">34</code><code className=\"plain\">, </code><code className=\"value\">25</code><code className=\"plain\">, </code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">22</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">90</code><code className=\"plain\">&#125;; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">ob.bubbleSort(arr); </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Sorted array\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">ob.printArray(arr); </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Recursive </b>Implementation of Bubble Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Java program for recursive implementation</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; of Bubble sort</code></div>\r\n                  <div className=\"line number3 index2 alt2\">&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"keyword\">import</code> <code className=\"plain\">java.util.Arrays;</code></div>\r\n                  <div className=\"line number5 index4 alt2\">&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"keyword\">public</code> <code className=\"keyword\">class</code> <code className=\"plain\">GFG </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; A function to implement bubble sort</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">bubbleSort(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[], </code><code className=\"keyword\">int</code> <code className=\"plain\">n)</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Base case</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(n == </code><code className=\"value\">1</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; One pass of bubble sort. After</code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; this pass, the largest element</code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; is moved (or bubbled) to end.</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i=</code><code className=\"value\">0</code><code className=\"plain\">; i&lt;n-</code><code className=\"value\">1</code><code className=\"plain\">; i++)</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[i] &gt; arr[i+</code><code className=\"value\">1</code><code className=\"plain\">])</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; swap arr[i], arr[i+1]</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp = arr[i];</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i] = arr[i+</code><code className=\"value\">1</code><code className=\"plain\">];</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i+</code><code className=\"value\">1</code><code className=\"plain\">] = temp;</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Largest element is fixed,</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; recur for remaining array</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">bubbleSort(arr, n-</code><code className=\"value\">1</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver Method</code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String[] args)</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123;</code><code className=\"value\">64</code><code className=\"plain\">, </code><code className=\"value\">34</code><code className=\"plain\">, </code><code className=\"value\">25</code><code className=\"plain\">, </code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">22</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">90</code><code className=\"plain\">&#125;;</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">bubbleSort(arr, arr.length);</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Sorted array : \"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(Arrays.toString(arr));</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageBu5(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C#</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Bubble Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C# program for implementation&nbsp; </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; of Bubble Sort </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">using</code> <code className=\"plain\">System; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">bubbleSort(</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr) </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length; </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 0; i &lt; n - 1; i++) </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">j = 0; j &lt; n - i - 1; j++) </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[j] &gt; arr[j + 1]) </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; swap temp and arr[i] </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp = arr[j]; </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j] = arr[j + 1]; </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j + 1] = temp; </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Prints the array &#8727;&#47;</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr) </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length; </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 0; i &lt; n; ++i) </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(arr[i] + </code><code className=\"string\">\" \"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(); </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver method </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main() </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr = &#123;64, 34, 25, 12, 22, 11, 90&#125;; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">bubbleSort(arr); </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"Sorted array\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr); </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Recursive </b>Implementation of Bubble Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C# program for recursive </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; implementation of Bubble sort</code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">using</code> <code className=\"plain\">System;</code></div>\r\n                  <div className=\"line number4 index3 alt1\">&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number7 index6 alt2\">&nbsp;</div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"comments\">&#47;&#47; A function to implement</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"comments\">&#47;&#47; bubble sort</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">bubbleSort(</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr,&nbsp;&nbsp; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n)</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Base case</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(n == 1)</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number16 index15 alt1\">&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; One pass of bubble </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; sort. After this pass,</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; the largest element</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; is moved (or bubbled) </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; to end.</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 0; i &lt; n - 1; i++)</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[i] &gt; arr[i + 1])</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; swap arr[i], arr[i+1]</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp = arr[i];</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i] = arr[i + 1];</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i + 1] = temp;</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number30 index29 alt1\">&nbsp;</div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Largest element is fixed,</code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; recur for remaining array</code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">bubbleSort(arr, n - 1);</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number35 index34 alt2\">&nbsp;</div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"comments\">&#47;&#47; Driver code</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main()</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr = &#123;64, 34, 25, </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">12, 22, 11, 90&#125;;</code></div>\r\n                  <div className=\"line number41 index40 alt2\">&nbsp;</div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">bubbleSort(arr, arr.Length);</code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"Sorted array : \"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code><code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 0; i &lt; arr.Length; i++)</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(arr[i] + </code><code className=\"string\">\" \"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number49 index48 alt2\">&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageBu6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in PHP</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Bubble Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"plain\">&lt;?php&nbsp; </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; PHP program for implementation&nbsp; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"comments\">&#47;&#47; of Bubble Sort </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"keyword\">function</code> <code className=\"plain\">bubbleSort(&amp;</code><code className=\"variable\">$arr</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$n</code> <code className=\"plain\">= sizeof(</code><code className=\"variable\">$arr</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Traverse through all array elements </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code><code className=\"plain\">(</code><code className=\"variable\">$i</code> <code className=\"plain\">= 0; </code><code className=\"variable\">$i</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$n</code><code className=\"plain\">; </code><code className=\"variable\">$i</code><code className=\"plain\">++)&nbsp; </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Last i elements are already in place </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"variable\">$j</code> <code className=\"plain\">= 0; </code><code className=\"variable\">$j</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$n</code> <code className=\"plain\">- </code><code className=\"variable\">$i</code> <code className=\"plain\">- 1; </code><code className=\"variable\">$j</code><code className=\"plain\">++)&nbsp; </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; traverse the array from 0 to n-i-1 </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Swap if the element found is greater </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; than the next element </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code><code className=\"plain\">] &gt; </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code><code className=\"plain\">+1]) </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$t</code> <code className=\"plain\">= </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code><code className=\"plain\">]; </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code><code className=\"plain\">] = </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code><code className=\"plain\">+1]; </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code><code className=\"plain\">+1] = </code><code className=\"variable\">$t</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number26 index25 alt1 highlighted\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"comments\">&#47;&#47; Driver code to test above </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"variable\">$arr</code> <code className=\"plain\">= </code><code className=\"keyword\">array</code><code className=\"plain\">(64, 34, 25, 12, 22, 11, 90); </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"variable\">$len</code> <code className=\"plain\">= sizeof(</code><code className=\"variable\">$arr</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"plain\">bubbleSort(</code><code className=\"variable\">$arr</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"functions\">echo</code> <code className=\"string\">\"Sorted array : \\n\"</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"variable\">$i</code> <code className=\"plain\">= 0; </code><code className=\"variable\">$i</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$len</code><code className=\"plain\">; </code><code className=\"variable\">$i</code><code className=\"plain\">++) </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">echo</code> <code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">].</code><code className=\"string\">\" \"</code><code className=\"plain\">;&nbsp; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { FC, Suspense, useState } from \"react\";\r\nimport { AppBar } from \"@react-md/app-bar\";\r\nimport { CircularProgress } from \"@react-md/progress\";\r\nimport { Tabs, TabsManager } from \"@react-md/tabs\";\r\nimport { CrossFade } from \"@react-md/transition\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport useFakeLazyImport from \"../../useFakeLazyImport\";\r\n\r\nimport Container from \"../../Container\";\r\nimport PageBu1 from \"./CodingwithC\";\r\nimport PageBu2 from \"./CodingwithCpp\";\r\nimport PageBu3 from \"./CodingwithPython\";\r\nimport PageBu4 from \"./CodingwithJava\";\r\nimport PageBu5 from \"./CodingwithC#\";\r\nimport PageBu6 from \"./CodingwithPHP\";\r\n\r\ninterface CurrentPageProps {\r\n  page: number;\r\n}\r\n\r\nconst CurrentPage: FC<CurrentPageProps> = ({ page }) => {\r\n  let content = <PageBu1 />;\r\n  if (page === 1) {\r\n    content = <PageBu2 />;\r\n  } else if (page === 2) {\r\n    content = <PageBu3 />;\r\n  } else if (page === 3) {\r\n    content = <PageBu4 />;\r\n  } else if (page === 4) {\r\n    content = <PageBu5 />;\r\n  } else if (page === 5) {\r\n    content = <PageBu6 />;\r\n  }\r\n\r\n  return <CrossFade>{content}</CrossFade>;\r\n};\r\n\r\nconst CrossFadeExamplesAsyncBubble: FC = () => {\r\n  // just make it so it doesn't start loading until a new tab is shown\r\n  const [page, setPage] = useState<number>(-1);\r\n  const Content = useFakeLazyImport<CurrentPageProps>(CurrentPage, page, 5000);\r\n\r\n  return (\r\n    <>\r\n      <TabsManager\r\n        activeIndex={page === -1 ? 0 : page}\r\n        onActiveIndexChange={(index) => setPage(index)}\r\n        tabs={[\"C\", \"C++\", \"Python\",\"Java\",\"C#\",\"PHP\"]}\r\n        tabsId=\"static-transition\"\r\n      >\r\n        <AppBar theme=\"default\">\r\n          <Tabs />\r\n        </AppBar>\r\n      </TabsManager>\r\n      <Container>\r\n        {page === -1 && (\r\n          <Text type=\"headline-6\">\r\n            {'Click on other tabs to start coding!'}\r\n          </Text>\r\n        )}\r\n        {page !== -1 && (\r\n          <Suspense fallback={<CircularProgress className=\"mt-4\" id=\"async-loading-progress\" />}>\r\n            <Content page={page} />\r\n          </Suspense>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrossFadeExamplesAsyncBubble;","import React, { FC } from \"react\";\r\nimport { Divider } from \"@react-md/divider\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport CrossFadeExamplesAsyncBubble from \"./CrossFadeElementBubble\";\r\n//import CrossFadeExamplesStatic from \"./CrossFadeExamplesStatic\";\r\n\r\nimport '../../../../../sortingAlgorithms/__colorHub/codestyle.css';\r\n\r\nconst ViewcodeBubble: FC = () => (\r\n  <>\r\n    <Text type=\"headline-6\" margin=\"bottom\">\r\n      <div className=\"mt-1\"></div>\r\n      <h3 className=\"text-primary bg-white badge font-bold mt-2\">Code Explorer</h3>\r\n    </Text>\r\n    \r\n    <Divider />\r\n    <Text type=\"headline-6\">\r\n      <span className=\"text-pink badge badge-darkest col-lock badge-pill\">Source Program in multiple</span>&nbsp;<span className=\"text-dark badge badge-pink col-lock badge-pill\">Programming Languages</span>\r\n    </Text>\r\n    <CrossFadeExamplesAsyncBubble />\r\n    <Divider />\r\n  </>\r\n);\r\n\r\nexport default ViewcodeBubble;","import React, { FC, useState } from \"react\";\r\nimport { Button } from \"@react-md/button\";\r\nimport { useCSSTransition } from \"@react-md/transition\";\r\n\r\n\r\nimport styles from './UseCSSTransition.module.scss';\r\nimport { ExpandMoreSVGIcon, StorageSVGIcon, TextIconSpacing } from \"react-md\";\r\nimport ViewcodeBubble from \"./viewcodebubble\";\r\n\r\nconst DemoBubble: FC = () => {\r\n  const [transitionIn, setTransitionIn] = useState(false);\r\n  const [rendered, transitionProps] = useCSSTransition({\r\n    // changing this value causes the transition behavior to change\r\n    transitionIn,\r\n\r\n    // 5 seconds just for demo purposes... can also be an object\r\n    timeout: 5000,\r\n\r\n    // can also use a string that gets BEM-ified instead\r\n    classNames: {\r\n      enter: styles.enter,\r\n      enterActive: styles.entering,\r\n      exit: styles.exit,\r\n      exitActive: styles.exiting,\r\n    },\r\n\r\n    // can also trigger the css transition on initial mount\r\n    // appear: false,\r\n\r\n    // changes the `rendered` value to be false while not transitioning and\r\n    // `transitionIn` is false\r\n    temporary: true,\r\n\r\n    // an optional className to merge with the transition classNames\r\n    // className: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"text-white\" theme=\"error\" themeType=\"contained\" onClick={() => setTransitionIn(!transitionIn)}>\r\n        <TextIconSpacing icon={<StorageSVGIcon />}>\r\n          <TextIconSpacing icon={<ExpandMoreSVGIcon />} iconAfter>\r\n            Expand Codes\r\n          </TextIconSpacing>\r\n        </TextIconSpacing>\r\n      </Button>\r\n      {rendered && <div {...transitionProps}><ViewcodeBubble /></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DemoBubble;","export const newTrace = (array) => {\r\n  return [\r\n    {\r\n      array: [...array],\r\n      clusterA: [],\r\n      clusterB: [],\r\n      clusterC: [],\r\n      clusterD: [],\r\n      sortedIndices: []\r\n    }\r\n  ];\r\n};\r\n\r\nexport const addToTrace = (\r\n  trace,\r\n  array,\r\n  sortedIndices = [],\r\n  clusterA = [],\r\n  clusterB = [],\r\n  clusterC = [],\r\n  clusterD = []\r\n) => {\r\n  trace.push({\r\n    array: [...array],\r\n    clusterA: [...clusterA],\r\n    clusterB: [...clusterB],\r\n    clusterC: [...clusterC],\r\n    clusterD: [...clusterD],\r\n    sortedIndices: [...sortedIndices]\r\n  });\r\n};\r\n\r\nexport const lastSorted = (trace) => {\r\n  return trace[trace.length - 1].sortedIndices;\r\n};\r\n\r\nexport const swap = (array, i, j) => {\r\n  const tmp = array[i];\r\n  array[i] = array[j];\r\n  array[j] = tmp;\r\n};\r\n\r\nexport const createRange = (start, end) => {\r\n  return [...Array(end - start).keys()].map((elem) => elem + start);\r\n};\r\n\r\nexport const createKey = (clusterA, clusterB, clusterC, clusterD) => {\r\n  return { clusterA, clusterB, clusterC, clusterD };\r\n};\r\n","import React from 'react';\r\nimport { Configuration } from 'react-md';\r\nimport DemoBubble from '../../utils/Program_codes/view_code/SortingAlgorithms/BubbleSort/togglerbubble';\r\nimport {\r\n  swap,\r\n  newTrace,\r\n  addToTrace,\r\n  lastSorted,\r\n  createKey\r\n} from './helpers';\r\n\r\nconst BubbleSort = (nums) => {\r\n  // Set up code for tracing the algorithm\r\n  const trace = newTrace(nums);\r\n\r\n  // Sorting Algorithm with trace capture\r\n  for (let i = 0; i < nums.length; i++) {\r\n    for (let j = 0; j < nums.length - i - 1; j++) {\r\n      // Visualize: Comparing A[j] and A[j + 1]\r\n      addToTrace(trace, nums, lastSorted(trace), [j, j + 1]);\r\n      if (nums[j] > nums[j + 1]) {\r\n        swap(nums, j, j + 1);\r\n        // Visualize: Swap A[j] and A[j + 1]\r\n        addToTrace(trace, nums, lastSorted(trace), [], [j, j + 1]);\r\n      }\r\n    }\r\n\r\n    // Visualize: final value is sorted\r\n    addToTrace(trace, nums, [\r\n      ...lastSorted(trace),\r\n      nums.length - 1 - i\r\n    ]);\r\n  }\r\n\r\n  return trace;\r\n};\r\n\r\nexport const BubbleSortKey = createKey('Comparing', 'Swapping');\r\nexport const BubbleSortDesc = {\r\n  title: 'Bubble Sort',\r\n    code: (\r\n      <div className=\"row mt-3 mb-0 text-center\">\r\n        <Configuration>\r\n            <DemoBubble />\r\n        </Configuration>\r\n      </div>\r\n    ),\r\n  description: (\r\n    <p>\r\n      <a\r\n        href=\"https://en.wikipedia.org/wiki/Bubble_sort\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <i class=\"cib-wikipedia\"></i>&nbsp;Bubble Sort\r\n      </a>{' '}\r\n      is a simple sorting algorithm that repeatedly steps through the\r\n      list, compares adjacent elements and swaps them if they are in the\r\n      wrong order.The pass through the list is repeated until the list\r\n      is sorted. The algorithm, which is a comparison sort, is named for\r\n      the way smaller or larger elements \"bubble\" to the top of the\r\n      list. Although the algorithm is simple, it is too slow and\r\n      impractical for most problems\r\n    </p>\r\n  ),\r\n  worstCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  avgCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  bestCase: <span>O(n)</span>,\r\n  space: <span>O(1)</span>\r\n};\r\nexport default BubbleSort;\r\n","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageR1(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C</Text>\r\n        <Text>\r\n          <code>\r\n          <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Selection Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C program for implementation of selection sort </code></div>\r\n                <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;stdio.h&gt; </code></div>\r\n                <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number4 index3 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">swap(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">*xp, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">*yp) </code></div>\r\n                <div className=\"line number5 index4 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">temp = *xp; </code></div>\r\n                <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*xp = *yp; </code></div>\r\n                <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*yp = temp; </code></div>\r\n                <div className=\"line number9 index8 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number11 index10 alt2 highlighted\"><code className=\"keyword bold\">void</code> <code className=\"plain\">selectionSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n) </code></div>\r\n                <div className=\"line number12 index11 alt1 highlighted\"><code className=\"plain\">&#123; </code></div>\r\n                <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i, j, min_idx; </code></div>\r\n                <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; One by one move boundary of unsorted subarray </code></div>\r\n                <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; n-1; i++) </code></div>\r\n                <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Find the minimum element in unsorted array </code></div>\r\n                <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">min_idx = i; </code></div>\r\n                <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(j = i+1; j &lt; n; j++) </code></div>\r\n                <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[j] &lt; arr[min_idx]) </code></div>\r\n                <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">min_idx = j; </code></div>\r\n                <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Swap the found minimum element with the first element </code></div>\r\n                <div className=\"line number25 index24 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">swap(&amp;arr[min_idx], &amp;arr[i]); </code></div>\r\n                <div className=\"line number26 index25 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                <div className=\"line number27 index26 alt2 highlighted\"><code className=\"plain\">&#125; </code></div>\r\n                <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number29 index28 alt2\"><code className=\"comments\">&#47;&#8727; Function to print an array &#8727;&#47;</code></div>\r\n                <div className=\"line number30 index29 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">size) </code></div>\r\n                <div className=\"line number31 index30 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i; </code></div>\r\n                <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i=0; i &lt; size; i++) </code></div>\r\n                <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"%d \"</code><code className=\"plain\">, arr[i]); </code></div>\r\n                <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">); </code></div>\r\n                <div className=\"line number36 index35 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number38 index37 alt1\"><code className=\"comments\">&#47;&#47; Driver program to test above functions </code></div>\r\n                <div className=\"line number39 index38 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main() </code></div>\r\n                <div className=\"line number40 index39 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123;64, 25, 12, 22, 11&#125;; </code></div>\r\n                <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr)/</code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]); </code></div>\r\n                <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">selectionSort(arr, n); </code></div>\r\n                <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"Sorted array: \\n\"</code><code className=\"plain\">); </code></div>\r\n                <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n); </code></div>\r\n                <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0; </code></div>\r\n                <div className=\"line number47 index46 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageR5(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C++</Text>\r\n        <Text>\r\n          <code>\r\n          <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Selection Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C++ program for implementation of selection sort&nbsp; </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;bits/stdc++.h&gt; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">swap(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">*xp, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">*yp)&nbsp; </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">temp = *xp;&nbsp; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*xp = *yp;&nbsp; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*yp = temp;&nbsp; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">selectionSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n)&nbsp; </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i, j, min_idx;&nbsp; </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; One by one move boundary of unsorted subarray&nbsp; </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; n-1; i++)&nbsp; </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Find the minimum element in unsorted array&nbsp; </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">min_idx = i;&nbsp; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(j = i+1; j &lt; n; j++)&nbsp; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[j] &lt; arr[min_idx])&nbsp; </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">min_idx = j;&nbsp; </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Swap the found minimum element with the first element&nbsp; </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">swap(&amp;arr[min_idx], &amp;arr[i]);&nbsp; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"comments\">&#47;&#8727; Function to print an array &#8727;&#47;</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">size)&nbsp; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i;&nbsp; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i=0; i &lt; size; i++)&nbsp; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; arr[i] &lt;&lt; </code><code className=\"string\">\" \"</code><code className=\"plain\">;&nbsp; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; endl;&nbsp; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"comments\">&#47;&#47; Driver program to test above functions&nbsp; </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main()&nbsp; </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123;64, 25, 12, 22, 11&#125;;&nbsp; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr)/</code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]);&nbsp; </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">selectionSort(arr, n);&nbsp; </code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"Sorted array: \\n\"</code><code className=\"plain\">;&nbsp; </code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n);&nbsp; </code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0;&nbsp; </code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"comments\">&#47;&#47; This code is collected from GeekforGekks. </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageR3(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Python</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Selection Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Python program for implementation of Selection </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\"># Sort </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">import</code> <code className=\"plain\">sys </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"plain\">A </code><code className=\"keyword\">=</code> <code className=\"plain\">[</code><code className=\"value\">64</code><code className=\"plain\">, </code><code className=\"value\">25</code><code className=\"plain\">, </code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">22</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">] </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"comments\"># Traverse through all array elements </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(</code><code className=\"functions\">len</code><code className=\"plain\">(A)): </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Find the minimum element in remaining&nbsp; </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># unsorted array </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">min_idx </code><code className=\"keyword\">=</code> <code className=\"plain\">i </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">j </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(i</code><code className=\"keyword\">+</code><code className=\"value\">1</code><code className=\"plain\">, </code><code className=\"functions\">len</code><code className=\"plain\">(A)): </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">A[min_idx] &gt; A[j]: </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">min_idx </code><code className=\"keyword\">=</code> <code className=\"plain\">j </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Swap the found minimum element with&nbsp; </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># the first element&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">A[i], A[min_idx] </code><code className=\"keyword\">=</code> <code className=\"plain\">A[min_idx], A[i] </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"comments\"># Driver code to test above </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"keyword\">print</code> <code className=\"plain\">(</code><code className=\"string\">\"Sorted array\"</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(</code><code className=\"functions\">len</code><code className=\"plain\">(A)): </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code><code className=\"plain\">(</code><code className=\"string\">\"%d\"</code> <code className=\"keyword\">%</code><code className=\"plain\">A[i]),&nbsp; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageR4(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Java</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Selection Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Java program for implementation of Selection Sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">SelectionSort </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number4 index3 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">sort(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[]) </code></div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length; </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; One by one move boundary of unsorted subarray </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = </code><code className=\"value\">0</code><code className=\"plain\">; i &lt; n-</code><code className=\"value\">1</code><code className=\"plain\">; i++) </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Find the minimum element in unsorted array </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">min_idx = i; </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">j = i+</code><code className=\"value\">1</code><code className=\"plain\">; j &lt; n; j++) </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[j] &lt; arr[min_idx]) </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">min_idx = j; </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Swap the found minimum element with the first </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; element </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp = arr[min_idx]; </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[min_idx] = arr[i]; </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i] = temp; </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Prints the array </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[]) </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i=</code><code className=\"value\">0</code><code className=\"plain\">; i&lt;n; ++i) </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.print(arr[i]+</code><code className=\"string\">\" \"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(); </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver code to test above </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String args[]) </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">SelectionSort ob = </code><code className=\"keyword\">new</code> <code className=\"plain\">SelectionSort(); </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123;</code><code className=\"value\">64</code><code className=\"plain\">,</code><code className=\"value\">25</code><code className=\"plain\">,</code><code className=\"value\">12</code><code className=\"plain\">,</code><code className=\"value\">22</code><code className=\"plain\">,</code><code className=\"value\">11</code><code className=\"plain\">&#125;; </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">ob.sort(arr); </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Sorted array\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">ob.printArray(arr); </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C#</Text>\r\n        <Text>\r\n          <code>\r\n          <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Selection Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C# program for implementation&nbsp; </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; of Selection Sort </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">using</code> <code className=\"plain\">System; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">sort(</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr) </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length; </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; One by one move boundary of unsorted subarray </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 0; i &lt; n - 1; i++) </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Find the minimum element in unsorted array </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">min_idx = i; </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">j = i + 1; j &lt; n; j++) </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[j] &lt; arr[min_idx]) </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">min_idx = j; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Swap the found minimum element with the first </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; element </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp = arr[min_idx]; </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[min_idx] = arr[i]; </code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i] = temp; </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number26 index25 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Prints the array </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr) </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i=0; i&lt;n; ++i) </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(arr[i]+</code><code className=\"string\">\" \"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(); </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver code&nbsp; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main() </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr = &#123;64,25,12,22,11&#125;; </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">sort(arr); </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"Sorted array\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr); </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageR6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in PHP</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Selection Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"plain\">&lt;?php </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; PHP program for implementation&nbsp; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"comments\">&#47;&#47; of selection sort&nbsp; </code></div>\r\n                  <div className=\"line number4 index3 alt1 highlighted\"><code className=\"keyword\">function</code> <code className=\"plain\">selection_sort(&amp;</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">)&nbsp; </code></div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code><code className=\"plain\">(</code><code className=\"variable\">$i</code> <code className=\"plain\">= 0; </code><code className=\"variable\">$i</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$n</code> <code className=\"plain\">; </code><code className=\"variable\">$i</code><code className=\"plain\">++) </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$low</code> <code className=\"plain\">= </code><code className=\"variable\">$i</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code><code className=\"plain\">(</code><code className=\"variable\">$j</code> <code className=\"plain\">= </code><code className=\"variable\">$i</code> <code className=\"plain\">+ 1; </code><code className=\"variable\">$j</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$n</code> <code className=\"plain\">; </code><code className=\"variable\">$j</code><code className=\"plain\">++) </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code><code className=\"plain\">] &lt; </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$low</code><code className=\"plain\">]) </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$low</code> <code className=\"plain\">= </code><code className=\"variable\">$j</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; swap the minimum value to $ith node </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">] &gt; </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$low</code><code className=\"plain\">]) </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$tmp</code> <code className=\"plain\">= </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">]; </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">] = </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$low</code><code className=\"plain\">]; </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$low</code><code className=\"plain\">] = </code><code className=\"variable\">$tmp</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"comments\">&#47;&#47; Driver Code </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"variable\">$arr</code> <code className=\"plain\">= </code><code className=\"keyword\">array</code><code className=\"plain\">(64, 25, 12, 22, 11); </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"variable\">$len</code> <code className=\"plain\">= </code><code className=\"functions\">count</code><code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"plain\">selection_sort(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$len</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"functions\">echo</code> <code className=\"string\">\"Sorted array : \\n\"</code><code className=\"plain\">;&nbsp; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"variable\">$i</code> <code className=\"plain\">= 0; </code><code className=\"variable\">$i</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$len</code><code className=\"plain\">; </code><code className=\"variable\">$i</code><code className=\"plain\">++)&nbsp; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">echo</code> <code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">] . </code><code className=\"string\">\" \"</code><code className=\"plain\">;&nbsp; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { FC, Suspense, useState } from \"react\";\r\nimport { AppBar } from \"@react-md/app-bar\";\r\nimport { CircularProgress } from \"@react-md/progress\";\r\nimport { Tabs, TabsManager } from \"@react-md/tabs\";\r\nimport { CrossFade } from \"@react-md/transition\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport useFakeLazyImport from \"../../useFakeLazyImport\";\r\n\r\nimport Container from \"../../Container\";\r\nimport PageR1 from \"./CodingwithC\";\r\nimport PageR2 from \"./CodingwithCpp\";\r\nimport PageR3 from \"./CodingwithPython\";\r\nimport PageR4 from \"./CodingwithJava\";\r\nimport PageR5 from \"./CodingwithC#\";\r\nimport PageR6 from \"./CodingwithPHP\";\r\n\r\ninterface CurrentPageProps {\r\n  page: number;\r\n}\r\n\r\nconst CurrentPage: FC<CurrentPageProps> = ({ page }) => {\r\n  let content = <PageR1 />;\r\n  if (page === 1) {\r\n    content = <PageR2 />;\r\n  } else if (page === 2) {\r\n    content = <PageR3 />;\r\n  } else if (page === 3) {\r\n    content = <PageR4 />;\r\n  } else if (page === 4) {\r\n    content = <PageR5 />;\r\n  } else if (page === 5) {\r\n    content = <PageR6 />;\r\n  }\r\n\r\n  return <CrossFade>{content}</CrossFade>;\r\n};\r\n\r\nconst CrossFadeExamplesAsyncSelection: FC = () => {\r\n  // just make it so it doesn't start loading until a new tab is shown\r\n  const [page, setPage] = useState<number>(-1);\r\n  const Content = useFakeLazyImport<CurrentPageProps>(CurrentPage, page, 5000);\r\n\r\n  return (\r\n    <>\r\n      <TabsManager\r\n        activeIndex={page === -1 ? 0 : page}\r\n        onActiveIndexChange={(index) => setPage(index)}\r\n        tabs={[\"C\", \"C++\", \"Python\",\"Java\",\"C#\",\"PHP\"]}\r\n        tabsId=\"static-transition\"\r\n      >\r\n        <AppBar theme=\"default\">\r\n          <Tabs />\r\n        </AppBar>\r\n      </TabsManager>\r\n      <Container>\r\n        {page === -1 && (\r\n          <Text type=\"headline-6\">\r\n            {'Click on other tabs to start coding!'}\r\n          </Text>\r\n        )}\r\n        {page !== -1 && (\r\n          <Suspense fallback={<CircularProgress className=\"mt-4\" id=\"async-loading-progress\" />}>\r\n            <Content page={page} />\r\n          </Suspense>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrossFadeExamplesAsyncSelection;","import React, { FC } from \"react\";\r\nimport { Divider } from \"@react-md/divider\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport CrossFadeExamplesAsyncSelection from \"./CrossFadeElementSelection\";\r\n//import CrossFadeExamplesStatic from \"./CrossFadeExamplesStatic\";\r\n\r\nimport '../../../../../sortingAlgorithms/__colorHub/codestyle.css';\r\n\r\nconst ViewcodeSelection: FC = () => (\r\n  <>\r\n    <Text type=\"headline-6\" margin=\"bottom\">\r\n      <div className=\"mt-1\"></div>\r\n      <h3 className=\"text-primary bg-white badge font-bold mt-2\">Code Explorer</h3>\r\n    </Text>\r\n    \r\n    <Divider />\r\n    <Text type=\"headline-6\">\r\n      <span className=\"text-pink badge badge-darkest col-lock badge-pill\">Source Program in multiple</span>&nbsp;<span className=\"text-dark badge badge-pink col-lock badge-pill\">Programming Languages</span>\r\n    </Text>\r\n    <CrossFadeExamplesAsyncSelection />\r\n    <Divider />\r\n  </>\r\n);\r\n\r\nexport default ViewcodeSelection;","import React, { FC, useState } from \"react\";\r\nimport { Button } from \"@react-md/button\";\r\nimport { useCSSTransition } from \"@react-md/transition\";\r\n\r\n\r\nimport styles from './UseCSSTransition.module.scss';\r\nimport { ExpandMoreSVGIcon, StorageSVGIcon, TextIconSpacing } from \"react-md\";\r\nimport ViewcodeSelection from \"./viewcodeselection\";\r\n\r\nconst DemoSelection: FC = () => {\r\n  const [transitionIn, setTransitionIn] = useState(false);\r\n  const [rendered, transitionProps] = useCSSTransition({\r\n    // changing this value causes the transition behavior to change\r\n    transitionIn,\r\n\r\n    // 5 seconds just for demo purposes... can also be an object\r\n    timeout: 5000,\r\n\r\n    // can also use a string that gets BEM-ified instead\r\n    classNames: {\r\n      enter: styles.enter,\r\n      enterActive: styles.entering,\r\n      exit: styles.exit,\r\n      exitActive: styles.exiting,\r\n    },\r\n\r\n    // can also trigger the css transition on initial mount\r\n    // appear: false,\r\n\r\n    // changes the `rendered` value to be false while not transitioning and\r\n    // `transitionIn` is false\r\n    temporary: true,\r\n\r\n    // an optional className to merge with the transition classNames\r\n    // className: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"text-white\" theme=\"error\" themeType=\"contained\" onClick={() => setTransitionIn(!transitionIn)}>\r\n        <TextIconSpacing icon={<StorageSVGIcon />}>\r\n          <TextIconSpacing icon={<ExpandMoreSVGIcon />} iconAfter>\r\n            Expand Codes\r\n          </TextIconSpacing>\r\n        </TextIconSpacing>\r\n      </Button>\r\n      {rendered && <div {...transitionProps}><ViewcodeSelection /></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DemoSelection;","import React from 'react';\r\nimport { Configuration } from 'react-md';\r\nimport DemoSelection from '../../utils/Program_codes/view_code/SortingAlgorithms/SelectionSort/togglerselection';\r\nimport {\r\n  swap,\r\n  newTrace,\r\n  addToTrace,\r\n  lastSorted,\r\n  createKey\r\n} from './helpers';\r\n\r\nconst SelectionSort = (nums) => {\r\n  // Initial State\r\n  const trace = newTrace(nums);\r\n\r\n  // Core Algorithm\r\n  for (let i = 0; i < nums.length - 1; i++) {\r\n    // Internal Loop: Find index of min value\r\n    let minIndex = i;\r\n    for (let j = i + 1; j < nums.length; j++) {\r\n      // Visualize: comparing A[j] to A[minIndex]\r\n      addToTrace(trace, nums, lastSorted(trace), [minIndex, j]);\r\n      if (nums[j] < nums[minIndex]) {\r\n        // Visualize: discovered new minIndex\r\n        addToTrace(trace, nums, lastSorted(trace), [minIndex], [j]);\r\n        minIndex = j;\r\n        // Visualize: reassign new minIndex;\r\n        addToTrace(trace, nums, lastSorted(trace), [minIndex], [j]);\r\n      }\r\n    }\r\n\r\n    // Visualize: i'th value to be swapped with min value\r\n    addToTrace(trace, nums, lastSorted(trace), [], [i, minIndex]);\r\n\r\n    swap(nums, i, minIndex);\r\n\r\n    // Visualize: i'th value has been swapped with min value\r\n    addToTrace(trace, nums, [...lastSorted(trace), i], [], []);\r\n  }\r\n\r\n  // Visualize: Final item in the array is sorted\r\n  addToTrace(trace, nums, [...lastSorted(trace), nums.length - 1]);\r\n\r\n  return trace;\r\n};\r\n\r\nexport const SelectionSortKey = createKey('Comparing', 'Swapping');\r\n\r\nexport const SelectionSortDesc = {\r\n  title: 'Selection Sort',\r\n  code: (\r\n    <div className=\"row mt-3 mb-0 text-center\">\r\n      <Configuration>\r\n          <DemoSelection />\r\n      </Configuration>\r\n    </div>\r\n  ),\r\n  description: (\r\n    <p>\r\n      <a\r\n        href=\"https://en.wikipedia.org/wiki/Selection_sort\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <i class=\"cib-wikipedia\"></i>&nbsp;Selection Sort\r\n      </a>{' '}\r\n      is an in-place comparison sorting algorithm that divides the input\r\n      list into two parts: the sublist of items already sorted, which is\r\n      built up from left to right at the front (left) of the list, and\r\n      the sublist of items remaining to be sorted that occupy the rest\r\n      of the list. Initially, the sorted sublist is empty and the\r\n      unsorted sublist is the entire input list. The algorithm proceeds\r\n      by finding the smallest element in the unsorted sublist,\r\n      exchanging (swapping) it with the leftmost unsorted element\r\n      (putting it in sorted order), and moving the sublist boundaries\r\n      one element to the right.\r\n    </p>\r\n  ),\r\n  worstCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  avgCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  bestCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  space: <span>O(1)</span>\r\n};\r\n\r\nexport default SelectionSort;\r\n","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageI1(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Insertion Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C program for insertion sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;math.h&gt; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"preprocessor\">#include &lt;stdio.h&gt; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"comments\">&#47;&#8727; Function to sort an array using insertion sort&#8727;&#47;</code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"keyword bold\">void</code> <code className=\"plain\">insertionSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n) </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i, key, j; </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 1; i &lt; n; i++) &#123; </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">key = arr[i]; </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j = i - 1; </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Move elements of arr[0..i-1], that are </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">greater than key, to one position ahead </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">of their current position &#8727;&#47;</code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(j &gt;= 0 &amp;&amp; arr[j] &gt; key) &#123; </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j + 1] = arr[j]; </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j = j - 1; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j + 1] = key; </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"comments\">&#47;&#47; A utility function to print an array of size n </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n) </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; n; i++) </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"%d \"</code><code className=\"plain\">, arr[i]); </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"comments\">&#47;&#8727; Driver program to test insertion sort &#8727;&#47;</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main() </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 12, 11, 13, 5, 6 &#125;; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]); </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">insertionSort(arr, n); </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n); </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageI2(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C++</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Insertion Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C++ program for insertion sort&nbsp; </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;bits/stdc++.h&gt; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"comments\">&#47;&#8727; Function to sort an array using insertion sort&#8727;&#47;</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">insertionSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n)&nbsp; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i, key, j;&nbsp; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 1; i &lt; n; i++) </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">key = arr[i];&nbsp; </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j = i - 1;&nbsp; </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Move elements of arr[0..i-1], that are&nbsp; </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">greater than key, to one position ahead&nbsp; </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">of their current position &#8727;&#47;</code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(j &gt;= 0 &amp;&amp; arr[j] &gt; key) </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j + 1] = arr[j];&nbsp; </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j = j - 1;&nbsp; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j + 1] = key;&nbsp; </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"comments\">&#47;&#47; A utility function to print an array of size n&nbsp; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n)&nbsp; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i;&nbsp; </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; n; i++)&nbsp; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; arr[i] &lt;&lt; </code><code className=\"string\">\" \"</code><code className=\"plain\">;&nbsp; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; endl; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"comments\">&#47;&#8727; Driver code &#8727;&#47;</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main()&nbsp; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 12, 11, 13, 5, 6 &#125;;&nbsp; </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]);&nbsp; </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">insertionSort(arr, n);&nbsp; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n);&nbsp; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0;&nbsp; </code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Recursive </b>Implementation of Insertion Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Recursive C++ program for insertion sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;iostream&gt; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"comments\">&#47;&#47; Recursive function to sort an array using </code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"comments\">&#47;&#47; insertion sort </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"keyword bold\">void</code> <code className=\"plain\">insertionSortRecursive(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n) </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Base case </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(n &lt;= 1) </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Sort first n-1 elements </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">insertionSortRecursive( arr, n-1 ); </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Insert last element at its correct position </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; in sorted array. </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">last = arr[n-1]; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">j = n-2; </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Move elements of arr[0..i-1], that are </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">greater than key, to one position ahead </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">of their current position &#8727;&#47;</code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(j &gt;= 0 &amp;&amp; arr[j] &gt; last) </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number26 index25 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j+1] = arr[j]; </code></div>\r\n                  <div className=\"line number27 index26 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j--; </code></div>\r\n                  <div className=\"line number28 index27 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number29 index28 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j+1] = last; </code></div>\r\n                  <div className=\"line number30 index29 alt1 highlighted\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"comments\">&#47;&#47; A utility function to print an array of size n </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n) </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i=0; i &lt; n; i++) </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; arr[i] &lt;&lt;</code><code className=\"string\">\" \"</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"comments\">&#47;&#8727; Driver program to test insertion sort &#8727;&#47;</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main() </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123;12, 11, 13, 5, 6&#125;; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr)/</code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]); </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">insertionSortRecursive(arr, n); </code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n); </code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0; </code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageI3(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Python</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Insertion Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Python program for implementation of Insertion Sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number3 index2 alt2 highlighted\"><code className=\"comments\"># Function to do insertion sort </code></div>\r\n                  <div className=\"line number4 index3 alt1 highlighted\"><code className=\"keyword\">def</code> <code className=\"plain\">insertionSort(arr): </code></div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Traverse through 1 to len(arr) </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(</code><code className=\"value\">1</code><code className=\"plain\">, </code><code className=\"functions\">len</code><code className=\"plain\">(arr)): </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">key </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[i] </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Move elements of arr[0..i-1], that are </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># greater than key, to one position ahead </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># of their current position </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j </code><code className=\"keyword\">=</code> <code className=\"plain\">i</code><code className=\"keyword\">-</code><code className=\"value\">1</code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">j &gt;</code><code className=\"keyword\">=</code> <code className=\"value\">0</code> <code className=\"keyword\">and</code> <code className=\"plain\">key &lt; arr[j] : </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j </code><code className=\"keyword\">+</code> <code className=\"value\">1</code><code className=\"plain\">] </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[j] </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j </code><code className=\"keyword\">-</code><code className=\"keyword\">=</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j </code><code className=\"keyword\">+</code> <code className=\"value\">1</code><code className=\"plain\">] </code><code className=\"keyword\">=</code> <code className=\"plain\">key </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"comments\"># Driver code to test above </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"plain\">arr </code><code className=\"keyword\">=</code> <code className=\"plain\">[</code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">13</code><code className=\"plain\">, </code><code className=\"value\">5</code><code className=\"plain\">, </code><code className=\"value\">6</code><code className=\"plain\">] </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"plain\">insertionSort(arr) </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(</code><code className=\"functions\">len</code><code className=\"plain\">(arr)): </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">print</code> <code className=\"plain\">(</code><code className=\"string\">\"% d\"</code> <code className=\"keyword\">%</code> <code className=\"plain\">arr[i]) </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Recursive </b>Implementation of Insertion Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Recursive Python program for insertion sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\"># Recursive function to sort an array using insertion sort </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1 highlighted\"><code className=\"keyword\">def</code> <code className=\"plain\">insertionSortRecursive(arr,n): </code></div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># base case </code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">n&lt;</code><code className=\"keyword\">=</code><code className=\"value\">1</code><code className=\"plain\">: </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Sort first n-1 elements </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">insertionSortRecursive(arr,n</code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">'''Insert last element at its correct position </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">in sorted array.'''</code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">last </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[n</code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">] </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j </code><code className=\"keyword\">=</code> <code className=\"plain\">n</code><code className=\"keyword\">-</code><code className=\"value\">2</code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Move elements of arr[0..i-1], that are </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># greater than key, to one position ahead </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># of their current position&nbsp; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(j&gt;</code><code className=\"keyword\">=</code><code className=\"value\">0</code> <code className=\"keyword\">and</code> <code className=\"plain\">arr[j]&gt;last): </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j</code><code className=\"keyword\">+</code><code className=\"value\">1</code><code className=\"plain\">] </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[j] </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j </code><code className=\"keyword\">=</code> <code className=\"plain\">j</code><code className=\"keyword\">-</code><code className=\"value\">1</code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j</code><code className=\"keyword\">+</code><code className=\"value\">1</code><code className=\"plain\">]</code><code className=\"keyword\">=</code><code className=\"plain\">last </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"comments\"># A utility function to print an array of size n </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"keyword\">def</code> <code className=\"plain\">printArray(arr,n): </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(n): </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code> <code className=\"plain\">arr[i], </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"comments\"># Driver program to test insertion sort&nbsp; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"plain\">arr </code><code className=\"keyword\">=</code> <code className=\"plain\">[</code><code className=\"value\">12</code><code className=\"plain\">,</code><code className=\"value\">11</code><code className=\"plain\">,</code><code className=\"value\">13</code><code className=\"plain\">,</code><code className=\"value\">5</code><code className=\"plain\">,</code><code className=\"value\">6</code><code className=\"plain\">] </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"plain\">n </code><code className=\"keyword\">=</code> <code className=\"functions\">len</code><code className=\"plain\">(arr) </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"plain\">insertionSortRecursive(arr, n) </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"plain\">printArray(arr, n) </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageI4(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Java</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Insertion Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Java program for implementation of Insertion Sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">InsertionSort &#123; </code></div>\r\n                  <div className=\"line number3 index2 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727;Function to sort array using insertion sort&#8727;&#47;</code></div>\r\n                  <div className=\"line number4 index3 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">sort(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[]) </code></div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length; </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = </code><code className=\"value\">1</code><code className=\"plain\">; i &lt; n; ++i) &#123; </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">key = arr[i]; </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">j = i - </code><code className=\"value\">1</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Move elements of arr[0..i-1], that are </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">greater than key, to one position ahead </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">of their current position &#8727;&#47;</code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(j &gt;= </code><code className=\"value\">0</code> <code className=\"plain\">&amp;&amp; arr[j] &gt; key) &#123; </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j + </code><code className=\"value\">1</code><code className=\"plain\">] = arr[j]; </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j = j - </code><code className=\"value\">1</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j + </code><code className=\"value\">1</code><code className=\"plain\">] = key; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; A utility function to print array of size n&#8727;&#47;</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[]) </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length; </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = </code><code className=\"value\">0</code><code className=\"plain\">; i &lt; n; ++i) </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.print(arr[i] + </code><code className=\"string\">\" \"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(); </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver method </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String args[]) </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123; </code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">13</code><code className=\"plain\">, </code><code className=\"value\">5</code><code className=\"plain\">, </code><code className=\"value\">6</code> <code className=\"plain\">&#125;; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">InsertionSort ob = </code><code className=\"keyword\">new</code> <code className=\"plain\">InsertionSort(); </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">ob.sort(arr); </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr); </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Recursive </b>Implementation of Insertion Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Recursive Java program for insertion sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">import</code> <code className=\"plain\">java.util.Arrays; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword\">public</code> <code className=\"keyword\">class</code> <code className=\"plain\">GFG&nbsp; </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Recursive function to sort an array using </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; insertion sort </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">insertionSortRecursive(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[], </code><code className=\"keyword\">int</code> <code className=\"plain\">n) </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Base case </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(n &lt;= </code><code className=\"value\">1</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Sort first n-1 elements </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">insertionSortRecursive( arr, n-</code><code className=\"value\">1</code> <code className=\"plain\">); </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Insert last element at its correct position </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; in sorted array. </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">last = arr[n-</code><code className=\"value\">1</code><code className=\"plain\">]; </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">j = n-</code><code className=\"value\">2</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Move elements of arr[0..i-1], that are </code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">greater than key, to one position ahead </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">of their current position &#8727;&#47;</code></div>\r\n                  <div className=\"line number26 index25 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(j &gt;= </code><code className=\"value\">0</code> <code className=\"plain\">&amp;&amp; arr[j] &gt; last) </code></div>\r\n                  <div className=\"line number27 index26 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number28 index27 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j+</code><code className=\"value\">1</code><code className=\"plain\">] = arr[j]; </code></div>\r\n                  <div className=\"line number29 index28 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j--; </code></div>\r\n                  <div className=\"line number30 index29 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number31 index30 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j+</code><code className=\"value\">1</code><code className=\"plain\">] = last; </code></div>\r\n                  <div className=\"line number32 index31 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver Method </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String[] args) </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123;</code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">13</code><code className=\"plain\">, </code><code className=\"value\">5</code><code className=\"plain\">, </code><code className=\"value\">6</code><code className=\"plain\">&#125;; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">insertionSortRecursive(arr, arr.length); </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(Arrays.toString(arr)); </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageI5(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C#</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Insertion Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C# program for implementation of Insertion Sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">using</code> <code className=\"plain\">System; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">InsertionSort &#123; </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Function to sort array </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; using insertion sort </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">sort(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr) </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length; </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 1; i &lt; n; ++i) &#123; </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">key = arr[i]; </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">j = i - 1; </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Move elements of arr[0..i-1], </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; that are greater than key, </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; to one position ahead of </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; their current position </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(j &gt;= 0 &amp;&amp; arr[j] &gt; key) &#123; </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j + 1] = arr[j]; </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j = j - 1; </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j + 1] = key; </code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; A utility function to print </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; array of size n </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr) </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 0; i &lt; n; ++i) </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(arr[i] + </code><code className=\"string\">\" \"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver Code </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main() </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr = &#123; 12, 11, 13, 5, 6 &#125;; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">InsertionSort ob = </code><code className=\"keyword\">new</code> <code className=\"plain\">InsertionSort(); </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">ob.sort(arr); </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr); </code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Recursive </b>Implementation of Insertion Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Recursive C# program&nbsp; </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; for insertion sort </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">using</code> <code className=\"plain\">System; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Recursive function to sort&nbsp; </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; an array using insertion sort </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">insertionSortRecursive(</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr,&nbsp; </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n) </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Base case </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(n &lt;= 1) </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Sort first n-1 elements </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">insertionSortRecursive(arr, n - 1); </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Insert last element at&nbsp; </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; its correct position </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; in sorted array. </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">last = arr[n - 1]; </code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">j = n - 2; </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number26 index25 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Move elements of arr[0..i-1],&nbsp; </code></div>\r\n                  <div className=\"line number27 index26 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">that are greater than key, to&nbsp; </code></div>\r\n                  <div className=\"line number28 index27 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">one position ahead of their </code></div>\r\n                  <div className=\"line number29 index28 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">current position &#8727;&#47;</code></div>\r\n                  <div className=\"line number30 index29 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(j &gt;= 0 &amp;&amp; arr[j] &gt; last) </code></div>\r\n                  <div className=\"line number31 index30 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number32 index31 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j + 1] = arr[j]; </code></div>\r\n                  <div className=\"line number33 index32 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j--; </code></div>\r\n                  <div className=\"line number34 index33 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number35 index34 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j + 1] = last; </code></div>\r\n                  <div className=\"line number36 index35 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47;Driver Code </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main() </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr = &#123;12, 11, 13, 5, 6&#125;; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">insertionSortRecursive(arr, arr.Length); </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code><code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 0; i &lt; arr.Length; i++) </code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(arr[i] + </code><code className=\"string\">\" \"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageI6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in PHP</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Insertion Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"plain\">&lt;?php&nbsp; </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; PHP program for insertion sort </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1 highlighted\"><code className=\"comments\">&#47;&#47; Function to sort an array </code></div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"comments\">&#47;&#47; using insertion sort </code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"keyword\">function</code> <code className=\"plain\">insertionSort(&amp;</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"variable\">$i</code> <code className=\"plain\">= 1; </code><code className=\"variable\">$i</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$n</code><code className=\"plain\">; </code><code className=\"variable\">$i</code><code className=\"plain\">++) </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$key</code> <code className=\"plain\">= </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">]; </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$j</code> <code className=\"plain\">= </code><code className=\"variable\">$i</code><code className=\"plain\">-1; </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Move elements of arr[0..i-1], </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; that are&nbsp;&nbsp;&nbsp; greater than key, to&nbsp; </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; one position ahead of their&nbsp; </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; current position </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(</code><code className=\"variable\">$j</code> <code className=\"plain\">&gt;= 0 &amp;&amp; </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code><code className=\"plain\">] &gt; </code><code className=\"variable\">$key</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code> <code className=\"plain\">+ 1] = </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code><code className=\"plain\">]; </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$j</code> <code className=\"plain\">= </code><code className=\"variable\">$j</code> <code className=\"plain\">- 1; </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code> <code className=\"plain\">+ 1] = </code><code className=\"variable\">$key</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"comments\">&#47;&#47; A utility function to </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"comments\">&#47;&#47; print an array of size n </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"keyword\">function</code> <code className=\"plain\">printArray(&amp;</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"variable\">$i</code> <code className=\"plain\">= 0; </code><code className=\"variable\">$i</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$n</code><code className=\"plain\">; </code><code className=\"variable\">$i</code><code className=\"plain\">++) </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">echo</code> <code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">].</code><code className=\"string\">\" \"</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">echo</code> <code className=\"string\">\"\\n\"</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"comments\">&#47;&#47; Driver Code </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"variable\">$arr</code> <code className=\"plain\">= </code><code className=\"keyword\">array</code><code className=\"plain\">(12, 11, 13, 5, 6); </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"variable\">$n</code> <code className=\"plain\">= sizeof(</code><code className=\"variable\">$arr</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"plain\">insertionSort(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"plain\">printArray(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Recursive </b>Implementation of Insertion Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"plain\">&lt;?php&nbsp; </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; Recursive PHP program for insertion sort </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Recursive function to sort an </code></div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; array using insertion sort </code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">function</code> <code className=\"plain\">insertionSortRecursive(&amp;</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Base case </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$n</code> <code className=\"plain\">&lt;= 1) </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Sort first n-1 elements </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">insertionSortRecursive(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code> <code className=\"plain\">- 1); </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Insert last element at its correct&nbsp; </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; position in sorted array. </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$last</code> <code className=\"plain\">= </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$n</code> <code className=\"plain\">- 1]; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$j</code> <code className=\"plain\">= </code><code className=\"variable\">$n</code> <code className=\"plain\">- 2; </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Move elements of arr[0..i-1], that are </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; greater than key, to one position ahead </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; of their current position&nbsp; </code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(</code><code className=\"variable\">$j</code> <code className=\"plain\">&gt;= 0 &amp;&amp; </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code><code className=\"plain\">] &gt; </code><code className=\"variable\">$last</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number26 index25 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code> <code className=\"plain\">+ 1] = </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code><code className=\"plain\">]; </code></div>\r\n                  <div className=\"line number27 index26 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$j</code><code className=\"plain\">--; </code></div>\r\n                  <div className=\"line number28 index27 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number29 index28 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$j</code> <code className=\"plain\">+ 1] = </code><code className=\"variable\">$last</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number30 index29 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; A utility function to&nbsp; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; print an array of size n </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">function</code> <code className=\"plain\">printArray(&amp;</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"variable\">$i</code> <code className=\"plain\">= 0; </code><code className=\"variable\">$i</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$n</code><code className=\"plain\">; </code><code className=\"variable\">$i</code><code className=\"plain\">++) </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">echo</code> <code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">].</code><code className=\"string\">\" \"</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"comments\">&#47;&#47; Driver Code </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"variable\">$arr</code> <code className=\"plain\">= </code><code className=\"keyword\">array</code><code className=\"plain\">(12, 11, 13, 5, 6); </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"variable\">$n</code> <code className=\"plain\">= sizeof(</code><code className=\"variable\">$arr</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"plain\">insertionSortRecursive(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"plain\">printArray(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { FC, Suspense, useState } from \"react\";\r\nimport { AppBar } from \"@react-md/app-bar\";\r\nimport { CircularProgress } from \"@react-md/progress\";\r\nimport { Tabs, TabsManager } from \"@react-md/tabs\";\r\nimport { CrossFade } from \"@react-md/transition\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport useFakeLazyImport from \"../../useFakeLazyImport\";\r\n\r\nimport Container from \"../../Container\";\r\nimport PageI1 from \"./CodingwithC\";\r\nimport PageI2 from \"./CodingwithCpp\";\r\nimport PageI3 from \"./CodingwithPython\";\r\nimport PageI4 from \"./CodingwithJava\";\r\nimport PageI5 from \"./CodingwithC#\";\r\nimport PageI6 from \"./CodingwithPHP\";\r\n\r\ninterface CurrentPageProps {\r\n  page: number;\r\n}\r\n\r\nconst CurrentPage: FC<CurrentPageProps> = ({ page }) => {\r\n  let content = <PageI1 />;\r\n  if (page === 1) {\r\n    content = <PageI2 />;\r\n  } else if (page === 2) {\r\n    content = <PageI3 />;\r\n  } else if (page === 3) {\r\n    content = <PageI4 />;\r\n  } else if (page === 4) {\r\n    content = <PageI5 />;\r\n  } else if (page === 5) {\r\n    content = <PageI6 />;\r\n  }\r\n\r\n  return <CrossFade>{content}</CrossFade>;\r\n};\r\n\r\nconst CrossFadeExamplesAsyncInsertion: FC = () => {\r\n  // just make it so it doesn't start loading until a new tab is shown\r\n  const [page, setPage] = useState<number>(-1);\r\n  const Content = useFakeLazyImport<CurrentPageProps>(CurrentPage, page, 5000);\r\n\r\n  return (\r\n    <>\r\n      <TabsManager\r\n        activeIndex={page === -1 ? 0 : page}\r\n        onActiveIndexChange={(index) => setPage(index)}\r\n        tabs={[\"C\", \"C++\", \"Python\",\"Java\",\"C#\",\"PHP\"]}\r\n        tabsId=\"static-transition\"\r\n      >\r\n        <AppBar theme=\"default\">\r\n          <Tabs />\r\n        </AppBar>\r\n      </TabsManager>\r\n      <Container>\r\n        {page === -1 && (\r\n          <Text type=\"headline-6\">\r\n            {'Click on other tabs to start coding!'}\r\n          </Text>\r\n        )}\r\n        {page !== -1 && (\r\n          <Suspense fallback={<CircularProgress className=\"mt-4\" id=\"async-loading-progress\" />}>\r\n            <Content page={page} />\r\n          </Suspense>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrossFadeExamplesAsyncInsertion;","import React, { FC } from \"react\";\r\nimport { Divider } from \"@react-md/divider\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport CrossFadeExamplesAsyncInsertion from \"./CrossFadeElementInsertion\";\r\n//import CrossFadeExamplesStatic from \"./CrossFadeExamplesStatic\";\r\n\r\nimport '../../../../../sortingAlgorithms/__colorHub/codestyle.css';\r\n\r\nconst ViewcodeInsertion: FC = () => (\r\n  <>\r\n    <Text type=\"headline-6\" margin=\"bottom\">\r\n      <div className=\"mt-1\"></div>\r\n      <h3 className=\"text-primary bg-white badge font-bold mt-2\">Code Explorer</h3>\r\n    </Text>\r\n    \r\n    <Divider />\r\n    <Text type=\"headline-6\">\r\n      <span className=\"text-pink badge badge-darkest col-lock badge-pill\">Source Program in multiple</span>&nbsp;<span className=\"text-dark badge badge-pink col-lock badge-pill\">Programming Languages</span>\r\n    </Text>\r\n    <CrossFadeExamplesAsyncInsertion />\r\n    <Divider />\r\n  </>\r\n);\r\n\r\nexport default ViewcodeInsertion;","import React, { FC, useState } from \"react\";\r\nimport { Button } from \"@react-md/button\";\r\nimport { useCSSTransition } from \"@react-md/transition\";\r\n\r\n\r\nimport styles from './UseCSSTransition.module.scss';\r\nimport { ExpandMoreSVGIcon, StorageSVGIcon, TextIconSpacing } from \"react-md\";\r\nimport ViewcodeInsertion from \"./viewcodeinsertion\";\r\n\r\nconst DemoInsertion: FC = () => {\r\n  const [transitionIn, setTransitionIn] = useState(false);\r\n  const [rendered, transitionProps] = useCSSTransition({\r\n    // changing this value causes the transition behavior to change\r\n    transitionIn,\r\n\r\n    // 5 seconds just for demo purposes... can also be an object\r\n    timeout: 5000,\r\n\r\n    // can also use a string that gets BEM-ified instead\r\n    classNames: {\r\n      enter: styles.enter,\r\n      enterActive: styles.entering,\r\n      exit: styles.exit,\r\n      exitActive: styles.exiting,\r\n    },\r\n\r\n    // can also trigger the css transition on initial mount\r\n    // appear: false,\r\n\r\n    // changes the `rendered` value to be false while not transitioning and\r\n    // `transitionIn` is false\r\n    temporary: true,\r\n\r\n    // an optional className to merge with the transition classNames\r\n    // className: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"text-white\" theme=\"error\" themeType=\"contained\" onClick={() => setTransitionIn(!transitionIn)}>\r\n        <TextIconSpacing icon={<StorageSVGIcon />}>\r\n          <TextIconSpacing icon={<ExpandMoreSVGIcon />} iconAfter>\r\n            Expand Codes\r\n          </TextIconSpacing>\r\n        </TextIconSpacing>\r\n      </Button>\r\n      {rendered && <div {...transitionProps}><ViewcodeInsertion /></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DemoInsertion;","import React from 'react';\r\nimport { Configuration } from 'react-md';\r\nimport DemoInsertion from '../../utils/Program_codes/view_code/SortingAlgorithms/InsertionSort/togglerinsertion';\r\nimport { newTrace, addToTrace, createKey } from './helpers';\r\n\r\nconst InsertionSort = (nums) => {\r\n  // Initial State\r\n  const trace = newTrace(nums);\r\n\r\n  // Core Algorithm\r\n  for (let i = 1; i < nums.length; i++) {\r\n    let value = nums[i];\r\n    let hole = i;\r\n    // Visualize: Hole has been selected for comparison\r\n    addToTrace(trace, nums, [], [i]);\r\n    while (hole > 0 && nums[hole - 1] > value) {\r\n      // Visualize: Compare hole to value\r\n      addToTrace(trace, nums, [], [hole], [hole - 1]);\r\n      nums[hole] = nums[hole - 1];\r\n      hole -= 1;\r\n      // Visualize: Overwrite hole with hole - 1\r\n      addToTrace(trace, nums, [], [], [hole, hole + 1]);\r\n    }\r\n    // Visualize: Overwrite hole with value\r\n    addToTrace(trace, nums, [], [], [], [hole]);\r\n    nums[hole] = value;\r\n    // Visualize: value is in sorted position\r\n    addToTrace(trace, nums, [], [], [], [hole]);\r\n  }\r\n\r\n  // Visualize: Mark all elements as sorted\r\n  addToTrace(trace, nums, [...Array(nums.length).keys()]);\r\n  return trace;\r\n};\r\n\r\nexport const InsertionSortKey = createKey(\r\n  'Comparing',\r\n  'Swapping',\r\n  'Overwrite from memory'\r\n);\r\nexport const InsertionSortDesc = {\r\n  title: 'Insertion Sort',\r\n  code: (\r\n    <div className=\"row mt-3 mb-0 text-center\">\r\n      <Configuration>\r\n          <DemoInsertion />\r\n      </Configuration>\r\n    </div>\r\n  ),\r\n  description: (\r\n    <p>\r\n      <a\r\n        href=\"https://en.wikipedia.org/wiki/Insertion_sort\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <i class=\"cib-wikipedia\"></i>&nbsp;Insertion Sort\r\n      </a>{' '}\r\n      is a simple sorting algorithm that iterates through an array and\r\n      at each iteration it removes one element from the array, finds the\r\n      location it belongs to in the sorted list and inserts it there,\r\n      repeating until no elements remain in the unsorted list. It is an\r\n      in-place, stable sorting algorithm that is inefficient on large\r\n      input arrays but works well for data sets that are almost sorted.\r\n      It is more efficient in practice compared to other quadratic\r\n      sorting algorithms like bubble sort and selection sort.\r\n    </p>\r\n  ),\r\n  worstCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  avgCase: (\r\n    <span>\r\n      O(n<sup>2</sup>)\r\n    </span>\r\n  ),\r\n  bestCase: <span>O(n)</span>,\r\n  space: <span>O(1)</span>\r\n};\r\n\r\nexport default InsertionSort;\r\n","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Merge Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#8727; C program for Merge Sort */</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;stdio.h&gt;</code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"preprocessor\">#include &lt;stdlib.h&gt;</code></div>\r\n                  <div className=\"line number4 index3 alt1\">&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"comments\">&#47;&#47; Merges two subarrays of arr[].</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"comments\">&#47;&#47; First subarray is arr[l..m]</code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"comments\">&#47;&#47; Second subarray is arr[m+1..r]</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">merge(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">l, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">m, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">r)</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i, j, k;</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n1 = m - l + 1;</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n2 = r - m;</code></div>\r\n                  <div className=\"line number13 index12 alt2\">&nbsp;</div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; create temp arrays */</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">L[n1], R[n2];</code></div>\r\n                  <div className=\"line number16 index15 alt1\">&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Copy data to temp arrays L[] and R[] */</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; n1; i++)</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">L[i] = arr[l + i];</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(j = 0; j &lt; n2; j++)</code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">R[j] = arr[m + 1 + j];</code></div>\r\n                  <div className=\"line number22 index21 alt1\">&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Merge the temp arrays back into arr[l..r]*/</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i = 0; </code><code className=\"comments\">&#47;&#47; Initial index of first subarray</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j = 0; </code><code className=\"comments\">&#47;&#47; Initial index of second subarray</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k = l; </code><code className=\"comments\">&#47;&#47; Initial index of merged subarray</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(i &lt; n1 &amp;&amp; j &lt; n2) &#123;</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(L[i] &lt;= R[j]) &#123;</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">else</code> <code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number38 index37 alt1\">&nbsp;</div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Copy the remaining elements of L[], if there</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">are any */</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(i &lt; n1) &#123;</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number46 index45 alt1\">&nbsp;</div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Copy the remaining elements of R[], if there</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">are any */</code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(j &lt; n2) &#123;</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number55 index54 alt2\">&nbsp;</div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"comments\">&#47;&#8727; l is for left index and r is right index of the</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"comments\">sub-array of arr to be sorted */</code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">mergeSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">l, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">r)</code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(l &lt; r) &#123;</code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Same as (l+r)/2, but avoids overflow for</code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; large l and h</code></div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">m = l + (r - l) / 2;</code></div>\r\n                  <div className=\"line number64 index63 alt1\">&nbsp;</div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Sort first and second halves</code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr, l, m);</code></div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr, m + 1, r);</code></div>\r\n                  <div className=\"line number68 index67 alt1\">&nbsp;</div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">merge(arr, l, m, r);</code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number72 index71 alt1\">&nbsp;</div>\r\n                  <div className=\"line number73 index72 alt2\"><code className=\"comments\">&#47;&#8727; UTILITY FUNCTIONS */</code></div>\r\n                  <div className=\"line number74 index73 alt1\"><code className=\"comments\">&#47;&#8727; Function to print an array */</code></div>\r\n                  <div className=\"line number75 index74 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">A[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">size)</code></div>\r\n                  <div className=\"line number76 index75 alt1\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number77 index76 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i;</code></div>\r\n                  <div className=\"line number78 index77 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; size; i++)</code></div>\r\n                  <div className=\"line number79 index78 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"%d \"</code><code className=\"plain\">, A[i]);</code></div>\r\n                  <div className=\"line number80 index79 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number81 index80 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number82 index81 alt1\">&nbsp;</div>\r\n                  <div className=\"line number83 index82 alt2\"><code className=\"comments\">&#47;&#8727; Driver code */</code></div>\r\n                  <div className=\"line number84 index83 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main()</code></div>\r\n                  <div className=\"line number85 index84 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number86 index85 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 12, 11, 13, 5, 6, 7 &#125;;</code></div>\r\n                  <div className=\"line number87 index86 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr_size = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]);</code></div>\r\n                  <div className=\"line number88 index87 alt1\">&nbsp;</div>\r\n                  <div className=\"line number89 index88 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"Given array is \\n\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number90 index89 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, arr_size);</code></div>\r\n                  <div className=\"line number91 index90 alt2\">&nbsp;</div>\r\n                  <div className=\"line number92 index91 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr, 0, arr_size - 1);</code></div>\r\n                  <div className=\"line number93 index92 alt2\">&nbsp;</div>\r\n                  <div className=\"line number94 index93 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"\\nSorted array is \\n\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number95 index94 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, arr_size);</code></div>\r\n                  <div className=\"line number96 index95 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0;</code></div>\r\n                  <div className=\"line number97 index96 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C++</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Merge Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C++ program for Merge Sort</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;iostream&gt;</code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std;</code></div>\r\n                  <div className=\"line number4 index3 alt1\">&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"comments\">&#47;&#47; Merges two subarrays of arr[].</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"comments\">&#47;&#47; First subarray is arr[l..m]</code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"comments\">&#47;&#47; Second subarray is arr[m+1..r]</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">merge(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">l, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">m, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">r)</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n1 = m - l + 1;</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n2 = r - m;</code></div>\r\n                  <div className=\"line number12 index11 alt1\">&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Create temp arrays</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">L[n1], R[n2];</code></div>\r\n                  <div className=\"line number15 index14 alt2\">&nbsp;</div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Copy data to temp arrays L[] and R[]</code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i = 0; i &lt; n1; i++)</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">L[i] = arr[l + i];</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">j = 0; j &lt; n2; j++)</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">R[j] = arr[m + 1 + j];</code></div>\r\n                  <div className=\"line number21 index20 alt2\">&nbsp;</div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Merge the temp arrays back into arr[l..r]</code></div>\r\n                  <div className=\"line number23 index22 alt2\">&nbsp;</div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Initial index of first subarray</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i = 0;</code></div>\r\n                  <div className=\"line number26 index25 alt1\">&nbsp;</div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Initial index of second subarray</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">j = 0;</code></div>\r\n                  <div className=\"line number29 index28 alt2\">&nbsp;</div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Initial index of merged subarray</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">k = l;</code></div>\r\n                  <div className=\"line number32 index31 alt1\">&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(i &lt; n1 &amp;&amp; j &lt; n2) &#123;</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(L[i] &lt;= R[j]) &#123;</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">else</code> <code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number44 index43 alt1\">&nbsp;</div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Copy the remaining elements of</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; L[], if there are any</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(i &lt; n1) &#123;</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number52 index51 alt1\">&nbsp;</div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Copy the remaining elements of</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; R[], if there are any</code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(j &lt; n2) &#123;</code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number61 index60 alt2\">&nbsp;</div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"comments\">&#47;&#47; l is for left index and r is</code></div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"comments\">&#47;&#47; right index of the sub-array</code></div>\r\n                  <div className=\"line number64 index63 alt1\"><code className=\"comments\">&#47;&#47; of arr to be sorted &#8727;&#47;</code></div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">mergeSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[],</code><code className=\"color1 bold\">int</code> <code className=\"plain\">l,</code><code className=\"color1 bold\">int</code> <code className=\"plain\">r)&#123;</code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code><code className=\"plain\">(l&gt;=r)&#123;</code></div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code><code className=\"plain\">;</code><code className=\"comments\">&#47;&#47;returns recursively</code></div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">m = (l+r-1)/2;</code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr,l,m);</code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr,m+1,r);</code></div>\r\n                  <div className=\"line number72 index71 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">merge(arr,l,m,r);</code></div>\r\n                  <div className=\"line number73 index72 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number74 index73 alt1\">&nbsp;</div>\r\n                  <div className=\"line number75 index74 alt2\"><code className=\"comments\">&#47;&#47; UTILITY FUNCTIONS</code></div>\r\n                  <div className=\"line number76 index75 alt1\"><code className=\"comments\">&#47;&#47; Function to print an array</code></div>\r\n                  <div className=\"line number77 index76 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">A[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">size)</code></div>\r\n                  <div className=\"line number78 index77 alt1\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number79 index78 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i = 0; i &lt; size; i++)</code></div>\r\n                  <div className=\"line number80 index79 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; A[i] &lt;&lt; </code><code className=\"string\">\" \"</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number81 index80 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number82 index81 alt1\">&nbsp;</div>\r\n                  <div className=\"line number83 index82 alt2\"><code className=\"comments\">&#47;&#47; Driver code</code></div>\r\n                  <div className=\"line number84 index83 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main()</code></div>\r\n                  <div className=\"line number85 index84 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number86 index85 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 12, 11, 13, 5, 6, 7 &#125;;</code></div>\r\n                  <div className=\"line number87 index86 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr_size = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]);</code></div>\r\n                  <div className=\"line number88 index87 alt1\">&nbsp;</div>\r\n                  <div className=\"line number89 index88 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"Given array is \\n\"</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number90 index89 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, arr_size);</code></div>\r\n                  <div className=\"line number91 index90 alt2\">&nbsp;</div>\r\n                  <div className=\"line number92 index91 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr, 0, arr_size - 1);</code></div>\r\n                  <div className=\"line number93 index92 alt2\">&nbsp;</div>\r\n                  <div className=\"line number94 index93 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"\\nSorted array is \\n\"</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number95 index94 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, arr_size);</code></div>\r\n                  <div className=\"line number96 index95 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0;</code></div>\r\n                  <div className=\"line number97 index96 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number98 index97 alt1\">&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Iterative </b>Implementation of Merge Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Recursive C++ program for merge sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include&lt;bits/stdc++.h&gt;</code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std;</code></div>\r\n                  <div className=\"line number4 index3 alt1\">&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"comments\">&#47;&#47; Function to merge the two haves</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"comments\">&#47;&#47; arr[l..m] and arr[m+1..r] of array arr[] </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">merge(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">l, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">m, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">r);</code></div>\r\n                  <div className=\"line number8 index7 alt1\">&nbsp;</div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"comments\">&#47;&#47; l is for left index and r is</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"comments\">&#47;&#47; right index of the sub-array</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"comments\">&#47;&#47; of arr to be sorted </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">mergeSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">l, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">r)</code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(l &lt; r)</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Same as (l+r)/2 but avoids</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; overflow for large l &amp; h</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">m = l + (r - l) / 2;</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr, l, m);</code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr, m + 1, r);</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">merge(arr, l, m, r);</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number25 index24 alt2\">&nbsp;</div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"comments\">&#47;&#47; Function to merge the two haves arr[l..m]</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"comments\">&#47;&#47; and arr[m+1..r] of array arr[] </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">merge(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">l, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">m, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">r)</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">k;</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n1 = m - l + 1;</code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n2 =&nbsp; r - m;</code></div>\r\n                  <div className=\"line number33 index32 alt2\">&nbsp;</div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Create temp arrays </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">L[n1], R[n2];</code></div>\r\n                  <div className=\"line number36 index35 alt1\">&nbsp;</div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Copy data to temp arrays L[] and R[]</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code><code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i = 0; i &lt; n1; i++)</code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">L[i] = arr[l + i];</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code><code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">j = 0; j &lt; n2; j++)</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">R[j] = arr[m + 1+ j];</code></div>\r\n                  <div className=\"line number42 index41 alt1\">&nbsp;</div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Merge the temp arrays</code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; back into arr[l..r]</code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i = 0;</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">j = 0;</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k = l;</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(i &lt; n1 &amp;&amp; j &lt; n2)</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(L[i] &lt;= R[j])</code></div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">else</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number63 index62 alt2\">&nbsp;</div>\r\n                  <div className=\"line number64 index63 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Copy the remaining elements</code></div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; of L[], if there are any </code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(i &lt; n1)</code></div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number72 index71 alt1\">&nbsp;</div>\r\n                  <div className=\"line number73 index72 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Copy the remaining elements</code></div>\r\n                  <div className=\"line number74 index73 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; of R[], if there are any </code></div>\r\n                  <div className=\"line number75 index74 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(j &lt; n2)</code></div>\r\n                  <div className=\"line number76 index75 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number77 index76 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number78 index77 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number79 index78 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number80 index79 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number81 index80 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number82 index81 alt1\">&nbsp;</div>\r\n                  <div className=\"line number83 index82 alt2\"><code className=\"comments\">&#47;&#47; Function to print an array </code></div>\r\n                  <div className=\"line number84 index83 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">A[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">size)</code></div>\r\n                  <div className=\"line number85 index84 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number86 index85 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code><code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i = 0; i &lt; size; i++)</code></div>\r\n                  <div className=\"line number87 index86 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"%d \"</code><code className=\"plain\">, A[i]);</code></div>\r\n                  <div className=\"line number88 index87 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number89 index88 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"\\n\"</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number90 index89 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number91 index90 alt2\">&nbsp;</div>\r\n                  <div className=\"line number92 index91 alt1\"><code className=\"comments\">&#47;&#47; Driver code</code></div>\r\n                  <div className=\"line number93 index92 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main()</code></div>\r\n                  <div className=\"line number94 index93 alt1\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number95 index94 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 12, 11, 13, 5, 6, 7 &#125;;</code></div>\r\n                  <div className=\"line number96 index95 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr_size = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]);</code></div>\r\n                  <div className=\"line number97 index96 alt2\">&nbsp;</div>\r\n                  <div className=\"line number98 index97 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"Given array is \\n\"</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number99 index98 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, arr_size);</code></div>\r\n                  <div className=\"line number100 index99 alt1\">&nbsp;</div>\r\n                  <div className=\"line number101 index100 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr, 0, arr_size - 1);</code></div>\r\n                  <div className=\"line number102 index101 alt1\">&nbsp;</div>\r\n                  <div className=\"line number103 index102 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"\\nSorted array is \\n\"</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number104 index103 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, arr_size);</code></div>\r\n                  <div className=\"line number105 index104 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0;</code></div>\r\n                  <div className=\"line number106 index105 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number107 index106 alt2\">&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Python</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Merge Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Python program for implementation of MergeSort</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">def</code> <code className=\"plain\">mergeSort(arr):</code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"functions\">len</code><code className=\"plain\">(arr) &gt; </code><code className=\"value\">1</code><code className=\"plain\">:</code></div>\r\n                  <div className=\"line number4 index3 alt1\">&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Finding the mid of the array</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mid </code><code className=\"keyword\">=</code> <code className=\"functions\">len</code><code className=\"plain\">(arr)</code><code className=\"keyword\">/</code><code className=\"keyword\">/</code><code className=\"value\">2</code></div>\r\n                  <div className=\"line number7 index6 alt2\">&nbsp;</div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Dividing the array elements</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">L </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[:mid]</code></div>\r\n                  <div className=\"line number10 index9 alt1\">&nbsp;</div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># into 2 halves</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">R </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[mid:]</code></div>\r\n                  <div className=\"line number13 index12 alt2\">&nbsp;</div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Sorting the first half</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(L)</code></div>\r\n                  <div className=\"line number16 index15 alt1\">&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Sorting the second half</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(R)</code></div>\r\n                  <div className=\"line number19 index18 alt2\">&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i </code><code className=\"keyword\">=</code> <code className=\"plain\">j </code><code className=\"keyword\">=</code> <code className=\"plain\">k </code><code className=\"keyword\">=</code> <code className=\"value\">0</code></div>\r\n                  <div className=\"line number21 index20 alt2\">&nbsp;</div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Copy data to temp arrays L[] and R[]</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">i &lt; </code><code className=\"functions\">len</code><code className=\"plain\">(L) </code><code className=\"keyword\">and</code> <code className=\"plain\">j &lt; </code><code className=\"functions\">len</code><code className=\"plain\">(R):</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">L[i] &lt; R[j]:</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] </code><code className=\"keyword\">=</code> <code className=\"plain\">L[i]</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i </code><code className=\"keyword\">+</code><code className=\"keyword\">=</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code><code className=\"plain\">:</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] </code><code className=\"keyword\">=</code> <code className=\"plain\">R[j]</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j </code><code className=\"keyword\">+</code><code className=\"keyword\">=</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k </code><code className=\"keyword\">+</code><code className=\"keyword\">=</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number31 index30 alt2\">&nbsp;</div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Checking if any element was left</code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">i &lt; </code><code className=\"functions\">len</code><code className=\"plain\">(L):</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] </code><code className=\"keyword\">=</code> <code className=\"plain\">L[i]</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i </code><code className=\"keyword\">+</code><code className=\"keyword\">=</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k </code><code className=\"keyword\">+</code><code className=\"keyword\">=</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number37 index36 alt2\">&nbsp;</div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">j &lt; </code><code className=\"functions\">len</code><code className=\"plain\">(R):</code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] </code><code className=\"keyword\">=</code> <code className=\"plain\">R[j]</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j </code><code className=\"keyword\">+</code><code className=\"keyword\">=</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k </code><code className=\"keyword\">+</code><code className=\"keyword\">=</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number42 index41 alt1\">&nbsp;</div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"comments\"># Code to print the list</code></div>\r\n                  <div className=\"line number44 index43 alt1\">&nbsp;</div>\r\n                  <div className=\"line number45 index44 alt2\">&nbsp;</div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"keyword\">def</code> <code className=\"plain\">printList(arr):</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(</code><code className=\"functions\">len</code><code className=\"plain\">(arr)):</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">print</code><code className=\"plain\">(arr[i], end</code><code className=\"keyword\">=</code><code className=\"string\">\" \"</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code><code className=\"plain\">()</code></div>\r\n                  <div className=\"line number50 index49 alt1\">&nbsp;</div>\r\n                  <div className=\"line number51 index50 alt2\">&nbsp;</div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"comments\"># Driver Code</code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"keyword\">if</code> <code className=\"plain\">__name__ </code><code className=\"keyword\">=</code><code className=\"keyword\">=</code> <code className=\"string\">'__main__'</code><code className=\"plain\">:</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr </code><code className=\"keyword\">=</code> <code className=\"plain\">[</code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">13</code><code className=\"plain\">, </code><code className=\"value\">5</code><code className=\"plain\">, </code><code className=\"value\">6</code><code className=\"plain\">, </code><code className=\"value\">7</code><code className=\"plain\">]</code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code><code className=\"plain\">(</code><code className=\"string\">\"Given array is\"</code><code className=\"plain\">, end</code><code className=\"keyword\">=</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printList(arr)</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr)</code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">print</code><code className=\"plain\">(</code><code className=\"string\">\"Sorted array is: \"</code><code className=\"plain\">, end</code><code className=\"keyword\">=</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printList(arr)</code></div>\r\n                  <div className=\"line number60 index59 alt1\">&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Iterative </b>Implementation of Merge Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Recursive Python Program for merge sort</code></div>\r\n                  <div className=\"line number2 index1 alt1\">&nbsp;</div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">def</code> <code className=\"plain\">merge(left, right):</code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"keyword\">not</code> <code className=\"functions\">len</code><code className=\"plain\">(left) </code><code className=\"keyword\">or</code> <code className=\"keyword\">not</code> <code className=\"functions\">len</code><code className=\"plain\">(right):</code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">left </code><code className=\"keyword\">or</code> <code className=\"plain\">right</code></div>\r\n                  <div className=\"line number6 index5 alt1\">&nbsp;</div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">result </code><code className=\"keyword\">=</code> <code className=\"plain\">[]</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i, j </code><code className=\"keyword\">=</code> <code className=\"value\">0</code><code className=\"plain\">, </code><code className=\"value\">0</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(</code><code className=\"functions\">len</code><code className=\"plain\">(result) &lt; </code><code className=\"functions\">len</code><code className=\"plain\">(left) </code><code className=\"keyword\">+</code> <code className=\"functions\">len</code><code className=\"plain\">(right)):</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">left[i] &lt; right[j]:</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">result.append(left[i])</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i</code><code className=\"keyword\">+</code><code className=\"keyword\">=</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code><code className=\"plain\">:</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">result.append(right[j])</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j</code><code className=\"keyword\">+</code><code className=\"keyword\">=</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">i </code><code className=\"keyword\">=</code><code className=\"keyword\">=</code> <code className=\"functions\">len</code><code className=\"plain\">(left) </code><code className=\"keyword\">or</code> <code className=\"plain\">j </code><code className=\"keyword\">=</code><code className=\"keyword\">=</code> <code className=\"functions\">len</code><code className=\"plain\">(right):</code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">result.extend(left[i:] </code><code className=\"keyword\">or</code> <code className=\"plain\">right[j:])</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">break</code></div>\r\n                  <div className=\"line number19 index18 alt2\">&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">result</code></div>\r\n                  <div className=\"line number21 index20 alt2\">&nbsp;</div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"keyword\">def</code> <code className=\"plain\">mergesort(</code><code className=\"functions\">list</code><code className=\"plain\">):</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"functions\">len</code><code className=\"plain\">(</code><code className=\"functions\">list</code><code className=\"plain\">) &lt; </code><code className=\"value\">2</code><code className=\"plain\">:</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"functions\">list</code></div>\r\n                  <div className=\"line number25 index24 alt2\">&nbsp;</div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">middle </code><code className=\"keyword\">=</code> <code className=\"functions\">len</code><code className=\"plain\">(</code><code className=\"functions\">list</code><code className=\"plain\">)</code><code className=\"keyword\">/</code><code className=\"value\">2</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">left </code><code className=\"keyword\">=</code> <code className=\"plain\">mergesort(</code><code className=\"functions\">list</code><code className=\"plain\">[:middle])</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">right </code><code className=\"keyword\">=</code> <code className=\"plain\">mergesort(</code><code className=\"functions\">list</code><code className=\"plain\">[middle:])</code></div>\r\n                  <div className=\"line number29 index28 alt2\">&nbsp;</div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">merge(left, right)</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"plain\">seq </code><code className=\"keyword\">=</code> <code className=\"plain\">[</code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">13</code><code className=\"plain\">, </code><code className=\"value\">5</code><code className=\"plain\">, </code><code className=\"value\">6</code><code className=\"plain\">, </code><code className=\"value\">7</code><code className=\"plain\">]</code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"keyword\">print</code><code className=\"plain\">(</code><code className=\"string\">\"Given array is\"</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"functions\">print</code><code className=\"plain\">(seq); </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"keyword\">print</code><code className=\"plain\">(</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"keyword\">print</code><code className=\"plain\">(</code><code className=\"string\">\"Sorted array is\"</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"functions\">print</code><code className=\"plain\">(mergesort(seq))</code></div>\r\n                  <div className=\"line number38 index37 alt1\">&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Java</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Merge Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#8727; Java program for Merge Sort &#8727;&#47;</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">MergeSort </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Merges two subarrays of arr[].</code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; First subarray is arr[l..m]</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Second subarray is arr[m+1..r]</code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">merge(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[], </code><code className=\"keyword\">int</code> <code className=\"plain\">l, </code><code className=\"keyword\">int</code> <code className=\"plain\">m, </code><code className=\"keyword\">int</code> <code className=\"plain\">r)</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Find sizes of two subarrays to be merged</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n1 = m - l + </code><code className=\"value\">1</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n2 = r - m;</code></div>\r\n                  <div className=\"line number12 index11 alt1\">&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Create temp arrays &#8727;&#47;</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">L[] = </code><code className=\"keyword\">new</code> <code className=\"keyword\">int</code><code className=\"plain\">[n1];</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">R[] = </code><code className=\"keyword\">new</code> <code className=\"keyword\">int</code><code className=\"plain\">[n2];</code></div>\r\n                  <div className=\"line number16 index15 alt1\">&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727;Copy data to temp arrays&#8727;&#47;</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = </code><code className=\"value\">0</code><code className=\"plain\">; i &lt; n1; ++i)</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">L[i] = arr[l + i];</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">j = </code><code className=\"value\">0</code><code className=\"plain\">; j &lt; n2; ++j)</code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">R[j] = arr[m + </code><code className=\"value\">1</code> <code className=\"plain\">+ j];</code></div>\r\n                  <div className=\"line number22 index21 alt1\">&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Merge the temp arrays &#8727;&#47;</code></div>\r\n                  <div className=\"line number24 index23 alt1\">&nbsp;</div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Initial indexes of first and second subarrays</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">i = </code><code className=\"value\">0</code><code className=\"plain\">, j = </code><code className=\"value\">0</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number27 index26 alt2\">&nbsp;</div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Initial index of merged subarry array</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">k = l;</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(i &lt; n1 &amp;&amp; j &lt; n2) &#123;</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(L[i] &lt;= R[j]) &#123;</code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code> <code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number41 index40 alt2\">&nbsp;</div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Copy remaining elements of L[] if any &#8727;&#47;</code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(i &lt; n1) &#123;</code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number48 index47 alt1\">&nbsp;</div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Copy remaining elements of R[] if any &#8727;&#47;</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(j &lt; n2) &#123;</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number56 index55 alt1\">&nbsp;</div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Main function that sorts arr[l..r] using</code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; merge()</code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">sort(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[], </code><code className=\"keyword\">int</code> <code className=\"plain\">l, </code><code className=\"keyword\">int</code> <code className=\"plain\">r)</code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(l &lt; r) &#123;</code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Find the middle point</code></div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">m = (l + r) / </code><code className=\"value\">2</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number64 index63 alt1\">&nbsp;</div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Sort first and second halves</code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">sort(arr, l, m);</code></div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">sort(arr, m + </code><code className=\"value\">1</code><code className=\"plain\">, r);</code></div>\r\n                  <div className=\"line number68 index67 alt1\">&nbsp;</div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Merge the sorted halves</code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">merge(arr, l, m, r);</code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number72 index71 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number73 index72 alt2\">&nbsp;</div>\r\n                  <div className=\"line number74 index73 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; A utility function to print array of size n &#8727;&#47;</code></div>\r\n                  <div className=\"line number75 index74 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[])</code></div>\r\n                  <div className=\"line number76 index75 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number77 index76 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length;</code></div>\r\n                  <div className=\"line number78 index77 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = </code><code className=\"value\">0</code><code className=\"plain\">; i &lt; n; ++i)</code></div>\r\n                  <div className=\"line number79 index78 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.print(arr[i] + </code><code className=\"string\">\" \"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number80 index79 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println();</code></div>\r\n                  <div className=\"line number81 index80 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number82 index81 alt1\">&nbsp;</div>\r\n                  <div className=\"line number83 index82 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver code</code></div>\r\n                  <div className=\"line number84 index83 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String args[])</code></div>\r\n                  <div className=\"line number85 index84 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number86 index85 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123; </code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">13</code><code className=\"plain\">, </code><code className=\"value\">5</code><code className=\"plain\">, </code><code className=\"value\">6</code><code className=\"plain\">, </code><code className=\"value\">7</code> <code className=\"plain\">&#125;;</code></div>\r\n                  <div className=\"line number87 index86 alt2\">&nbsp;</div>\r\n                  <div className=\"line number88 index87 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Given Array\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number89 index88 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr);</code></div>\r\n                  <div className=\"line number90 index89 alt1\">&nbsp;</div>\r\n                  <div className=\"line number91 index90 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">MergeSort ob = </code><code className=\"keyword\">new</code> <code className=\"plain\">MergeSort();</code></div>\r\n                  <div className=\"line number92 index91 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">ob.sort(arr, </code><code className=\"value\">0</code><code className=\"plain\">, arr.length - </code><code className=\"value\">1</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number93 index92 alt2\">&nbsp;</div>\r\n                  <div className=\"line number94 index93 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"\\nSorted array\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number95 index94 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr);</code></div>\r\n                  <div className=\"line number96 index95 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number97 index96 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Iterative </b>Implementation of Merge Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Recursive Java Program for merge sort</code></div>\r\n                  <div className=\"line number2 index1 alt1\">&nbsp;</div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">import</code> <code className=\"plain\">java.util.Arrays;</code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"keyword\">public</code> <code className=\"keyword\">class</code> <code className=\"plain\">GFG</code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">mergeSort(</code><code className=\"keyword\">int</code><code className=\"plain\">[] array)</code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code><code className=\"plain\">(array == </code><code className=\"keyword\">null</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number12 index11 alt1\">&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code><code className=\"plain\">(array.length &gt; </code><code className=\"value\">1</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">mid = array.length / </code><code className=\"value\">2</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number16 index15 alt1\">&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Split left part</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code><code className=\"plain\">[] left = </code><code className=\"keyword\">new</code> <code className=\"keyword\">int</code><code className=\"plain\">[mid];</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code><code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = </code><code className=\"value\">0</code><code className=\"plain\">; i &lt; mid; i++)</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">left[i] = array[i];</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Split right part</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code><code className=\"plain\">[] right = </code><code className=\"keyword\">new</code> <code className=\"keyword\">int</code><code className=\"plain\">[array.length - mid];</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code><code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = mid; i &lt; array.length; i++)</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">right[i - mid] = array[i];</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(left);</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(right);</code></div>\r\n                  <div className=\"line number32 index31 alt1\">&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">i = </code><code className=\"value\">0</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">j = </code><code className=\"value\">0</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">k = </code><code className=\"value\">0</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number36 index35 alt1\">&nbsp;</div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Merge left and right arrays</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code><code className=\"plain\">(i &lt; left.length &amp;&amp; j &lt; right.length)</code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code><code className=\"plain\">(left[i] &lt; right[j])</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">array[k] = left[i];</code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">array[k] = right[j];</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Collect remaining elements</code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code><code className=\"plain\">(i &lt; left.length)</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">array[k] = left[i];</code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code><code className=\"plain\">(j &lt; right.length)</code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">array[k] = right[j];</code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number64 index63 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number67 index66 alt2\">&nbsp;</div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver program to test above functions.</code></div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String[] args)</code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123;</code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">13</code><code className=\"plain\">, </code><code className=\"value\">5</code><code className=\"plain\">, </code><code className=\"value\">6</code><code className=\"plain\">, </code><code className=\"value\">7</code><code className=\"plain\">&#125;;</code></div>\r\n                  <div className=\"line number72 index71 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">i=</code><code className=\"value\">0</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number73 index72 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Given array is\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number74 index73 alt1\">&nbsp;</div>\r\n                  <div className=\"line number75 index74 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code><code className=\"plain\">(i=</code><code className=\"value\">0</code><code className=\"plain\">; i&lt;arr.length; i++)</code></div>\r\n                  <div className=\"line number76 index75 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.print(arr[i]+</code><code className=\"string\">\" \"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number77 index76 alt2\">&nbsp;</div>\r\n                  <div className=\"line number78 index77 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr);</code></div>\r\n                  <div className=\"line number79 index78 alt2\">&nbsp;</div>\r\n                  <div className=\"line number80 index79 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number81 index80 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Sorted array is\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number82 index81 alt1\">&nbsp;</div>\r\n                  <div className=\"line number83 index82 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code><code className=\"plain\">(i=</code><code className=\"value\">0</code><code className=\"plain\">; i&lt;arr.length; i++)</code></div>\r\n                  <div className=\"line number84 index83 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.print(arr[i]+</code><code className=\"string\">\" \"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number85 index84 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number86 index85 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number87 index86 alt2\">&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C#</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Merge Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C# program for Merge Sort</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">using</code> <code className=\"plain\">System;</code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">class</code> <code className=\"plain\">MergeSort &#123;</code></div>\r\n                  <div className=\"line number4 index3 alt1\">&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Merges two subarrays of []arr.</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; First subarray is arr[l..m]</code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Second subarray is arr[m+1..r]</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">merge(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr, </code><code className=\"keyword\">int</code> <code className=\"plain\">l, </code><code className=\"keyword\">int</code> <code className=\"plain\">m, </code><code className=\"keyword\">int</code> <code className=\"plain\">r)</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Find sizes of two</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; subarrays to be merged</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n1 = m - l + 1;</code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n2 = r - m;</code></div>\r\n                  <div className=\"line number14 index13 alt1\">&nbsp;</div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Create temp arrays</code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code><code className=\"plain\">[] L = </code><code className=\"keyword\">new</code> <code className=\"keyword\">int</code><code className=\"plain\">[n1];</code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code><code className=\"plain\">[] R = </code><code className=\"keyword\">new</code> <code className=\"keyword\">int</code><code className=\"plain\">[n2];</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">i, j;</code></div>\r\n                  <div className=\"line number19 index18 alt2\">&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Copy data to temp arrays</code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(i = 0; i &lt; n1; ++i)</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">L[i] = arr[l + i];</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(j = 0; j &lt; n2; ++j)</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">R[j] = arr[m + 1 + j];</code></div>\r\n                  <div className=\"line number25 index24 alt2\">&nbsp;</div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Merge the temp arrays</code></div>\r\n                  <div className=\"line number27 index26 alt2\">&nbsp;</div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Initial indexes of first</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; and second subarrays</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i = 0;</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j = 0;</code></div>\r\n                  <div className=\"line number32 index31 alt1\">&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Initial index of merged</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; subarry array</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">k = l;</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(i &lt; n1 &amp;&amp; j &lt; n2) &#123;</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(L[i] &lt;= R[j]) &#123;</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code> <code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number47 index46 alt2\">&nbsp;</div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Copy remaining elements</code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; of L[] if any</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(i &lt; n1) &#123;</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number55 index54 alt2\">&nbsp;</div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Copy remaining elements</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; of R[] if any</code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(j &lt; n2) &#123;</code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number64 index63 alt1\">&nbsp;</div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Main function that</code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; sorts arr[l..r] using</code></div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; merge()</code></div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">sort(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr, </code><code className=\"keyword\">int</code> <code className=\"plain\">l, </code><code className=\"keyword\">int</code> <code className=\"plain\">r)</code></div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(l &lt; r) &#123;</code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Find the middle</code></div>\r\n                  <div className=\"line number72 index71 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; point</code></div>\r\n                  <div className=\"line number73 index72 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">m = (l + r) / 2;</code></div>\r\n                  <div className=\"line number74 index73 alt1\">&nbsp;</div>\r\n                  <div className=\"line number75 index74 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Sort first and</code></div>\r\n                  <div className=\"line number76 index75 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; second halves</code></div>\r\n                  <div className=\"line number77 index76 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">sort(arr, l, m);</code></div>\r\n                  <div className=\"line number78 index77 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">sort(arr, m + 1, r);</code></div>\r\n                  <div className=\"line number79 index78 alt2\">&nbsp;</div>\r\n                  <div className=\"line number80 index79 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Merge the sorted halves</code></div>\r\n                  <div className=\"line number81 index80 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">merge(arr, l, m, r);</code></div>\r\n                  <div className=\"line number82 index81 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number83 index82 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number84 index83 alt1\">&nbsp;</div>\r\n                  <div className=\"line number85 index84 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; A utility function to</code></div>\r\n                  <div className=\"line number86 index85 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; print array of size n &#8727;&#47;</code></div>\r\n                  <div className=\"line number87 index86 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr)</code></div>\r\n                  <div className=\"line number88 index87 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number89 index88 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length;</code></div>\r\n                  <div className=\"line number90 index89 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 0; i &lt; n; ++i)</code></div>\r\n                  <div className=\"line number91 index90 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(arr[i] + </code><code className=\"string\">\" \"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number92 index91 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine();</code></div>\r\n                  <div className=\"line number93 index92 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number94 index93 alt1\">&nbsp;</div>\r\n                  <div className=\"line number95 index94 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver code</code></div>\r\n                  <div className=\"line number96 index95 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main(String[] args)</code></div>\r\n                  <div className=\"line number97 index96 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number98 index97 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr = &#123; 12, 11, 13, 5, 6, 7 &#125;;</code></div>\r\n                  <div className=\"line number99 index98 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"Given Array\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number100 index99 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr);</code></div>\r\n                  <div className=\"line number101 index100 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">MergeSort ob = </code><code className=\"keyword\">new</code> <code className=\"plain\">MergeSort();</code></div>\r\n                  <div className=\"line number102 index101 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">ob.sort(arr, 0, arr.Length - 1);</code></div>\r\n                  <div className=\"line number103 index102 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"\\nSorted array\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number104 index103 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr);</code></div>\r\n                  <div className=\"line number105 index104 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number106 index105 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number107 index106 alt2\">&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}><b>Iterative </b>Implementation of Merge Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#8727; Iterative C# program for merge</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">sort &#8727;&#47;</code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">using</code> <code className=\"plain\">System;</code></div>\r\n                  <div className=\"line number4 index3 alt1\">&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG &#123;</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; l is for left index and r</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">is right index of the sub-array </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">of arr to be sorted &#8727;&#47;</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">mergeSort(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr,</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">l, </code><code className=\"keyword\">int</code> <code className=\"plain\">r)</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(l &lt; r)</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Same as (l+r)/2 but avoids </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; overflow for large l &amp; h</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">m = l + (r - l) / 2; </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr, l, m);</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr, m+1, r);</code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">merge(arr, l, m, r);</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number24 index23 alt1\">&nbsp;</div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Function to merge the two haves</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">arr[l..m] and arr[m+1..r] of array </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">arr[] &#8727;&#47;</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">merge(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr, </code><code className=\"keyword\">int</code> <code className=\"plain\">l,</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">m, </code><code className=\"keyword\">int</code> <code className=\"plain\">r)</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">i, j, k;</code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n1 = m - l + 1;</code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n2 = r - m;</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; create temp arrays &#8727;&#47;</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">[]L = </code><code className=\"keyword\">new</code> <code className=\"keyword\">int</code><code className=\"plain\">[n1];</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">[]R = </code><code className=\"keyword\">new</code> <code className=\"keyword\">int</code><code className=\"plain\">[n2];</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Copy data to temp arrays</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">L[] and R[] &#8727;&#47;</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(i = 0; i &lt; n1; i++)</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">L[i] = arr[l + i];</code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(j = 0; j &lt; n2; j++)</code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">R[j] = arr[m + 1+ j];</code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Merge the temp arrays back </code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">into arr[l..r]&#8727;&#47;</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i = 0;</code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j = 0;</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k = l;</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(i &lt; n1 &amp;&amp; j &lt; n2)</code></div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(L[i] &lt;= R[j])</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number64 index63 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Copy the remaining elements of</code></div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">L[], if there are any &#8727;&#47;</code></div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(i &lt; n1)</code></div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = L[i];</code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;</code></div>\r\n                  <div className=\"line number72 index71 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number73 index72 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number74 index73 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number75 index74 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Copy the remaining elements of</code></div>\r\n                  <div className=\"line number76 index75 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">R[], if there are any &#8727;&#47;</code></div>\r\n                  <div className=\"line number77 index76 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(j &lt; n2)</code></div>\r\n                  <div className=\"line number78 index77 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number79 index78 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[k] = R[j];</code></div>\r\n                  <div className=\"line number80 index79 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">j++;</code></div>\r\n                  <div className=\"line number81 index80 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">k++;</code></div>\r\n                  <div className=\"line number82 index81 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number83 index82 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number84 index83 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number85 index84 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Function to print an array &#8727;&#47;</code></div>\r\n                  <div className=\"line number86 index85 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code> <code className=\"plain\">[]A, </code><code className=\"keyword\">int</code> <code className=\"plain\">size)</code></div>\r\n                  <div className=\"line number87 index86 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number88 index87 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">i;</code></div>\r\n                  <div className=\"line number89 index88 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(i=0; i &lt; size; i++)</code></div>\r\n                  <div className=\"line number90 index89 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(A[i]+</code><code className=\"string\">\" \"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number91 index90 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number92 index91 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number93 index92 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number94 index93 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Driver program to test above functions &#8727;&#47;</code></div>\r\n                  <div className=\"line number95 index94 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main()</code></div>\r\n                  <div className=\"line number96 index95 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number97 index96 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr = &#123;12, 11, 13, 5, 6, 7&#125;;</code></div>\r\n                  <div className=\"line number98 index97 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr_size = arr.Length;</code></div>\r\n                  <div className=\"line number99 index98 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number100 index99 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(</code><code className=\"string\">\"Given array is \\n\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number101 index100 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, arr_size);</code></div>\r\n                  <div className=\"line number102 index101 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number103 index102 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mergeSort(arr, 0, arr_size - 1);</code></div>\r\n                  <div className=\"line number104 index103 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number105 index104 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(</code><code className=\"string\">\"\\nSorted array is \\n\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number106 index105 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, arr_size);</code></div>\r\n                  <div className=\"line number107 index106 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number108 index107 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number109 index108 alt2\">&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in PHP</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Merge Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <pre className=\"prettyprint notranslate prettyprinted\"><span className=\"pun\">&lt;?</span><span className=\"pln\">php\r\n                    </span><span className=\"com\">&#47;&#47; function for merge sort - splits the array </span><span className=\"pln\">\r\n                    </span><span className=\"com\">&#47;&#47; and call merge function to sort and merge the array</span><span className=\"pln\">\r\n                    </span><span className=\"com\">&#47;&#47; mergesort is a recursive function</span><span className=\"pln\">\r\n                    </span><span className=\"kwd\">function</span><span className=\"pln\"> mergesort</span><span className=\"pun\">(&amp;</span><span className=\"pln\">$Array</span><span className=\"pun\">,</span><span className=\"pln\"> $left</span><span className=\"pun\">,</span><span className=\"pln\"> $right</span><span className=\"pun\">)</span><span className=\"pln\"> </span><span className=\"pun\">&#123;</span><span className=\"pln\">\r\n                      </span><span className=\"kwd\">if</span><span className=\"pln\"> </span><span className=\"pun\">(</span><span className=\"pln\">$left </span><span className=\"pun\">&lt;</span><span className=\"pln\"> $right</span><span className=\"pun\">)</span><span className=\"pln\"> </span><span className=\"pun\">&#123;</span><span className=\"pln\"> \r\n                        $mid </span><span className=\"pun\">=</span><span className=\"pln\"> $left </span><span className=\"pun\">+</span><span className=\"pln\"> </span><span className=\"pun\">(</span><span className=\"kwd\">int</span><span className=\"pun\">)((</span><span className=\"pln\">$right </span><span className=\"pun\">-</span><span className=\"pln\"> $left</span><span className=\"pun\">)/</span><span className=\"lit\">2</span><span className=\"pun\">);</span><span className=\"pln\">\r\n                        mergesort</span><span className=\"pun\">(</span><span className=\"pln\">$Array</span><span className=\"pun\">,</span><span className=\"pln\"> $left</span><span className=\"pun\">,</span><span className=\"pln\"> $mid</span><span className=\"pun\">);</span><span className=\"pln\">\r\n                        mergesort</span><span className=\"pun\">(</span><span className=\"pln\">$Array</span><span className=\"pun\">,</span><span className=\"pln\"> $mid</span><span className=\"pun\">+</span><span className=\"lit\">1</span><span className=\"pun\">,</span><span className=\"pln\"> $right</span><span className=\"pun\">);</span><span className=\"pln\">\r\n                        merge</span><span className=\"pun\">(</span><span className=\"pln\">$Array</span><span className=\"pun\">,</span><span className=\"pln\"> $left</span><span className=\"pun\">,</span><span className=\"pln\"> $mid</span><span className=\"pun\">,</span><span className=\"pln\"> $right</span><span className=\"pun\">);</span><span className=\"pln\">\r\n                      </span><span className=\"pun\">&#125;</span><span className=\"pln\">\r\n                    </span><span className=\"pun\">&#125;</span><span className=\"pln\">\r\n\r\n                    </span><span className=\"com\">&#47;&#47; merge function performs sort and merge operations</span><span className=\"pln\">\r\n                    </span><span className=\"com\">&#47;&#47; for mergesort function</span><span className=\"pln\">\r\n                    </span><span className=\"kwd\">function</span><span className=\"pln\"> merge</span><span className=\"pun\">(&amp;</span><span className=\"pln\">$Array</span><span className=\"pun\">,</span><span className=\"pln\"> $left</span><span className=\"pun\">,</span><span className=\"pln\"> $mid</span><span className=\"pun\">,</span><span className=\"pln\"> $right</span><span className=\"pun\">)</span><span className=\"pln\"> </span><span className=\"pun\">&#123;</span><span className=\"pln\">\r\n                      </span><span className=\"com\">&#47;&#47; Create two temporary array to hold split </span><span className=\"pln\">\r\n                      </span><span className=\"com\">&#47;&#47; elements of main array </span><span className=\"pln\">\r\n                      $n1 </span><span className=\"pun\">=</span><span className=\"pln\"> $mid </span><span className=\"pun\">-</span><span className=\"pln\"> $left </span><span className=\"pun\">+</span><span className=\"pln\"> </span><span className=\"lit\">1</span><span className=\"pun\">;</span><span className=\"pln\"> </span><span className=\"com\">&#47;&#47;no of elements in LeftArray</span><span className=\"pln\">\r\n                      $n2 </span><span className=\"pun\">=</span><span className=\"pln\"> $right </span><span className=\"pun\">-</span><span className=\"pln\"> $mid</span><span className=\"pun\">;</span><span className=\"pln\">     </span><span className=\"com\">&#47;&#47;no of elements in RightArray    </span><span className=\"pln\">\r\n                      $LeftArray </span><span className=\"pun\">=</span><span className=\"pln\"> array_fill</span><span className=\"pun\">(</span><span className=\"lit\">0</span><span className=\"pun\">,</span><span className=\"pln\"> $n1</span><span className=\"pun\">,</span><span className=\"pln\"> </span><span className=\"lit\">0</span><span className=\"pun\">);</span><span className=\"pln\"> \r\n                      $RightArray </span><span className=\"pun\">=</span><span className=\"pln\"> array_fill</span><span className=\"pun\">(</span><span className=\"lit\">0</span><span className=\"pun\">,</span><span className=\"pln\"> $n2</span><span className=\"pun\">,</span><span className=\"pln\"> </span><span className=\"lit\">0</span><span className=\"pun\">);</span><span className=\"pln\">\r\n                      </span><span className=\"kwd\">for</span><span className=\"pun\">(</span><span className=\"pln\">$i</span><span className=\"pun\">=</span><span className=\"lit\">0</span><span className=\"pun\">;</span><span className=\"pln\"> $i </span><span className=\"pun\">&lt;</span><span className=\"pln\"> $n1</span><span className=\"pun\">;</span><span className=\"pln\"> $i</span><span className=\"pun\">++)</span><span className=\"pln\"> </span><span className=\"pun\">&#123;</span><span className=\"pln\"> \r\n                        $LeftArray</span><span className=\"pun\">[</span><span className=\"pln\">$i</span><span className=\"pun\">]</span><span className=\"pln\"> </span><span className=\"pun\">=</span><span className=\"pln\"> $Array</span><span className=\"pun\">[</span><span className=\"pln\">$left </span><span className=\"pun\">+</span><span className=\"pln\"> $i</span><span className=\"pun\">];</span><span className=\"pln\">\r\n                      </span><span className=\"pun\">&#125;</span><span className=\"pln\">\r\n                      </span><span className=\"kwd\">for</span><span className=\"pun\">(</span><span className=\"pln\">$i</span><span className=\"pun\">=</span><span className=\"lit\">0</span><span className=\"pun\">;</span><span className=\"pln\"> $i </span><span className=\"pun\">&lt;</span><span className=\"pln\"> $n2</span><span className=\"pun\">;</span><span className=\"pln\"> $i</span><span className=\"pun\">++)</span><span className=\"pln\"> </span><span className=\"pun\">&#123;</span><span className=\"pln\"> \r\n                        $RightArray</span><span className=\"pun\">[</span><span className=\"pln\">$i</span><span className=\"pun\">]</span><span className=\"pln\"> </span><span className=\"pun\">=</span><span className=\"pln\"> $Array</span><span className=\"pun\">[</span><span className=\"pln\">$mid </span><span className=\"pun\">+</span><span className=\"pln\"> $i </span><span className=\"pun\">+</span><span className=\"pln\"> </span><span className=\"lit\">1</span><span className=\"pun\">];</span><span className=\"pln\">\r\n                      </span><span className=\"pun\">&#125;</span><span className=\"pln\">\r\n\r\n                      </span><span className=\"com\">&#47;&#47; In below section x, y and z represents index number</span><span className=\"pln\">\r\n                      </span><span className=\"com\">&#47;&#47; of LeftArray, RightArray and Array respectively</span><span className=\"pln\">\r\n                      $x</span><span className=\"pun\">=</span><span className=\"lit\">0</span><span className=\"pun\">;</span><span className=\"pln\"> $y</span><span className=\"pun\">=</span><span className=\"lit\">0</span><span className=\"pun\">;</span><span className=\"pln\"> $z</span><span className=\"pun\">=</span><span className=\"pln\">$left</span><span className=\"pun\">;</span><span className=\"pln\">\r\n                      </span><span className=\"kwd\">while</span><span className=\"pun\">(</span><span className=\"pln\">$x </span><span className=\"pun\">&lt;</span><span className=\"pln\"> $n1 </span><span className=\"pun\">&amp;&amp;</span><span className=\"pln\"> $y </span><span className=\"pun\">&lt;</span><span className=\"pln\"> $n2</span><span className=\"pun\">)</span><span className=\"pln\"> </span><span className=\"pun\">&#123;</span><span className=\"pln\">\r\n                        </span><span className=\"kwd\">if</span><span className=\"pun\">(</span><span className=\"pln\">$LeftArray</span><span className=\"pun\">[</span><span className=\"pln\">$x</span><span className=\"pun\">]</span><span className=\"pln\"> </span><span className=\"pun\">&lt;</span><span className=\"pln\"> $RightArray</span><span className=\"pun\">[</span><span className=\"pln\">$y</span><span className=\"pun\">])</span><span className=\"pln\"> </span><span className=\"pun\">&#123;</span><span className=\"pln\"> \r\n                          $Array</span><span className=\"pun\">[</span><span className=\"pln\">$z</span><span className=\"pun\">]</span><span className=\"pln\"> </span><span className=\"pun\">=</span><span className=\"pln\"> $LeftArray</span><span className=\"pun\">[</span><span className=\"pln\">$x</span><span className=\"pun\">];</span><span className=\"pln\"> \r\n                          $x</span><span className=\"pun\">++;</span><span className=\"pln\"> \r\n                        </span><span className=\"pun\">&#125;</span><span className=\"pln\">\r\n                        </span><span className=\"kwd\">else</span><span className=\"pln\"> </span><span className=\"pun\">&#123;</span><span className=\"pln\"> \r\n                          $Array</span><span className=\"pun\">[</span><span className=\"pln\">$z</span><span className=\"pun\">]</span><span className=\"pln\"> </span><span className=\"pun\">=</span><span className=\"pln\"> $RightArray</span><span className=\"pun\">[</span><span className=\"pln\">$y</span><span className=\"pun\">];</span><span className=\"pln\">  \r\n                          $y</span><span className=\"pun\">++;</span><span className=\"pln\"> \r\n                        </span><span className=\"pun\">&#125;</span><span className=\"pln\">\r\n                        $z</span><span className=\"pun\">++;</span><span className=\"pln\">\r\n                      </span><span className=\"pun\">&#125;</span><span className=\"pln\">\r\n\r\n                      </span><span className=\"com\">&#47;&#47; Copying the remaining elements of LeftArray</span><span className=\"pln\">\r\n                      </span><span className=\"kwd\">while</span><span className=\"pun\">(</span><span className=\"pln\">$x </span><span className=\"pun\">&lt;</span><span className=\"pln\"> $n1</span><span className=\"pun\">)</span><span className=\"pln\"> </span><span className=\"pun\">&#123;</span><span className=\"pln\"> \r\n                        $Array</span><span className=\"pun\">[</span><span className=\"pln\">$z</span><span className=\"pun\">]</span><span className=\"pln\"> </span><span className=\"pun\">=</span><span className=\"pln\"> $LeftArray</span><span className=\"pun\">[</span><span className=\"pln\">$x</span><span className=\"pun\">];</span><span className=\"pln\">  \r\n                        $x</span><span className=\"pun\">++;</span><span className=\"pln\">  \r\n                        $z</span><span className=\"pun\">++;</span><span className=\"pln\">\r\n                      </span><span className=\"pun\">&#125;</span><span className=\"pln\">\r\n\r\n                      </span><span className=\"com\">&#47;&#47; Copying the remaining elements of RightArray</span><span className=\"pln\">\r\n                      </span><span className=\"kwd\">while</span><span className=\"pun\">(</span><span className=\"pln\">$y </span><span className=\"pun\">&lt;</span><span className=\"pln\"> $n2</span><span className=\"pun\">)</span><span className=\"pln\"> </span><span className=\"pun\">&#123;</span><span className=\"pln\"> \r\n                        $Array</span><span className=\"pun\">[</span><span className=\"pln\">$z</span><span className=\"pun\">]</span><span className=\"pln\"> </span><span className=\"pun\">=</span><span className=\"pln\"> $RightArray</span><span className=\"pun\">[</span><span className=\"pln\">$y</span><span className=\"pun\">];</span><span className=\"pln\"> \r\n                        $y</span><span className=\"pun\">++;</span><span className=\"pln\">  \r\n                        $z</span><span className=\"pun\">++;</span><span className=\"pln\"> \r\n                      </span><span className=\"pun\">&#125;</span><span className=\"pln\">\r\n                    </span><span className=\"pun\">&#125;</span><span className=\"pln\">\r\n\r\n                    </span><span className=\"com\">&#47;&#47; function to print array</span><span className=\"pln\">\r\n                    </span><span className=\"kwd\">function</span><span className=\"pln\"> </span><span className=\"typ\">PrintArray</span><span className=\"pun\">(</span><span className=\"pln\">$Array</span><span className=\"pun\">,</span><span className=\"pln\"> $n</span><span className=\"pun\">)</span><span className=\"pln\"> </span><span className=\"pun\">&#123;</span><span className=\"pln\"> \r\n                      </span><span className=\"kwd\">for</span><span className=\"pln\"> </span><span className=\"pun\">(</span><span className=\"pln\">$i </span><span className=\"pun\">=</span><span className=\"pln\"> </span><span className=\"lit\">0</span><span className=\"pun\">;</span><span className=\"pln\"> $i </span><span className=\"pun\">&lt;</span><span className=\"pln\"> $n</span><span className=\"pun\">;</span><span className=\"pln\"> $i</span><span className=\"pun\">++)</span><span className=\"pln\"> \r\n                        echo $Array</span><span className=\"pun\">[</span><span className=\"pln\">$i</span><span className=\"pun\">].</span><span className=\"str\">\" \"</span><span className=\"pun\">;</span><span className=\"pln\"> \r\n                    </span><span className=\"pun\">&#125;</span><span className=\"pln\"> \r\n\r\n                    </span><span className=\"com\">&#47;&#47; test the code</span><span className=\"pln\">\r\n                    $MyArray </span><span className=\"pun\">=</span><span className=\"pln\"> array</span><span className=\"pun\">(</span><span className=\"lit\">10</span><span className=\"pun\">,</span><span className=\"pln\"> </span><span className=\"lit\">1</span><span className=\"pun\">,</span><span className=\"pln\"> </span><span className=\"lit\">23</span><span className=\"pun\">,</span><span className=\"pln\"> </span><span className=\"lit\">50</span><span className=\"pun\">,</span><span className=\"pln\"> </span><span className=\"lit\">4</span><span className=\"pun\">,</span><span className=\"pln\"> </span><span className=\"lit\">9</span><span className=\"pun\">,</span><span className=\"pln\"> </span><span className=\"pun\">-</span><span className=\"lit\">4</span><span className=\"pun\">);</span><span className=\"pln\">\r\n                    $n </span><span className=\"pun\">=</span><span className=\"pln\"> </span><span className=\"kwd\">sizeof</span><span className=\"pun\">(</span><span className=\"pln\">$MyArray</span><span className=\"pun\">);</span><span className=\"pln\"> \r\n                    echo </span><span className=\"str\">\"Original Array\\n\"</span><span className=\"pun\">;</span><span className=\"pln\">\r\n                    </span><span className=\"typ\">PrintArray</span><span className=\"pun\">(</span><span className=\"pln\">$MyArray</span><span className=\"pun\">,</span><span className=\"pln\"> $n</span><span className=\"pun\">);</span><span className=\"pln\">\r\n\r\n                    mergesort</span><span className=\"pun\">(</span><span className=\"pln\">$MyArray</span><span className=\"pun\">,</span><span className=\"pln\"> </span><span className=\"lit\">0</span><span className=\"pun\">,</span><span className=\"pln\"> $n</span><span className=\"pun\">-</span><span className=\"lit\">1</span><span className=\"pun\">);</span><span className=\"pln\">\r\n                    echo </span><span className=\"str\">\"\\nSorted Array\\n\"</span><span className=\"pun\">;</span><span className=\"pln\">\r\n                    </span><span className=\"typ\">PrintArray</span><span className=\"pun\">(</span><span className=\"pln\">$MyArray</span><span className=\"pun\">,</span><span className=\"pln\"> $n</span><span className=\"pun\">);</span><span className=\"pln\">\r\n                    </span><span className=\"pun\">?&gt;</span>\r\n                  </pre>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { FC, Suspense, useState } from \"react\";\r\nimport { AppBar } from \"@react-md/app-bar\";\r\nimport { CircularProgress } from \"@react-md/progress\";\r\nimport { Tabs, TabsManager } from \"@react-md/tabs\";\r\nimport { CrossFade } from \"@react-md/transition\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport useFakeLazyImport from \"../../useFakeLazyImport\";\r\n\r\nimport Container from \"../../Container\";\r\nimport PageM1 from \"./CodingwithC\";\r\nimport PageM2 from \"./CodingwithCpp\";\r\nimport PageM3 from \"./CodingwithPython\";\r\nimport PageM4 from \"./CodingwithJava\";\r\nimport PageM5 from \"./CodingwithC#\";\r\nimport PageM6 from \"./CodingwithPHP\";\r\n\r\ninterface CurrentPageProps {\r\n  page: number;\r\n}\r\n\r\nconst CurrentPage: FC<CurrentPageProps> = ({ page }) => {\r\n  let content = <PageM1 />;\r\n  if (page === 1) {\r\n    content = <PageM2 />;\r\n  } else if (page === 2) {\r\n    content = <PageM3 />;\r\n  } else if (page === 3) {\r\n    content = <PageM4 />;\r\n  } else if (page === 4) {\r\n    content = <PageM5 />;\r\n  } else if (page === 5) {\r\n    content = <PageM6 />;\r\n  }\r\n\r\n  return <CrossFade>{content}</CrossFade>;\r\n};\r\n\r\nconst CrossFadeExamplesAsyncMerge: FC = () => {\r\n  // just make it so it doesn't start loading until a new tab is shown\r\n  const [page, setPage] = useState<number>(-1);\r\n  const Content = useFakeLazyImport<CurrentPageProps>(CurrentPage, page, 5000);\r\n\r\n  return (\r\n    <>\r\n      <TabsManager\r\n        activeIndex={page === -1 ? 0 : page}\r\n        onActiveIndexChange={(index) => setPage(index)}\r\n        tabs={[\"C\", \"C++\", \"Python\",\"Java\",\"C#\",\"PHP\"]}\r\n        tabsId=\"static-transition\"\r\n      >\r\n        <AppBar theme=\"default\">\r\n          <Tabs />\r\n        </AppBar>\r\n      </TabsManager>\r\n      <Container>\r\n        {page === -1 && (\r\n          <Text type=\"headline-6\">\r\n            {'Click on other tabs to start coding!'}\r\n          </Text>\r\n        )}\r\n        {page !== -1 && (\r\n          <Suspense fallback={<CircularProgress className=\"mt-4\" id=\"async-loading-progress\" />}>\r\n            <Content page={page} />\r\n          </Suspense>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrossFadeExamplesAsyncMerge;","import React, { FC } from \"react\";\r\nimport { Divider } from \"@react-md/divider\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport CrossFadeExamplesAsyncMerge from \"./CrossFadeElementMerge\";\r\n//import CrossFadeExamplesStatic from \"./CrossFadeExamplesStatic\";\r\n\r\nimport '../../../../../sortingAlgorithms/__colorHub/codestyle.css';\r\n\r\nconst ViewcodeMerge: FC = () => (\r\n  <>\r\n    <Text type=\"headline-6\" margin=\"bottom\">\r\n      <div className=\"mt-1\"></div>\r\n      <h3 className=\"text-primary bg-white badge font-bold mt-2\">Code Explorer</h3>\r\n    </Text>\r\n    \r\n    <Divider />\r\n    <Text type=\"headline-6\">\r\n      <span className=\"text-pink badge badge-darkest col-lock badge-pill\">Source Program in multiple</span>&nbsp;<span className=\"text-dark badge badge-pink col-lock badge-pill\">Programming Languages</span>\r\n    </Text>\r\n    <CrossFadeExamplesAsyncMerge />\r\n    <Divider />\r\n  </>\r\n);\r\n\r\nexport default ViewcodeMerge;","import React, { FC, useState } from \"react\";\r\nimport { Button } from \"@react-md/button\";\r\nimport { useCSSTransition } from \"@react-md/transition\";\r\n\r\n\r\nimport styles from './UseCSSTransition.module.scss';\r\nimport { ExpandMoreSVGIcon, StorageSVGIcon, TextIconSpacing } from \"react-md\";\r\nimport ViewcodeMerge from \"./viewcodemerge\";\r\n\r\nconst DemoMerge: FC = () => {\r\n  const [transitionIn, setTransitionIn] = useState(false);\r\n  const [rendered, transitionProps] = useCSSTransition({\r\n    // changing this value causes the transition behavior to change\r\n    transitionIn,\r\n\r\n    // 5 seconds just for demo purposes... can also be an object\r\n    timeout: 5000,\r\n\r\n    // can also use a string that gets BEM-ified instead\r\n    classNames: {\r\n      enter: styles.enter,\r\n      enterActive: styles.entering,\r\n      exit: styles.exit,\r\n      exitActive: styles.exiting,\r\n    },\r\n\r\n    // can also trigger the css transition on initial mount\r\n    // appear: false,\r\n\r\n    // changes the `rendered` value to be false while not transitioning and\r\n    // `transitionIn` is false\r\n    temporary: true,\r\n\r\n    // an optional className to merge with the transition classNames\r\n    // className: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"text-white\" theme=\"error\" themeType=\"contained\" onClick={() => setTransitionIn(!transitionIn)}>\r\n        <TextIconSpacing icon={<StorageSVGIcon />}>\r\n          <TextIconSpacing icon={<ExpandMoreSVGIcon />} iconAfter>\r\n            Expand Codes\r\n          </TextIconSpacing>\r\n        </TextIconSpacing>\r\n      </Button>\r\n      {rendered && <div {...transitionProps}><ViewcodeMerge /></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DemoMerge;","import React from 'react';\r\nimport { Configuration } from 'react-md';\r\nimport DemoMerge from '../../utils/Program_codes/view_code/SortingAlgorithms/MergeSort/togglermerge';\r\nimport { newTrace, addToTrace, createKey } from './helpers';\r\n\r\nconst MergeSort = (nums) => {\r\n  // Initial State\r\n  const trace = newTrace(nums);\r\n\r\n  function merge(original, start, mid, end) {\r\n    const left = original.slice(start, mid);\r\n    const right = original.slice(mid, end);\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = 0;\r\n    while (i < left.length && j < right.length) {\r\n      if (left[i] <= right[j]) {\r\n        addToTrace(trace, original, [], [], [], [k + start]);\r\n        original[k + start] = left[i];\r\n        i++;\r\n        addToTrace(trace, original, [], [], [], [k + start]);\r\n      } else {\r\n        addToTrace(trace, original, [], [], [], [k + start]);\r\n        original[k + start] = right[j];\r\n        j++;\r\n        addToTrace(trace, original, [], [], [], [k + start]);\r\n      }\r\n      k++;\r\n    }\r\n    while (i < left.length) {\r\n      addToTrace(trace, original, [], [], [], [k + start]);\r\n      original[k + start] = left[i];\r\n      i++;\r\n      k++;\r\n      addToTrace(trace, original, [], [], [], [k + start]);\r\n    }\r\n    while (j < right.length) {\r\n      addToTrace(trace, original, [], [], [], [k + start]);\r\n      original[k + start] = right[j];\r\n      j++;\r\n      k++;\r\n      addToTrace(trace, original, [], [], [], [k + start]);\r\n    }\r\n\r\n    left.length = 0;\r\n    right.length = 0;\r\n  }\r\n\r\n  function recursiveMergeSort(original, start, end) {\r\n    const length = end - start;\r\n    if (length < 2) {\r\n      // original = []\r\n      if (length < 1) return original;\r\n      // original = [x]\r\n      else return [original[start]];\r\n    }\r\n\r\n    const midPoint = Math.floor((start + end) / 2);\r\n\r\n    // Visualize: First Half\r\n    addToTrace(\r\n      trace,\r\n      original,\r\n      [],\r\n      [...Array(midPoint - start).keys()].map((i) => i + start)\r\n    );\r\n    recursiveMergeSort(original, start, midPoint);\r\n\r\n    // Visualize: Second Half\r\n    addToTrace(\r\n      trace,\r\n      original,\r\n      [],\r\n      [...Array(end - midPoint).keys()].map((i) => i + midPoint)\r\n    );\r\n    recursiveMergeSort(original, midPoint, end);\r\n\r\n    merge(original, start, midPoint, end);\r\n  }\r\n\r\n  recursiveMergeSort(nums, 0, nums.length);\r\n\r\n  // Visualize: Mark all elements as sorted\r\n  addToTrace(trace, nums, [...Array(nums.length).keys()]);\r\n  return trace;\r\n};\r\n\r\nexport const MergeSortKey = createKey(\r\n  'Call Merge Sort',\r\n  null,\r\n  'Overwrite from axillary array'\r\n);\r\nexport const MergeSortDesc = {\r\n  title: 'Merge Sort',\r\n  code: (\r\n    <div className=\"row mt-3 mb-0 text-center\">\r\n      <Configuration>\r\n          <DemoMerge />\r\n      </Configuration>\r\n    </div>\r\n  ),\r\n  description: (\r\n    <div>\r\n      <p>\r\n        <a\r\n          href=\"https://en.wikipedia.org/wiki/Merge_sort\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <i class=\"cib-wikipedia\"></i>&nbsp;Merge Sort\r\n        </a>{' '}\r\n        is an efficient, stable sorting algorith that makes use of the\r\n        divide and conquer strategy. Conceptually the algorithm works as\r\n        follows:\r\n      </p>\r\n      <ol>\r\n        <li>\r\n          Divide the unsorted list into <em>n</em> sublists, each\r\n          containing one element(a list of one element is considered\r\n          sorted)\r\n        </li>\r\n        <li>\r\n          Repeatedly merge sublists to produce new sorted sublists until\r\n          there is only one sublist remaining. This will be the sorted\r\n          list.\r\n        </li>\r\n      </ol>\r\n    </div>\r\n  ),\r\n  worstCase: (\r\n    <span>\r\n      O(<em>n</em> log <em>n</em>)\r\n    </span>\r\n  ),\r\n  avgCase: (\r\n    <span>\r\n      O(<em>n</em> log <em>n</em>)\r\n    </span>\r\n  ),\r\n  bestCase: (\r\n    <span>\r\n      O(<em>n</em> log <em>n</em>)\r\n    </span>\r\n  ),\r\n  space: (\r\n    <span>\r\n      O(<em>n</em>)\r\n    </span>\r\n  )\r\n};\r\nexport default MergeSort;\r\n","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageQ1(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Quick Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#8727; C implementation QuickSort */</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include&lt;stdio.h&gt; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"comments\">&#47;&#47; A utility function to swap two elements </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">swap(</code><code className=\"color1 bold\">int</code><code className=\"plain\">* a, </code><code className=\"color1 bold\">int</code><code className=\"plain\">* b) </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">t = *a; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*a = *b; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*b = t; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"comments\">&#47;&#8727; This function takes last element as pivot, places </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">the pivot element at its correct position in sorted </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">array, and places all smaller (smaller than pivot) </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">to left of pivot and all greater elements to right </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">of pivot */</code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"color1 bold\">int</code> <code className=\"plain\">partition (</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">low, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">high) </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">pivot = arr[high];&nbsp;&nbsp;&nbsp; </code><code className=\"comments\">&#47;&#47; pivot </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i = (low - 1);&nbsp; </code><code className=\"comments\">&#47;&#47; Index of smaller element </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">j = low; j &lt;= high- 1; j++) </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If current element is smaller than the pivot </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[j] &lt; pivot) </code></div>\r\n                  <div className=\"line number26 index25 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number27 index26 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++;&nbsp;&nbsp;&nbsp; </code><code className=\"comments\">&#47;&#47; increment index of smaller element </code></div>\r\n                  <div className=\"line number28 index27 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">swap(&amp;arr[i], &amp;arr[j]); </code></div>\r\n                  <div className=\"line number29 index28 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number30 index29 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number31 index30 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">swap(&amp;arr[i + 1], &amp;arr[high]); </code></div>\r\n                  <div className=\"line number32 index31 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">(i + 1); </code></div>\r\n                  <div className=\"line number33 index32 alt2 highlighted\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number34 index33 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number35 index34 alt2 highlighted\"><code className=\"comments\">&#47;&#8727; The main function that implements QuickSort </code></div>\r\n                  <div className=\"line number36 index35 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code><code className=\"comments\">arr[] --&gt; Array to be sorted, </code></div>\r\n                  <div className=\"line number37 index36 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;</code><code className=\"comments\">low&nbsp; --&gt; Starting index, </code></div>\r\n                  <div className=\"line number38 index37 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;</code><code className=\"comments\">high&nbsp; --&gt; Ending index */</code></div>\r\n                  <div className=\"line number39 index38 alt2 highlighted\"><code className=\"keyword bold\">void</code> <code className=\"plain\">quickSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">low, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">high) </code></div>\r\n                  <div className=\"line number40 index39 alt1 highlighted\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number41 index40 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(low &lt; high) </code></div>\r\n                  <div className=\"line number42 index41 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number43 index42 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; pi is partitioning index, arr[p] is now </code></div>\r\n                  <div className=\"line number44 index43 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">at right place */</code></div>\r\n                  <div className=\"line number45 index44 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">pi = partition(arr, low, high); </code></div>\r\n                  <div className=\"line number46 index45 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number47 index46 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Separately sort elements before </code></div>\r\n                  <div className=\"line number48 index47 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; partition and after partition </code></div>\r\n                  <div className=\"line number49 index48 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">quickSort(arr, low, pi - 1); </code></div>\r\n                  <div className=\"line number50 index49 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">quickSort(arr, pi + 1, high); </code></div>\r\n                  <div className=\"line number51 index50 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number52 index51 alt1 highlighted\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number53 index52 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"comments\">&#47;&#8727; Function to print an array */</code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">size) </code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i; </code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i=0; i &lt; size; i++) </code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"%d \"</code><code className=\"plain\">, arr[i]); </code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"\\n\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"comments\">&#47;&#47; Driver program to test above functions </code></div>\r\n                  <div className=\"line number64 index63 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main() </code></div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123;10, 7, 8, 9, 1, 5&#125;; </code></div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr)/</code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]); </code></div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">quickSort(arr, 0, n-1); </code></div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"Sorted array: \\n\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n); </code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0; </code></div>\r\n                  <div className=\"line number72 index71 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageQ2(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C++</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Quick Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#8727; C++ implementation of QuickSort &#8727;&#47;</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;bits/stdc++.h&gt; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std;&nbsp; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"comments\">&#47;&#47; A utility function to swap two elements&nbsp; </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">swap(</code><code className=\"color1 bold\">int</code><code className=\"plain\">* a, </code><code className=\"color1 bold\">int</code><code className=\"plain\">* b)&nbsp; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">t = *a;&nbsp; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*a = *b;&nbsp; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">*b = t;&nbsp; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"comments\">&#47;&#8727; This function takes last element as pivot, places&nbsp; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"comments\">the pivot element at its correct position in sorted&nbsp; </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"comments\">array, and places all smaller (smaller than pivot)&nbsp; </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"comments\">to left of pivot and all greater elements to right&nbsp; </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"comments\">of pivot &#8727;&#47;</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">partition (</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">low, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">high)&nbsp; </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">pivot = arr[high]; </code><code className=\"comments\">&#47;&#47; pivot&nbsp; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i = (low - 1); </code><code className=\"comments\">&#47;&#47; Index of smaller element&nbsp; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">j = low; j &lt;= high - 1; j++)&nbsp; </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If current element is smaller than the pivot&nbsp; </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[j] &lt; pivot)&nbsp; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++; </code><code className=\"comments\">&#47;&#47; increment index of smaller element&nbsp; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">swap(&amp;arr[i], &amp;arr[j]);&nbsp; </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">swap(&amp;arr[i + 1], &amp;arr[high]);&nbsp; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">(i + 1);&nbsp; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"comments\">&#47;&#8727; The main function that implements QuickSort&nbsp; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"comments\">arr[] --&gt; Array to be sorted,&nbsp; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"comments\">low --&gt; Starting index,&nbsp; </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"comments\">high --&gt; Ending index &#8727;&#47;</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">quickSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">low, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">high)&nbsp; </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(low &lt; high)&nbsp; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; pi is partitioning index, arr[p] is now&nbsp; </code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">at right place &#8727;&#47;</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">pi = partition(arr, low, high);&nbsp; </code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Separately sort elements before&nbsp; </code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; partition and after partition&nbsp; </code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">quickSort(arr, low, pi - 1);&nbsp; </code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">quickSort(arr, pi + 1, high);&nbsp; </code></div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"comments\">&#47;&#8727; Function to print an array &#8727;&#47;</code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">size)&nbsp; </code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i;&nbsp; </code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; size; i++)&nbsp; </code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; arr[i] &lt;&lt; </code><code className=\"string\">\" \"</code><code className=\"plain\">;&nbsp; </code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; endl;&nbsp; </code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number64 index63 alt1\"><code className=\"comments\">&#47;&#47; Driver Code </code></div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main()&nbsp; </code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"plain\">&#123;&nbsp; </code></div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123;10, 7, 8, 9, 1, 5&#125;;&nbsp; </code></div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]);&nbsp; </code></div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">quickSort(arr, 0, n - 1);&nbsp; </code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"Sorted array: \\n\"</code><code className=\"plain\">;&nbsp; </code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n);&nbsp; </code></div>\r\n                  <div className=\"line number72 index71 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0;&nbsp; </code></div>\r\n                  <div className=\"line number73 index72 alt2\"><code className=\"plain\">&#125;&nbsp; </code></div>\r\n                  <div className=\"line number74 index73 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageQ3(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Python</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Quick Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Python program for implementation of Quicksort Sort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number3 index2 alt2 highlighted\"><code className=\"comments\"># This function takes last element as pivot, places </code></div>\r\n                  <div className=\"line number4 index3 alt1 highlighted\"><code className=\"comments\"># the pivot element at its correct position in sorted </code></div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"comments\"># array, and places all smaller (smaller than pivot) </code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"comments\"># to left of pivot and all greater elements to right </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"comments\"># of pivot </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"keyword\">def</code> <code className=\"plain\">partition(arr,low,high): </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i </code><code className=\"keyword\">=</code> <code className=\"plain\">( low</code><code className=\"keyword\">-</code><code className=\"value\">1</code> <code className=\"plain\">)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code className=\"comments\"># index of smaller element </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">pivot </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[high]&nbsp;&nbsp;&nbsp;&nbsp; </code><code className=\"comments\"># pivot </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">j </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(low , high): </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># If current element is smaller than the pivot </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code>&nbsp;&nbsp; <code className=\"plain\">arr[j] &lt; pivot: </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># increment index of smaller element </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i </code><code className=\"keyword\">=</code> <code className=\"plain\">i</code><code className=\"keyword\">+</code><code className=\"value\">1</code>&nbsp;</div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i],arr[j] </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[j],arr[i] </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i</code><code className=\"keyword\">+</code><code className=\"value\">1</code><code className=\"plain\">],arr[high] </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[high],arr[i</code><code className=\"keyword\">+</code><code className=\"value\">1</code><code className=\"plain\">] </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">( i</code><code className=\"keyword\">+</code><code className=\"value\">1</code> <code className=\"plain\">) </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"comments\"># The main function that implements QuickSort </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"comments\"># arr[] --&gt; Array to be sorted, </code></div>\r\n                  <div className=\"line number26 index25 alt1 highlighted\"><code className=\"comments\"># low&nbsp; --&gt; Starting index, </code></div>\r\n                  <div className=\"line number27 index26 alt2 highlighted\"><code className=\"comments\"># high&nbsp; --&gt; Ending index </code></div>\r\n                  <div className=\"line number28 index27 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number29 index28 alt2 highlighted\"><code className=\"comments\"># Function to do Quick sort </code></div>\r\n                  <div className=\"line number30 index29 alt1 highlighted\"><code className=\"keyword\">def</code> <code className=\"plain\">quickSort(arr,low,high): </code></div>\r\n                  <div className=\"line number31 index30 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">low &lt; high: </code></div>\r\n                  <div className=\"line number32 index31 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># pi is partitioning index, arr[p] is now </code></div>\r\n                  <div className=\"line number34 index33 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># at right place </code></div>\r\n                  <div className=\"line number35 index34 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">pi </code><code className=\"keyword\">=</code> <code className=\"plain\">partition(arr,low,high) </code></div>\r\n                  <div className=\"line number36 index35 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number37 index36 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Separately sort elements before </code></div>\r\n                  <div className=\"line number38 index37 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># partition and after partition </code></div>\r\n                  <div className=\"line number39 index38 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">quickSort(arr, low, pi</code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number40 index39 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">quickSort(arr, pi</code><code className=\"keyword\">+</code><code className=\"value\">1</code><code className=\"plain\">, high) </code></div>\r\n                  <div className=\"line number41 index40 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"comments\"># Driver code to test above </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"plain\">arr </code><code className=\"keyword\">=</code> <code className=\"plain\">[</code><code className=\"value\">10</code><code className=\"plain\">, </code><code className=\"value\">7</code><code className=\"plain\">, </code><code className=\"value\">8</code><code className=\"plain\">, </code><code className=\"value\">9</code><code className=\"plain\">, </code><code className=\"value\">1</code><code className=\"plain\">, </code><code className=\"value\">5</code><code className=\"plain\">] </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"plain\">n </code><code className=\"keyword\">=</code> <code className=\"functions\">len</code><code className=\"plain\">(arr) </code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"plain\">quickSort(arr,</code><code className=\"value\">0</code><code className=\"plain\">,n</code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"keyword\">print</code> <code className=\"plain\">(</code><code className=\"string\">\"Sorted array is:\"</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(n): </code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">print</code> <code className=\"plain\">(</code><code className=\"string\">\"%d\"</code> <code className=\"keyword\">%</code><code className=\"plain\">arr[i]), </code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageQ4(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Java</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Quick Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Java program for implementation of QuickSort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">QuickSort </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number4 index3 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; This function takes last element as pivot, </code></div>\r\n                  <div className=\"line number5 index4 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">places the pivot element at its correct </code></div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">position in sorted array, and places all </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">smaller (smaller than pivot) to left of </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">pivot and all greater elements to right </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">of pivot */</code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">partition(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[], </code><code className=\"keyword\">int</code> <code className=\"plain\">low, </code><code className=\"keyword\">int</code> <code className=\"plain\">high) </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">pivot = arr[high];&nbsp; </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">i = (low-</code><code className=\"value\">1</code><code className=\"plain\">); </code><code className=\"comments\">&#47;&#47; index of smaller element </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">j=low; j&lt;high; j++) </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If current element is smaller than the pivot </code></div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[j] &lt; pivot) </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++; </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; swap arr[i] and arr[j] </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp = arr[i]; </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i] = arr[j]; </code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j] = temp; </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number26 index25 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number27 index26 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number28 index27 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; swap arr[i+1] and arr[high] (or pivot) </code></div>\r\n                  <div className=\"line number29 index28 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp = arr[i+</code><code className=\"value\">1</code><code className=\"plain\">]; </code></div>\r\n                  <div className=\"line number30 index29 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i+</code><code className=\"value\">1</code><code className=\"plain\">] = arr[high]; </code></div>\r\n                  <div className=\"line number31 index30 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[high] = temp; </code></div>\r\n                  <div className=\"line number32 index31 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">i+</code><code className=\"value\">1</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number34 index33 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number35 index34 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number36 index35 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number37 index36 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; The main function that implements QuickSort() </code></div>\r\n                  <div className=\"line number38 index37 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">arr[] --&gt; Array to be sorted, </code></div>\r\n                  <div className=\"line number39 index38 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">low&nbsp; --&gt; Starting index, </code></div>\r\n                  <div className=\"line number40 index39 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">high&nbsp; --&gt; Ending index */</code></div>\r\n                  <div className=\"line number41 index40 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">sort(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[], </code><code className=\"keyword\">int</code> <code className=\"plain\">low, </code><code className=\"keyword\">int</code> <code className=\"plain\">high) </code></div>\r\n                  <div className=\"line number42 index41 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number43 index42 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(low &lt; high) </code></div>\r\n                  <div className=\"line number44 index43 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number45 index44 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; pi is partitioning index, arr[pi] is&nbsp; </code></div>\r\n                  <div className=\"line number46 index45 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">now at right place */</code></div>\r\n                  <div className=\"line number47 index46 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">pi = partition(arr, low, high); </code></div>\r\n                  <div className=\"line number48 index47 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number49 index48 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Recursively sort elements before </code></div>\r\n                  <div className=\"line number50 index49 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; partition and after partition </code></div>\r\n                  <div className=\"line number51 index50 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">sort(arr, low, pi-</code><code className=\"value\">1</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number52 index51 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">sort(arr, pi+</code><code className=\"value\">1</code><code className=\"plain\">, high); </code></div>\r\n                  <div className=\"line number53 index52 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number54 index53 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number55 index54 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; A utility function to print array of size n */</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[]) </code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length; </code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i=</code><code className=\"value\">0</code><code className=\"plain\">; i&lt;n; ++i) </code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.print(arr[i]+</code><code className=\"string\">\" \"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(); </code></div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number64 index63 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver program </code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String args[]) </code></div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123;</code><code className=\"value\">10</code><code className=\"plain\">, </code><code className=\"value\">7</code><code className=\"plain\">, </code><code className=\"value\">8</code><code className=\"plain\">, </code><code className=\"value\">9</code><code className=\"plain\">, </code><code className=\"value\">1</code><code className=\"plain\">, </code><code className=\"value\">5</code><code className=\"plain\">&#125;; </code></div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length; </code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">QuickSort ob = </code><code className=\"keyword\">new</code> <code className=\"plain\">QuickSort(); </code></div>\r\n                  <div className=\"line number72 index71 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">ob.sort(arr, </code><code className=\"value\">0</code><code className=\"plain\">, n-</code><code className=\"value\">1</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number73 index72 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number74 index73 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"sorted array\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number75 index74 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr); </code></div>\r\n                  <div className=\"line number76 index75 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number77 index76 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageQ5(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C#</Text>\r\n        <Text>\r\n          <code>\r\n          <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Quick Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C# program for implementation of QuickSort </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">using</code> <code className=\"plain\">System; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG &#123; </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; This function takes last element as pivot, </code></div>\r\n                  <div className=\"line number7 index6 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">places the pivot element at its correct </code></div>\r\n                  <div className=\"line number8 index7 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">position in sorted array, and places all </code></div>\r\n                  <div className=\"line number9 index8 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">smaller (smaller than pivot) to left of </code></div>\r\n                  <div className=\"line number10 index9 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">pivot and all greater elements to right </code></div>\r\n                  <div className=\"line number11 index10 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">of pivot */</code></div>\r\n                  <div className=\"line number12 index11 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">int</code> <code className=\"plain\">partition(</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr, </code><code className=\"keyword\">int</code> <code className=\"plain\">low, </code></div>\r\n                  <div className=\"line number13 index12 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">high) </code></div>\r\n                  <div className=\"line number14 index13 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number15 index14 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">pivot = arr[high];&nbsp; </code></div>\r\n                  <div className=\"line number16 index15 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; index of smaller element </code></div>\r\n                  <div className=\"line number18 index17 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">i = (low - 1);&nbsp; </code></div>\r\n                  <div className=\"line number19 index18 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">j = low; j &lt; high; j++) </code></div>\r\n                  <div className=\"line number20 index19 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number21 index20 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If current element is smaller&nbsp; </code></div>\r\n                  <div className=\"line number22 index21 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; than the pivot </code></div>\r\n                  <div className=\"line number23 index22 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[j] &lt; pivot) </code></div>\r\n                  <div className=\"line number24 index23 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number25 index24 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">i++; </code></div>\r\n                  <div className=\"line number26 index25 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number27 index26 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; swap arr[i] and arr[j] </code></div>\r\n                  <div className=\"line number28 index27 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp = arr[i]; </code></div>\r\n                  <div className=\"line number29 index28 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i] = arr[j]; </code></div>\r\n                  <div className=\"line number30 index29 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[j] = temp; </code></div>\r\n                  <div className=\"line number31 index30 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number32 index31 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number33 index32 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number34 index33 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; swap arr[i+1] and arr[high] (or pivot) </code></div>\r\n                  <div className=\"line number35 index34 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp1 = arr[i+1]; </code></div>\r\n                  <div className=\"line number36 index35 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i+1] = arr[high]; </code></div>\r\n                  <div className=\"line number37 index36 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[high] = temp1; </code></div>\r\n                  <div className=\"line number38 index37 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number39 index38 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">i+1; </code></div>\r\n                  <div className=\"line number40 index39 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number41 index40 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number42 index41 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number43 index42 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; The main function that implements QuickSort() </code></div>\r\n                  <div className=\"line number44 index43 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">arr[] --&gt; Array to be sorted, </code></div>\r\n                  <div className=\"line number45 index44 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">low --&gt; Starting index, </code></div>\r\n                  <div className=\"line number46 index45 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">high --&gt; Ending index */</code></div>\r\n                  <div className=\"line number47 index46 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">quickSort(</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr, </code><code className=\"keyword\">int</code> <code className=\"plain\">low, </code><code className=\"keyword\">int</code> <code className=\"plain\">high) </code></div>\r\n                  <div className=\"line number48 index47 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number49 index48 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(low &lt; high) </code></div>\r\n                  <div className=\"line number50 index49 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number51 index50 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number52 index51 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; pi is partitioning index, arr[pi] is&nbsp; </code></div>\r\n                  <div className=\"line number53 index52 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">now at right place */</code></div>\r\n                  <div className=\"line number54 index53 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">pi = partition(arr, low, high); </code></div>\r\n                  <div className=\"line number55 index54 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number56 index55 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Recursively sort elements before </code></div>\r\n                  <div className=\"line number57 index56 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; partition and after partition </code></div>\r\n                  <div className=\"line number58 index57 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">quickSort(arr, low, pi-1); </code></div>\r\n                  <div className=\"line number59 index58 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">quickSort(arr, pi+1, high); </code></div>\r\n                  <div className=\"line number60 index59 alt1 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number61 index60 alt2 highlighted\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; A utility function to print array of size n </code></div>\r\n                  <div className=\"line number64 index63 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr, </code><code className=\"keyword\">int</code> <code className=\"plain\">n) </code></div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 0; i &lt; n; ++i) </code></div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(arr[i] + </code><code className=\"string\">\" \"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(); </code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number72 index71 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver program </code></div>\r\n                  <div className=\"line number73 index72 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main() </code></div>\r\n                  <div className=\"line number74 index73 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number75 index74 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr = &#123;10, 7, 8, 9, 1, 5&#125;; </code></div>\r\n                  <div className=\"line number76 index75 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length; </code></div>\r\n                  <div className=\"line number77 index76 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">quickSort(arr, 0, n-1); </code></div>\r\n                  <div className=\"line number78 index77 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"sorted array \"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number79 index78 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n); </code></div>\r\n                  <div className=\"line number80 index79 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number81 index80 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number82 index81 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageQ6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in PHP</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Quick Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                <h5>Press button for source code of Quick Sort in PHP</h5>\r\n                </div>\r\n              </div>\r\n            </h5><br></br>\r\n              <div className=\"text-center text-white font-weight-bold\"><h5>\r\n                |'|<br></br>| |<br></br>__| |__<br></br>\\&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/<br></br>\\&nbsp;&nbsp;&nbsp;&nbsp;/<br></br>\\/<br></br>\r\n                </h5>\r\n              </div>\r\n            <div className=\"text-center\"><span><a className=\"text-white\" rel=\"noreferrer noopener\" href=\"https://gist.githubusercontent.com/wangshijun/3552889/raw/7fcae3973bc8cf3ad282a093e40a685073f6f5d2/quicksort.php\" target=\"_self\"><MDBBtn className=\"btn-primary\">Click Me for source code</MDBBtn></a></span></div>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { FC, Suspense, useState } from \"react\";\r\nimport { AppBar } from \"@react-md/app-bar\";\r\nimport { CircularProgress } from \"@react-md/progress\";\r\nimport { Tabs, TabsManager } from \"@react-md/tabs\";\r\nimport { CrossFade } from \"@react-md/transition\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport useFakeLazyImport from \"../../useFakeLazyImport\";\r\n\r\nimport Container from \"../../Container\";\r\nimport PageQ1 from \"./CodingwithC\";\r\nimport PageQ2 from \"./CodingwithCpp\";\r\nimport PageQ3 from \"./CodingwithPython\";\r\nimport PageQ4 from \"./CodingwithJava\";\r\nimport PageQ5 from \"./CodingwithC#\";\r\nimport PageQ6 from \"./CodingwithPHP\";\r\n\r\ninterface CurrentPageProps {\r\n  page: number;\r\n}\r\n\r\nconst CurrentPage: FC<CurrentPageProps> = ({ page }) => {\r\n  let content = <PageQ1 />;\r\n  if (page === 1) {\r\n    content = <PageQ2 />;\r\n  } else if (page === 2) {\r\n    content = <PageQ3 />;\r\n  } else if (page === 3) {\r\n    content = <PageQ4 />;\r\n  } else if (page === 4) {\r\n    content = <PageQ5 />;\r\n  } else if (page === 5) {\r\n    content = <PageQ6 />;\r\n  }\r\n\r\n  return <CrossFade>{content}</CrossFade>;\r\n};\r\n\r\nconst CrossFadeExamplesAsyncQuick: FC = () => {\r\n  // just make it so it doesn't start loading until a new tab is shown\r\n  const [page, setPage] = useState<number>(-1);\r\n  const Content = useFakeLazyImport<CurrentPageProps>(CurrentPage, page, 5000);\r\n\r\n  return (\r\n    <>\r\n      <TabsManager\r\n        activeIndex={page === -1 ? 0 : page}\r\n        onActiveIndexChange={(index) => setPage(index)}\r\n        tabs={[\"C\", \"C++\", \"Python\",\"Java\",\"C#\",\"PHP\"]}\r\n        tabsId=\"static-transition\"\r\n      >\r\n        <AppBar theme=\"default\">\r\n          <Tabs />\r\n        </AppBar>\r\n      </TabsManager>\r\n      <Container>\r\n        {page === -1 && (\r\n          <Text type=\"headline-6\">\r\n            {'Click on other tabs to start coding!'}\r\n          </Text>\r\n        )}\r\n        {page !== -1 && (\r\n          <Suspense fallback={<CircularProgress className=\"mt-4\" id=\"async-loading-progress\" />}>\r\n            <Content page={page} />\r\n          </Suspense>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrossFadeExamplesAsyncQuick;","import React, { FC } from \"react\";\r\nimport { Divider } from \"@react-md/divider\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport CrossFadeExamplesAsyncQuick from \"./CrossFadeElementQuick\";\r\n//import CrossFadeExamplesStatic from \"./CrossFadeExamplesStatic\";\r\n\r\nimport '../../../../../sortingAlgorithms/__colorHub/codestyle.css';\r\n\r\nconst ViewcodeQuick: FC = () => (\r\n  <>\r\n    <Text type=\"headline-6\" margin=\"bottom\">\r\n      <div className=\"mt-1\"></div>\r\n      <h3 className=\"text-primary bg-white badge font-bold mt-2\">Code Explorer</h3>\r\n    </Text>\r\n    \r\n    <Divider />\r\n    <Text type=\"headline-6\">\r\n      <span className=\"text-pink badge badge-darkest col-lock badge-pill\">Source Program in multiple</span>&nbsp;<span className=\"text-dark badge badge-pink col-lock badge-pill\">Programming Languages</span>\r\n    </Text>\r\n    <CrossFadeExamplesAsyncQuick />\r\n    <Divider />\r\n  </>\r\n);\r\n\r\nexport default ViewcodeQuick;","import React, { FC, useState } from \"react\";\r\nimport { Button } from \"@react-md/button\";\r\nimport { useCSSTransition } from \"@react-md/transition\";\r\n\r\n\r\nimport styles from './UseCSSTransition.module.scss';\r\nimport { ExpandMoreSVGIcon, StorageSVGIcon, TextIconSpacing } from \"react-md\";\r\nimport ViewcodeQuick from \"./viewcodequick\";\r\n\r\nconst DemoQuick: FC = () => {\r\n  const [transitionIn, setTransitionIn] = useState(false);\r\n  const [rendered, transitionProps] = useCSSTransition({\r\n    // changing this value causes the transition behavior to change\r\n    transitionIn,\r\n\r\n    // 5 seconds just for demo purposes... can also be an object\r\n    timeout: 5000,\r\n\r\n    // can also use a string that gets BEM-ified instead\r\n    classNames: {\r\n      enter: styles.enter,\r\n      enterActive: styles.entering,\r\n      exit: styles.exit,\r\n      exitActive: styles.exiting,\r\n    },\r\n\r\n    // can also trigger the css transition on initial mount\r\n    // appear: false,\r\n\r\n    // changes the `rendered` value to be false while not transitioning and\r\n    // `transitionIn` is false\r\n    temporary: true,\r\n\r\n    // an optional className to merge with the transition classNames\r\n    // className: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"text-white\" theme=\"error\" themeType=\"contained\" onClick={() => setTransitionIn(!transitionIn)}>\r\n        <TextIconSpacing icon={<StorageSVGIcon />}>\r\n          <TextIconSpacing icon={<ExpandMoreSVGIcon />} iconAfter>\r\n            Expand Codes\r\n          </TextIconSpacing>\r\n        </TextIconSpacing>\r\n      </Button>\r\n      {rendered && <div {...transitionProps}><ViewcodeQuick /></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DemoQuick;","import React from 'react';\r\nimport { Configuration } from 'react-md';\r\nimport DemoQuick from '../../utils/Program_codes/view_code/SortingAlgorithms/QuickSort/togglerquick';\r\nimport {\r\n  swap,\r\n  newTrace,\r\n  addToTrace,\r\n  lastSorted,\r\n  createRange,\r\n  createKey\r\n} from './helpers';\r\n\r\nconst QuickSort = (nums) => {\r\n  // Initial State\r\n  const trace = newTrace(nums);\r\n\r\n  function choosePivot(array, start, end) {\r\n    // randomly pick an element between start and end;\r\n    return Math.floor(Math.random() * (end - start)) + start;\r\n  }\r\n\r\n  function partition(array, start, end) {\r\n    let i = start + 1;\r\n    let j = start + 1;\r\n\r\n    // Visualize: Keep pivot marked\r\n    addToTrace(trace, array, lastSorted(trace), [start]);\r\n\r\n    while (j <= end) {\r\n      if (array[j] < array[start]) {\r\n        // Visualize: Mark item that is less than pivot\r\n        addToTrace(\r\n          trace,\r\n          array,\r\n          lastSorted(trace),\r\n          [start],\r\n          [j],\r\n          [],\r\n          createRange(start + 1, i)\r\n        );\r\n\r\n        swap(array, i, j);\r\n\r\n        // Visualize: Move item to lesser list\r\n        addToTrace(\r\n          trace,\r\n          array,\r\n          lastSorted(trace),\r\n          [start],\r\n          [i],\r\n          [],\r\n          createRange(start + 1, i)\r\n        );\r\n        i += 1;\r\n      }\r\n      j += 1;\r\n    }\r\n\r\n    // Visualize: Mark center position\r\n    addToTrace(\r\n      trace,\r\n      array,\r\n      lastSorted(trace),\r\n      [i - 1],\r\n      [],\r\n      [],\r\n      createRange(start, i - 1)\r\n    );\r\n    swap(array, start, i - 1);\r\n\r\n    // Visualize: Move pivot to center\r\n    addToTrace(\r\n      trace,\r\n      array,\r\n      lastSorted(trace),\r\n      [i - 1],\r\n      [],\r\n      [],\r\n      createRange(start, i - 1)\r\n    );\r\n    return i - 1;\r\n  }\r\n\r\n  function recursiveQuickSort(array, start, end) {\r\n    if (start >= end) {\r\n      if (start === end) {\r\n        // Visualize: Mark only item as sorted\r\n        addToTrace(trace, array, [...lastSorted(trace), start]);\r\n      }\r\n      return null;\r\n    }\r\n\r\n    let pivot = choosePivot(array, start, end);\r\n\r\n    // Visualize: Mark chosen pivot\r\n    addToTrace(trace, array, lastSorted(trace), [pivot]);\r\n\r\n    swap(array, start, pivot);\r\n\r\n    // Visualize: Move chosen pivot to start\r\n    addToTrace(trace, array, lastSorted(trace), [pivot]);\r\n\r\n    pivot = partition(array, start, end);\r\n\r\n    // Visualize: Mark pivot after partition as sorted\r\n    addToTrace(trace, array, [...lastSorted(trace), pivot]);\r\n\r\n    recursiveQuickSort(array, start, pivot - 1);\r\n    recursiveQuickSort(array, pivot + 1, end);\r\n  }\r\n\r\n  recursiveQuickSort(nums, 0, nums.length - 1);\r\n\r\n  return trace;\r\n};\r\n\r\nexport const QuickSortKey = createKey(\r\n  'Comparing',\r\n  'Swapping',\r\n  null,\r\n  'Less than pivot'\r\n);\r\n\r\nexport const QuickSortDesc = {\r\n  title: 'Quick Sort',\r\n  code: (\r\n    <div className=\"row mt-3 mb-0 text-center\">\r\n      <Configuration>\r\n          <DemoQuick />\r\n      </Configuration>\r\n    </div>\r\n  ),\r\n  description: (\r\n    <div>\r\n      <p>\r\n        <a\r\n          href=\"https://en.wikipedia.org/wiki/Quicksort\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <i class=\"cib-wikipedia\"></i>&nbsp;Quick Sort\r\n        </a>{' '}\r\n        is an efficient, in-place sorting algorith that in practice is\r\n        faster than MergeSort and HeapSort. However, it is not a stable\r\n        sorting algorithm, meaning that the relative positioning of\r\n        equal sort items is not preserved.Quicksort is a divide and\r\n        conquer algorithm. Quicksort first divides a large array into\r\n        two smaller sub-arrays: the low elements and the high elements.\r\n        Quicksort can then recursively sort the sub-arrays. The steps\r\n        are:\r\n      </p>\r\n      <ol>\r\n        <li>\r\n          Pick an element, called a pivot, from the array. This is\r\n          usually done at random.\r\n        </li>\r\n        <li>Move pivot element to the start of the array.</li>\r\n        <li>\r\n          <em>Partitioning:</em> reorder the array so that all elements\r\n          with values less than the pivot come before the pivot, while\r\n          all elements with values greater than the pivot come after it\r\n          (equal values can go either way). After this partitioning, the\r\n          pivot is in its final position. This is called the{' '}\r\n          <em>partition</em> operation.\r\n        </li>\r\n        <li>\r\n          Recursively apply the above steps to the sub-array of elements\r\n          with smaller values and separately to the sub-array of\r\n          elements with greater values.\r\n        </li>\r\n      </ol>\r\n      <p>\r\n        The base case of the recursion is an array of size zero or one,\r\n        which are sorted by definition.\r\n      </p>\r\n    </div>\r\n  ),\r\n  worstCase: (\r\n    <span>\r\n      O(<em>n</em>\r\n      <sup>2</sup>)\r\n    </span>\r\n  ),\r\n  avgCase: (\r\n    <span>\r\n      O(<em>n</em>log<em>n</em>)\r\n    </span>\r\n  ),\r\n  bestCase: (\r\n    <span>\r\n      O(<em>n</em>log<em>n</em>)\r\n    </span>\r\n  ),\r\n  space: (\r\n    <span>\r\n      O(log<em>n</em>)\r\n    </span>\r\n  )\r\n};\r\n\r\nexport default QuickSort;\r\n","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageH1(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Heap Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-4 mt-4 mb-5\">\r\n                  <ul className=\"dp-j\" style={{listStyleType:'none'}}><li className=\"alt\"><span><span>#include&lt;stdio.h&gt;&nbsp;&nbsp;</span></span></li><li className=\"\"><span><span className=\"keyword\">int</span><span>&nbsp;temp;&nbsp;&nbsp;</span></span></li><li className=\"alt\"><span>&nbsp;&nbsp;</span></li><li className=\"\"><span><span className=\"keyword\">void</span><span>&nbsp;heapify(</span><span className=\"keyword\">int</span><span>&nbsp;arr[],&nbsp;</span><span className=\"keyword\">int</span><span>&nbsp;size,&nbsp;</span><span className=\"keyword\">int</span><span>&nbsp;i)&nbsp;&nbsp;</span></span></li><li className=\"alt\"><span>&#123;&nbsp;&nbsp;</span></li><li className=\"\"><span><span className=\"keyword\">int</span><span>&nbsp;largest&nbsp;=&nbsp;i;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li className=\"alt\"><span><span className=\"keyword\">int</span><span>&nbsp;left&nbsp;=&nbsp;</span><span className=\"number\">2</span><span>*i&nbsp;+&nbsp;</span><span className=\"number\">1</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li className=\"\"><span><span className=\"keyword\">int</span><span>&nbsp;right&nbsp;=&nbsp;</span><span className=\"number\">2</span><span>*i&nbsp;+&nbsp;</span><span className=\"number\">2</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li className=\"alt\"><span>&nbsp;&nbsp;</span></li><li className=\"\"><span><span className=\"keyword\">if</span><span>&nbsp;(left&nbsp;&lt;&nbsp;size&nbsp;&amp;&amp;&nbsp;arr[left]&nbsp;&gt;arr[largest])&nbsp;&nbsp;</span></span></li><li className=\"alt\"><span>largest&nbsp;=&nbsp;left;&nbsp;&nbsp;</span></li><li className=\"\"><span>&nbsp;&nbsp;</span></li><li className=\"alt\"><span><span className=\"keyword\">if</span><span>&nbsp;(right&nbsp;&lt;&nbsp;size&nbsp;&amp;&amp;&nbsp;arr[right]&nbsp;&gt;&nbsp;arr[largest])&nbsp;&nbsp;</span></span></li><li className=\"\"><span>largest&nbsp;=&nbsp;right;&nbsp;&nbsp;</span></li><li className=\"alt\"><span>&nbsp;&nbsp;</span></li><li className=\"\"><span><span className=\"keyword\">if</span><span>&nbsp;(largest&nbsp;!=&nbsp;i)&nbsp;&nbsp;</span></span></li><li className=\"alt\"><span>&#123;&nbsp;&nbsp;</span></li><li className=\"\"><span>temp&nbsp;=&nbsp;arr[i];&nbsp;&nbsp;</span></li><li className=\"alt\"><span>&nbsp;&nbsp;&nbsp;&nbsp;arr[i]=&nbsp;arr[largest];&nbsp;&nbsp;&nbsp;</span></li><li className=\"\"><span>&nbsp;&nbsp;&nbsp;&nbsp;arr[largest]&nbsp;=&nbsp;temp;&nbsp;&nbsp;</span></li><li className=\"alt\"><span>heapify(arr,&nbsp;size,&nbsp;largest);&nbsp;&nbsp;</span></li><li className=\"\"><span>&#125;&nbsp;&nbsp;</span></li><li className=\"alt\"><span>&#125;&nbsp;&nbsp;</span></li><li className=\"\"><span>&nbsp;&nbsp;</span></li><li className=\"alt\"><span><span className=\"keyword\">void</span><span>&nbsp;heapSort(</span><span className=\"keyword\">int</span><span>&nbsp;arr[],&nbsp;</span><span className=\"keyword\">int</span><span>&nbsp;size)&nbsp;&nbsp;</span></span></li><li className=\"\"><span>&#123;&nbsp;&nbsp;</span></li><li className=\"alt\"><span><span className=\"keyword\">int</span><span>&nbsp;i;&nbsp;&nbsp;</span></span></li><li className=\"\"><span><span className=\"keyword\">for</span><span>&nbsp;(i&nbsp;=&nbsp;size&nbsp;/&nbsp;</span><span className=\"number\">2</span><span>&nbsp;-&nbsp;</span><span className=\"number\">1</span><span>;&nbsp;i&nbsp;&gt;=&nbsp;</span><span className=\"number\">0</span><span>;&nbsp;i--)&nbsp;&nbsp;</span></span></li><li className=\"alt\"><span>heapify(arr,&nbsp;size,&nbsp;i);&nbsp;&nbsp;</span></li><li className=\"\"><span><span className=\"keyword\">for</span><span>&nbsp;(i=size-</span><span className=\"number\">1</span><span>;&nbsp;i&gt;=</span><span className=\"number\">0</span><span>;&nbsp;i--)&nbsp;&nbsp;</span></span></li><li className=\"alt\"><span>&#123;&nbsp;&nbsp;</span></li><li className=\"\"><span>temp&nbsp;=&nbsp;arr[<span className=\"number\">0</span><span>];&nbsp;&nbsp;</span></span></li><li className=\"alt\"><span>&nbsp;&nbsp;&nbsp;&nbsp;arr[<span className=\"number\">0</span><span>]=&nbsp;arr[i];&nbsp;&nbsp;&nbsp;</span></span></li><li className=\"\"><span>&nbsp;&nbsp;&nbsp;&nbsp;arr[i]&nbsp;=&nbsp;temp;&nbsp;&nbsp;</span></li><li className=\"alt\"><span>heapify(arr,&nbsp;i,&nbsp;<span className=\"number\">0</span><span>);&nbsp;&nbsp;</span></span></li><li className=\"\"><span>&#125;&nbsp;&nbsp;</span></li><li className=\"alt\"><span>&#125;&nbsp;&nbsp;</span></li><li className=\"\"><span>&nbsp;&nbsp;</span></li><li className=\"alt\"><span><span className=\"keyword\">void</span><span>&nbsp;main()&nbsp;&nbsp;</span></span></li><li className=\"\"><span>&#123;&nbsp;&nbsp;</span></li><li className=\"alt\"><span><span className=\"keyword\">int</span><span>&nbsp;arr[]&nbsp;=&nbsp;&#123;</span><span className=\"number\">1</span><span>,&nbsp;</span><span className=\"number\">10</span><span>,&nbsp;</span><span className=\"number\">2</span><span>,&nbsp;</span><span className=\"number\">3</span><span>,&nbsp;</span><span className=\"number\">4</span><span>,&nbsp;</span><span className=\"number\">1</span><span>,&nbsp;</span><span className=\"number\">2</span><span>,&nbsp;</span><span className=\"number\">100</span><span>,</span><span className=\"number\">23</span><span>,&nbsp;</span><span className=\"number\">2</span><span>&#125;;&nbsp;&nbsp;</span></span></li><li className=\"\"><span><span className=\"keyword\">int</span><span>&nbsp;i;&nbsp;&nbsp;</span></span></li><li className=\"alt\"><span><span className=\"keyword\">int</span><span>&nbsp;size&nbsp;=&nbsp;sizeof(arr)/sizeof(arr[</span><span className=\"number\">0</span><span>]);&nbsp;&nbsp;</span></span></li><li className=\"\"><span>&nbsp;&nbsp;</span></li><li className=\"alt\"><span>heapSort(arr,&nbsp;size);&nbsp;&nbsp;</span></li><li className=\"\"><span>&nbsp;&nbsp;</span></li><li className=\"alt\"><span>printf(<span className=\"string\">\"printing&nbsp;sorted&nbsp;elements\\n\"</span><span>);&nbsp;&nbsp;</span></span></li><li className=\"\"><span><span className=\"keyword\">for</span><span>&nbsp;(i=</span><span className=\"number\">0</span><span>;&nbsp;i&lt;size;&nbsp;++i)&nbsp;&nbsp;</span></span></li><li className=\"alt\"><span>printf(<span className=\"string\">\"%d\\n\"</span><span>,arr[i]);&nbsp;&nbsp;</span></span></li><li className=\"\"><span>&#125;&nbsp;&nbsp;</span></li></ul>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageH2(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C++</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Heap Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C++ program for implementation of Heap Sort</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;iostream&gt;</code></div>\r\n                  <div className=\"line number3 index2 alt2\">&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std;</code></div>\r\n                  <div className=\"line number5 index4 alt2\">&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"comments\">&#47;&#47; To heapify a subtree rooted with node i which is</code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"comments\">&#47;&#47; an index in arr[]. n is size of heap</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">heapify(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">i)</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">largest = i; </code><code className=\"comments\">&#47;&#47; Initialize largest as root</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">l = 2 * i + 1; </code><code className=\"comments\">&#47;&#47; left = 2*i + 1</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">r = 2 * i + 2; </code><code className=\"comments\">&#47;&#47; right = 2*i + 2</code></div>\r\n                  <div className=\"line number13 index12 alt2\">&nbsp;</div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If left child is larger than root</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(l &lt; n &amp;&amp; arr[l] &gt; arr[largest])</code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">largest = l;</code></div>\r\n                  <div className=\"line number17 index16 alt2\">&nbsp;</div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If right child is larger than largest so far</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(r &lt; n &amp;&amp; arr[r] &gt; arr[largest])</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">largest = r;</code></div>\r\n                  <div className=\"line number21 index20 alt2\">&nbsp;</div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If largest is not root</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(largest != i) &#123;</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">swap(arr[i], arr[largest]);</code></div>\r\n                  <div className=\"line number25 index24 alt2\">&nbsp;</div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Recursively heapify the affected sub-tree</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, n, largest);</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number30 index29 alt1\">&nbsp;</div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"comments\">&#47;&#47; main function to do heap sort</code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"keyword bold\">void</code> <code className=\"plain\">heapSort(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n)</code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Build heap (rearrange array)</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i = n / 2 - 1; i &gt;= 0; i--)</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, n, i);</code></div>\r\n                  <div className=\"line number37 index36 alt2\">&nbsp;</div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; One by one extract an element from heap</code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i = n - 1; i &gt; 0; i--) &#123;</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Move current root to end</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">swap(arr[0], arr[i]);</code></div>\r\n                  <div className=\"line number42 index41 alt1\">&nbsp;</div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; call max heapify on the reduced heap</code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, i, 0);</code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number47 index46 alt2\">&nbsp;</div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"comments\">&#47;&#8727; A utility function to print array of size n &#8727;&#47;</code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">printArray(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n)</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i = 0; i &lt; n; ++i)</code></div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; arr[i] &lt;&lt; </code><code className=\"string\">\" \"</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"\\n\"</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number55 index54 alt2\">&nbsp;</div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"comments\">&#47;&#47; Driver code</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main()</code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 12, 11, 13, 5, 6, 7 &#125;;</code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]);</code></div>\r\n                  <div className=\"line number61 index60 alt2\">&nbsp;</div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapSort(arr, n);</code></div>\r\n                  <div className=\"line number63 index62 alt2\">&nbsp;</div>\r\n                  <div className=\"line number64 index63 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"Sorted array is \\n\"</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr, n);</code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"plain\">&#125;</code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageH3(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Python</Text>\r\n        <Text>\r\n          <code>\r\n          <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Heap Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Python program for implementation of heap Sort</code></div>\r\n                  <div className=\"line number2 index1 alt1\">&nbsp;</div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"comments\"># To heapify subtree rooted at index i.</code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"comments\"># n is size of heap</code></div>\r\n                  <div className=\"line number5 index4 alt2\">&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1\">&nbsp;</div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"keyword\">def</code> <code className=\"plain\">heapify(arr, n, i):</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">largest </code><code className=\"keyword\">=</code> <code className=\"plain\">i&nbsp; </code><code className=\"comments\"># Initialize largest as root</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">l </code><code className=\"keyword\">=</code> <code className=\"value\">2</code> <code className=\"keyword\">*</code> <code className=\"plain\">i </code><code className=\"keyword\">+</code> <code className=\"value\">1</code>&nbsp;&nbsp;&nbsp;&nbsp; <code className=\"comments\"># left = 2*i + 1</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">r </code><code className=\"keyword\">=</code> <code className=\"value\">2</code> <code className=\"keyword\">*</code> <code className=\"plain\">i </code><code className=\"keyword\">+</code> <code className=\"value\">2</code>&nbsp;&nbsp;&nbsp;&nbsp; <code className=\"comments\"># right = 2*i + 2</code></div>\r\n                  <div className=\"line number11 index10 alt2\">&nbsp;</div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># See if left child of root exists and is</code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># greater than root</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">l &lt; n </code><code className=\"keyword\">and</code> <code className=\"plain\">arr[largest] &lt; arr[l]:</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">largest </code><code className=\"keyword\">=</code> <code className=\"plain\">l</code></div>\r\n                  <div className=\"line number16 index15 alt1\">&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># See if right child of root exists and is</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># greater than root</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">r &lt; n </code><code className=\"keyword\">and</code> <code className=\"plain\">arr[largest] &lt; arr[r]:</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">largest </code><code className=\"keyword\">=</code> <code className=\"plain\">r</code></div>\r\n                  <div className=\"line number21 index20 alt2\">&nbsp;</div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Change root, if needed</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">largest !</code><code className=\"keyword\">=</code> <code className=\"plain\">i:</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i], arr[largest] </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[largest], arr[i]&nbsp; </code><code className=\"comments\"># swap</code></div>\r\n                  <div className=\"line number25 index24 alt2\">&nbsp;</div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Heapify the root.</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, n, largest)</code></div>\r\n                  <div className=\"line number28 index27 alt1\">&nbsp;</div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"comments\"># The main function to sort an array of given size</code></div>\r\n                  <div className=\"line number30 index29 alt1\">&nbsp;</div>\r\n                  <div className=\"line number31 index30 alt2\">&nbsp;</div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"keyword\">def</code> <code className=\"plain\">heapSort(arr):</code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">n </code><code className=\"keyword\">=</code> <code className=\"functions\">len</code><code className=\"plain\">(arr)</code></div>\r\n                  <div className=\"line number34 index33 alt1\">&nbsp;</div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Build a maxheap.</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(n</code><code className=\"keyword\">/</code><code className=\"keyword\">/</code><code className=\"value\">2</code> <code className=\"keyword\">-</code> <code className=\"value\">1</code><code className=\"plain\">, </code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">, </code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">):</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, n, i)</code></div>\r\n                  <div className=\"line number38 index37 alt1\">&nbsp;</div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># One by one extract elements</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(n</code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">, </code><code className=\"value\">0</code><code className=\"plain\">, </code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">):</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i], arr[</code><code className=\"value\">0</code><code className=\"plain\">] </code><code className=\"keyword\">=</code> <code className=\"plain\">arr[</code><code className=\"value\">0</code><code className=\"plain\">], arr[i]&nbsp; </code><code className=\"comments\"># swap</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, i, </code><code className=\"value\">0</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number43 index42 alt2\">&nbsp;</div>\r\n                  <div className=\"line number44 index43 alt1\">&nbsp;</div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"comments\"># Driver code</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"plain\">arr </code><code className=\"keyword\">=</code> <code className=\"plain\">[</code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">13</code><code className=\"plain\">, </code><code className=\"value\">5</code><code className=\"plain\">, </code><code className=\"value\">6</code><code className=\"plain\">, </code><code className=\"value\">7</code><code className=\"plain\">]</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"plain\">heapSort(arr)</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"plain\">n </code><code className=\"keyword\">=</code> <code className=\"functions\">len</code><code className=\"plain\">(arr)</code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"keyword\">print</code><code className=\"plain\">(</code><code className=\"string\">\"Sorted array is\"</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(n):</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code><code className=\"plain\">(</code><code className=\"string\">\"%d\"</code> <code className=\"keyword\">%</code> <code className=\"plain\">arr[i]),</code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageH4(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Java</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Heap Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Java program for implementation of Heap Sort</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">public</code> <code className=\"keyword\">class</code> <code className=\"plain\">HeapSort &#123;</code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">void</code> <code className=\"plain\">sort(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[])</code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length;</code></div>\r\n                  <div className=\"line number6 index5 alt1\">&nbsp;</div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Build heap (rearrange array)</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = n / </code><code className=\"value\">2</code> <code className=\"plain\">- </code><code className=\"value\">1</code><code className=\"plain\">; i &gt;= </code><code className=\"value\">0</code><code className=\"plain\">; i--)</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, n, i);</code></div>\r\n                  <div className=\"line number10 index9 alt1\">&nbsp;</div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; One by one extract an element from heap</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = n - </code><code className=\"value\">1</code><code className=\"plain\">; i &gt; </code><code className=\"value\">0</code><code className=\"plain\">; i--) &#123;</code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Move current root to end</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp = arr[</code><code className=\"value\">0</code><code className=\"plain\">];</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[</code><code className=\"value\">0</code><code className=\"plain\">] = arr[i];</code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i] = temp;</code></div>\r\n                  <div className=\"line number17 index16 alt2\">&nbsp;</div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; call max heapify on the reduced heap</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, i, </code><code className=\"value\">0</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number22 index21 alt1\">&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; To heapify a subtree rooted with node i which is</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; an index in arr[]. n is size of heap</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">heapify(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[], </code><code className=\"keyword\">int</code> <code className=\"plain\">n, </code><code className=\"keyword\">int</code> <code className=\"plain\">i)</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">largest = i; </code><code className=\"comments\">&#47;&#47; Initialize largest as root</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">l = </code><code className=\"value\">2</code> <code className=\"plain\">* i + </code><code className=\"value\">1</code><code className=\"plain\">; </code><code className=\"comments\">&#47;&#47; left = 2*i + 1</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">r = </code><code className=\"value\">2</code> <code className=\"plain\">* i + </code><code className=\"value\">2</code><code className=\"plain\">; </code><code className=\"comments\">&#47;&#47; right = 2*i + 2</code></div>\r\n                  <div className=\"line number30 index29 alt1\">&nbsp;</div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If left child is larger than root</code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(l &lt; n &amp;&amp; arr[l] &gt; arr[largest])</code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">largest = l;</code></div>\r\n                  <div className=\"line number34 index33 alt1\">&nbsp;</div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If right child is larger than largest so far</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(r &lt; n &amp;&amp; arr[r] &gt; arr[largest])</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">largest = r;</code></div>\r\n                  <div className=\"line number38 index37 alt1\">&nbsp;</div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If largest is not root</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(largest != i) &#123;</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">swap = arr[i];</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i] = arr[largest];</code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[largest] = swap;</code></div>\r\n                  <div className=\"line number44 index43 alt1\">&nbsp;</div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Recursively heapify the affected sub-tree</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, n, largest);</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number49 index48 alt2\">&nbsp;</div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; A utility function to print array of size n &#8727;&#47;</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[])</code></div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length;</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = </code><code className=\"value\">0</code><code className=\"plain\">; i &lt; n; ++i)</code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.print(arr[i] + </code><code className=\"string\">\" \"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println();</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number58 index57 alt1\">&nbsp;</div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver code</code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String args[])</code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123; </code><code className=\"value\">12</code><code className=\"plain\">, </code><code className=\"value\">11</code><code className=\"plain\">, </code><code className=\"value\">13</code><code className=\"plain\">, </code><code className=\"value\">5</code><code className=\"plain\">, </code><code className=\"value\">6</code><code className=\"plain\">, </code><code className=\"value\">7</code> <code className=\"plain\">&#125;;</code></div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length;</code></div>\r\n                  <div className=\"line number64 index63 alt1\">&nbsp;</div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">HeapSort ob = </code><code className=\"keyword\">new</code> <code className=\"plain\">HeapSort();</code></div>\r\n                  <div className=\"line number66 index65 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">ob.sort(arr);</code></div>\r\n                  <div className=\"line number67 index66 alt2\">&nbsp;</div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Sorted array is\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr);</code></div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageH5(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C#</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Heap Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C# program for implementation of Heap Sort</code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">using</code> <code className=\"plain\">System;</code></div>\r\n                  <div className=\"line number3 index2 alt2\">&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"keyword\">public</code> <code className=\"keyword\">class</code> <code className=\"plain\">HeapSort &#123;</code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">void</code> <code className=\"plain\">sort(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr)</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length;</code></div>\r\n                  <div className=\"line number8 index7 alt1\">&nbsp;</div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Build heap (rearrange array)</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = n / 2 - 1; i &gt;= 0; i--)</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, n, i);</code></div>\r\n                  <div className=\"line number12 index11 alt1\">&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; One by one extract an element from heap</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = n - 1; i &gt; 0; i--) &#123;</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Move current root to end</code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">temp = arr[0];</code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[0] = arr[i];</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i] = temp;</code></div>\r\n                  <div className=\"line number19 index18 alt2\">&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; call max heapify on the reduced heap</code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, i, 0);</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number24 index23 alt1\">&nbsp;</div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; To heapify a subtree rooted with node i which is</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; an index in arr[]. n is size of heap</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">void</code> <code className=\"plain\">heapify(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr, </code><code className=\"keyword\">int</code> <code className=\"plain\">n, </code><code className=\"keyword\">int</code> <code className=\"plain\">i)</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">largest = i; </code><code className=\"comments\">&#47;&#47; Initialize largest as root</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">l = 2 * i + 1; </code><code className=\"comments\">&#47;&#47; left = 2*i + 1</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">r = 2 * i + 2; </code><code className=\"comments\">&#47;&#47; right = 2*i + 2</code></div>\r\n                  <div className=\"line number32 index31 alt1\">&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If left child is larger than root</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(l &lt; n &amp;&amp; arr[l] &gt; arr[largest])</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">largest = l;</code></div>\r\n                  <div className=\"line number36 index35 alt1\">&nbsp;</div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If right child is larger than largest so far</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(r &lt; n &amp;&amp; arr[r] &gt; arr[largest])</code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">largest = r;</code></div>\r\n                  <div className=\"line number40 index39 alt1\">&nbsp;</div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If largest is not root</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(largest != i) &#123;</code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">swap = arr[i];</code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[i] = arr[largest];</code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">arr[largest] = swap;</code></div>\r\n                  <div className=\"line number46 index45 alt1\">&nbsp;</div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Recursively heapify the affected sub-tree</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(arr, n, largest);</code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number51 index50 alt2\">&nbsp;</div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; A utility function to print array of size n &#8727;&#47;</code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">printArray(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr)</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length;</code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 0; i &lt; n; ++i)</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Write(arr[i] + </code><code className=\"string\">\" \"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.Read();</code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number60 index59 alt1\">&nbsp;</div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver code</code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main()</code></div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number64 index63 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr = &#123; 12, 11, 13, 5, 6, 7 &#125;;</code></div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length;</code></div>\r\n                  <div className=\"line number66 index65 alt1\">&nbsp;</div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">HeapSort ob = </code><code className=\"keyword\">new</code> <code className=\"plain\">HeapSort();</code></div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">ob.sort(arr);</code></div>\r\n                  <div className=\"line number69 index68 alt2\">&nbsp;</div>\r\n                  <div className=\"line number70 index69 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"Sorted array is\"</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number71 index70 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(arr);</code></div>\r\n                  <div className=\"line number72 index71 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number73 index72 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number74 index73 alt1\">&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageH6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in PHP</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 style={{color:'#f0ffff'}}>Implementation of Heap Sort</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"plain\">&lt;?php</code></div>\r\n                  <div className=\"line number2 index1 alt1\">&nbsp;</div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"comments\">&#47;&#47; Php program for implementation of Heap Sort</code></div>\r\n                  <div className=\"line number4 index3 alt1\">&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"comments\">&#47;&#47; To heapify a subtree rooted with node i which is</code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"comments\">&#47;&#47; an index in arr[]. n is size of heap</code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"keyword\">function</code> <code className=\"plain\">heapify(&amp;</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">, </code><code className=\"variable\">$i</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$largest</code> <code className=\"plain\">= </code><code className=\"variable\">$i</code><code className=\"plain\">; </code><code className=\"comments\">&#47;&#47; Initialize largest as root</code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$l</code> <code className=\"plain\">= 2*</code><code className=\"variable\">$i</code> <code className=\"plain\">+ 1; </code><code className=\"comments\">&#47;&#47; left = 2*i + 1</code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$r</code> <code className=\"plain\">= 2*</code><code className=\"variable\">$i</code> <code className=\"plain\">+ 2; </code><code className=\"comments\">&#47;&#47; right = 2*i + 2</code></div>\r\n                  <div className=\"line number12 index11 alt1\">&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If left child is larger than root</code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$l</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$n</code> <code className=\"plain\">&amp;&amp; </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$l</code><code className=\"plain\">] &gt; </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$largest</code><code className=\"plain\">])</code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$largest</code> <code className=\"plain\">= </code><code className=\"variable\">$l</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number16 index15 alt1\">&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If right child is larger than largest so far</code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$r</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$n</code> <code className=\"plain\">&amp;&amp; </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$r</code><code className=\"plain\">] &gt; </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$largest</code><code className=\"plain\">])</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$largest</code> <code className=\"plain\">= </code><code className=\"variable\">$r</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number20 index19 alt1\">&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If largest is not root</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$largest</code> <code className=\"plain\">!= </code><code className=\"variable\">$i</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$swap</code> <code className=\"plain\">= </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">];</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">] = </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$largest</code><code className=\"plain\">];</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$largest</code><code className=\"plain\">] = </code><code className=\"variable\">$swap</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number27 index26 alt2\">&nbsp;</div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Recursively heapify the affected sub-tree</code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">, </code><code className=\"variable\">$largest</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number32 index31 alt1\">&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"comments\">&#47;&#47; main function to do heap sort</code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"keyword\">function</code> <code className=\"plain\">heapSort(&amp;</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Build heap (rearrange array)</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"variable\">$i</code> <code className=\"plain\">= </code><code className=\"variable\">$n</code> <code className=\"plain\">/ 2 - 1; </code><code className=\"variable\">$i</code> <code className=\"plain\">&gt;= 0; </code><code className=\"variable\">$i</code><code className=\"plain\">--)</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">, </code><code className=\"variable\">$i</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number39 index38 alt2\">&nbsp;</div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; One by one extract an element from heap</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"variable\">$i</code> <code className=\"plain\">= </code><code className=\"variable\">$n</code><code className=\"plain\">-1; </code><code className=\"variable\">$i</code> <code className=\"plain\">&gt; 0; </code><code className=\"variable\">$i</code><code className=\"plain\">--)</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Move current root to end</code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$temp</code> <code className=\"plain\">= </code><code className=\"variable\">$arr</code><code className=\"plain\">[0];</code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[0] = </code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">];</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">] = </code><code className=\"variable\">$temp</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number47 index46 alt2\">&nbsp;</div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; call max heapify on the reduced heap</code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapify(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$i</code><code className=\"plain\">, 0);</code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                  <div className=\"line number52 index51 alt1\">&nbsp;</div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"comments\">&#47;&#8727; A utility function to print array of size n &#8727;&#47;</code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"keyword\">function</code> <code className=\"plain\">printArray(&amp;</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"plain\">&#123;</code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"variable\">$i</code> <code className=\"plain\">= 0; </code><code className=\"variable\">$i</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$n</code><code className=\"plain\">; ++</code><code className=\"variable\">$i</code><code className=\"plain\">)</code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">echo</code> <code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">].</code><code className=\"string\">\" \"</code><code className=\"plain\">) ; </code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number60 index59 alt1\">&nbsp;</div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"comments\">&#47;&#47; Driver program</code></div>\r\n                  <div className=\"line number62 index61 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$arr</code> <code className=\"plain\">= </code><code className=\"keyword\">array</code><code className=\"plain\">(12, 11, 13, 5, 6, 7);</code></div>\r\n                  <div className=\"line number63 index62 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$n</code> <code className=\"plain\">= sizeof(</code><code className=\"variable\">$arr</code><code className=\"plain\">)/sizeof(</code><code className=\"variable\">$arr</code><code className=\"plain\">[0]);</code></div>\r\n                  <div className=\"line number64 index63 alt1\">&nbsp;</div>\r\n                  <div className=\"line number65 index64 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">heapSort(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number66 index65 alt1\">&nbsp;</div>\r\n                  <div className=\"line number67 index66 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">echo</code> <code className=\"string\">'Sorted array is '</code> <code className=\"plain\">. </code><code className=\"string\">\"\\n\"</code><code className=\"plain\">;</code></div>\r\n                  <div className=\"line number68 index67 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number69 index68 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">printArray(</code><code className=\"variable\">$arr</code> <code className=\"plain\">, </code><code className=\"variable\">$n</code><code className=\"plain\">);</code></div>\r\n                  <div className=\"line number70 index69 alt1\">&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { FC, Suspense, useState } from \"react\";\r\nimport { AppBar } from \"@react-md/app-bar\";\r\nimport { CircularProgress } from \"@react-md/progress\";\r\nimport { Tabs, TabsManager } from \"@react-md/tabs\";\r\nimport { CrossFade } from \"@react-md/transition\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport useFakeLazyImport from \"../../useFakeLazyImport\";\r\n\r\nimport Container from \"../../Container\";\r\nimport PageH1 from \"./CodingwithC\";\r\nimport PageH2 from \"./CodingwithCpp\";\r\nimport PageH3 from \"./CodingwithPython\";\r\nimport PageH4 from \"./CodingwithJava\";\r\nimport PageH5 from \"./CodingwithC#\";\r\nimport PageH6 from \"./CodingwithPHP\";\r\n\r\ninterface CurrentPageProps {\r\n  page: number;\r\n}\r\n\r\nconst CurrentPage: FC<CurrentPageProps> = ({ page }) => {\r\n  let content = <PageH1 />;\r\n  if (page === 1) {\r\n    content = <PageH2 />;\r\n  } else if (page === 2) {\r\n    content = <PageH3 />;\r\n  } else if (page === 3) {\r\n    content = <PageH4 />;\r\n  } else if (page === 4) {\r\n    content = <PageH5 />;\r\n  } else if (page === 5) {\r\n    content = <PageH6 />;\r\n  }\r\n\r\n  return <CrossFade>{content}</CrossFade>;\r\n};\r\n\r\nconst CrossFadeExamplesAsyncHeap: FC = () => {\r\n  // just make it so it doesn't start loading until a new tab is shown\r\n  const [page, setPage] = useState<number>(-1);\r\n  const Content = useFakeLazyImport<CurrentPageProps>(CurrentPage, page, 5000);\r\n\r\n  return (\r\n    <>\r\n      <TabsManager\r\n        activeIndex={page === -1 ? 0 : page}\r\n        onActiveIndexChange={(index) => setPage(index)}\r\n        tabs={[\"C\", \"C++\", \"Python\",\"Java\",\"C#\",\"PHP\"]}\r\n        tabsId=\"static-transition\"\r\n      >\r\n        <AppBar theme=\"default\">\r\n          <Tabs />\r\n        </AppBar>\r\n      </TabsManager>\r\n      <Container>\r\n        {page === -1 && (\r\n          <Text type=\"headline-6\">\r\n            {'Click on other tabs to start coding!'}\r\n          </Text>\r\n        )}\r\n        {page !== -1 && (\r\n          <Suspense fallback={<CircularProgress className=\"mt-4\" id=\"async-loading-progress\" />}>\r\n            <Content page={page} />\r\n          </Suspense>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrossFadeExamplesAsyncHeap;","import React, { FC } from \"react\";\r\nimport { Divider } from \"@react-md/divider\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport CrossFadeExamplesAsyncHeap from \"./CrossFadeElementHeap\";\r\n//import CrossFadeExamplesStatic from \"./CrossFadeExamplesStatic\";\r\n\r\nimport '../../../../../sortingAlgorithms/__colorHub/codestyle.css';\r\n\r\nconst ViewcodeHeap: FC = () => (\r\n  <>\r\n    <Text type=\"headline-6\" margin=\"bottom\">\r\n      <div className=\"mt-1\"></div>\r\n      <h3 className=\"text-primary bg-white badge font-bold mt-2\">Code Explorer</h3>\r\n    </Text>\r\n    \r\n    <Divider />\r\n    <Text type=\"headline-6\">\r\n      <span className=\"text-pink badge badge-darkest col-lock badge-pill\">Source Program in multiple</span>&nbsp;<span className=\"text-dark badge badge-pink col-lock badge-pill\">Programming Languages</span>\r\n    </Text>\r\n    <CrossFadeExamplesAsyncHeap />\r\n    <Divider />\r\n  </>\r\n);\r\n\r\nexport default ViewcodeHeap;","import React, { FC, useState } from \"react\";\r\nimport { Button } from \"@react-md/button\";\r\nimport { useCSSTransition } from \"@react-md/transition\";\r\n\r\n\r\nimport styles from './UseCSSTransition.module.scss';\r\nimport { ExpandMoreSVGIcon, StorageSVGIcon, TextIconSpacing } from \"react-md\";\r\nimport ViewcodeHeap from \"./viewcodeheap\";\r\n\r\nconst DemoHeap: FC = () => {\r\n  const [transitionIn, setTransitionIn] = useState(false);\r\n  const [rendered, transitionProps] = useCSSTransition({\r\n    // changing this value causes the transition behavior to change\r\n    transitionIn,\r\n\r\n    // 5 seconds just for demo purposes... can also be an object\r\n    timeout: 5000,\r\n\r\n    // can also use a string that gets BEM-ified instead\r\n    classNames: {\r\n      enter: styles.enter,\r\n      enterActive: styles.entering,\r\n      exit: styles.exit,\r\n      exitActive: styles.exiting,\r\n    },\r\n\r\n    // can also trigger the css transition on initial mount\r\n    // appear: false,\r\n\r\n    // changes the `rendered` value to be false while not transitioning and\r\n    // `transitionIn` is false\r\n    temporary: true,\r\n\r\n    // an optional className to merge with the transition classNames\r\n    // className: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"text-white\" theme=\"error\" themeType=\"contained\" onClick={() => setTransitionIn(!transitionIn)}>\r\n        <TextIconSpacing icon={<StorageSVGIcon />}>\r\n          <TextIconSpacing icon={<ExpandMoreSVGIcon />} iconAfter>\r\n            Expand Codes\r\n          </TextIconSpacing>\r\n        </TextIconSpacing>\r\n      </Button>\r\n      {rendered && <div {...transitionProps}><ViewcodeHeap /></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DemoHeap;","import React from 'react';\r\nimport { Configuration } from 'react-md';\r\nimport DemoHeap from '../../utils/Program_codes/view_code/SortingAlgorithms/HeapSort/togglerheap';\r\n\r\nimport {\r\n  swap,\r\n  newTrace,\r\n  addToTrace,\r\n  lastSorted,\r\n  createRange,\r\n  createKey\r\n} from './helpers';\r\n\r\nconst HeapSort = (nums) => {\r\n  const trace = newTrace(nums);\r\n\r\n  // Helper functions to quickly access nodes\r\n  const left = (i) => 2 * i + 1;\r\n  const right = (i) => 2 * i + 2;\r\n  //const parent = (i) => Math.floor((i - 1) / 2);\r\n\r\n  const maxHeapify = (array, i, heapsize) => {\r\n    const leftChild = left(i);\r\n    const rightChild = right(i);\r\n\r\n    // Visualize: Compare parent and leftChild\r\n    addToTrace(trace, array, lastSorted(trace), [i, leftChild]);\r\n\r\n    let largest =\r\n      leftChild < heapsize && array[leftChild] > array[i]\r\n        ? leftChild\r\n        : i;\r\n\r\n    // Visualize: Compare largest and rightChild\r\n    addToTrace(trace, array, lastSorted(trace), [largest, rightChild]);\r\n\r\n    if (rightChild < heapsize && array[rightChild] > array[largest])\r\n      largest = rightChild;\r\n\r\n    if (largest !== i) {\r\n      // Visualize: Select largest child and parent\r\n      addToTrace(trace, array, lastSorted(trace), [], [i, largest]);\r\n\r\n      swap(array, i, largest);\r\n\r\n      // Visualize: Swap largest child and parent\r\n      addToTrace(trace, array, lastSorted(trace), [], [i, largest]);\r\n\r\n      maxHeapify(array, largest, heapsize);\r\n    }\r\n  };\r\n\r\n  const BuildMaxHeap = (array) => {\r\n    const start = Math.floor(array.length / 2);\r\n    const heapsize = array.length;\r\n    for (let i = start; i >= 0; i--) {\r\n      maxHeapify(array, i, heapsize);\r\n    }\r\n\r\n    // Visualize: Mark heap as built\r\n    addToTrace(\r\n      trace,\r\n      array,\r\n      lastSorted(trace),\r\n      [],\r\n      [],\r\n      [],\r\n      createRange(0, array.length)\r\n    );\r\n  };\r\n\r\n  const heapSort = (array) => {\r\n    BuildMaxHeap(array);\r\n    let heapsize = array.length;\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      // Visualize: Select Maximum\r\n      addToTrace(trace, array, lastSorted(trace), [], [0, i]);\r\n\r\n      swap(array, 0, i);\r\n      heapsize -= 1;\r\n\r\n      // Visualize: Swap with last element in heap\r\n      addToTrace(trace, array, [...lastSorted(trace), i], [], [0, i]);\r\n\r\n      maxHeapify(array, 0, heapsize);\r\n\r\n      // Visualize: Heap created\r\n      addToTrace(\r\n        trace,\r\n        array,\r\n        lastSorted(trace),\r\n        [],\r\n        [],\r\n        [],\r\n        createRange(0, heapsize)\r\n      );\r\n    }\r\n    addToTrace(trace, array, [...lastSorted(trace), 0]);\r\n  };\r\n\r\n  // Execute Heapsort\r\n  heapSort(nums);\r\n  return trace;\r\n};\r\n\r\nexport const HeapSortKey = createKey(\r\n  'Comparing',\r\n  'Swapping',\r\n  null,\r\n  'Heap Built'\r\n);\r\n\r\nexport const HeapSortDesc = {\r\n  title: 'Heap Sort',\r\n  code: (\r\n    <div className=\"row mt-3 mb-0 text-center\">\r\n      <Configuration>\r\n          <DemoHeap />\r\n      </Configuration>\r\n    </div>\r\n  ),\r\n  description: (\r\n    <div>\r\n      <p>\r\n        <a\r\n          href=\"https://en.wikipedia.org/wiki/Heapsort\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <i class=\"cib-wikipedia\"></i>&nbsp;Heap Sort\r\n        </a>{' '}\r\n        can be thought of as an improved selection sort that uses the\r\n        heap data structure rather than a linear-time search to find the\r\n        maximum or minimum element. It is an in-place sorting algorithm\r\n        that is not stable and has a somewhat slower running time than\r\n        Quicksort in practice.\r\n      </p>\r\n      <p>\r\n        The heapsort algorithm can be divided into two parts. In the\r\n        first step, a heap is built out of the data. The heap is often\r\n        placed in an array with the layout of a complete binary tree. In\r\n        the second step, a sorted array is created by repeatedly\r\n        removing the largest element from the heap (the root of the\r\n        heap), and inserting it into the array. The heap is updated\r\n        after each removal to maintain the heap property. Once all\r\n        objects have been removed from the heap, the result is a sorted\r\n        array.\r\n      </p>\r\n      <ol>\r\n        <li>\r\n          Call the buildMaxHeap() function on the list. Also referred to\r\n          as heapify(), this builds a heap from a list in O(n)\r\n          operations.\r\n        </li>\r\n        <li>\r\n          Swap the first element of the list with the final element.\r\n          Decrease the considered range of the list by one.\r\n        </li>\r\n        <li>\r\n          Call the <em>siftDown()</em>, also called{' '}\r\n          <em>maxHeapify()</em> function on the list to sift the new\r\n          first element to its appropriate index in the heap.\r\n        </li>\r\n        <li>\r\n          Go to step (2) unless the considered range of the list is one\r\n          element.\r\n        </li>\r\n      </ol>\r\n    </div>\r\n  ),\r\n  worstCase: (\r\n    <span>\r\n      O(<em>n</em> log <em>n</em>)\r\n    </span>\r\n  ),\r\n  avgCase: (\r\n    <span>\r\n      O(<em>n</em> log <em>n</em>)\r\n    </span>\r\n  ),\r\n  bestCase: (\r\n    <span>\r\n      O(<em>n</em> log <em>n</em>)\r\n    </span>\r\n  ),\r\n  space: <span>O(1)</span>\r\n};\r\n\r\nexport default HeapSort;\r\n","import React, { Component } from 'react';\r\nimport './sortingVisualizer.css';\r\nimport './__colorHub/dark.css';\r\n\r\nimport AppControls from './components/subComponents/AlgoControls';\r\nimport TopBar from './components/superComponents/TopBar';\r\nimport AppDrawer from './components/superComponents/AppDrawer';\r\nimport SortVisualizer from './components/superComponents/SortVisualizer';\r\n//import Footer from './components/subComponents/Footer';\r\n\r\nimport BubbleSort, {\r\n  BubbleSortKey,\r\n  BubbleSortDesc\r\n} from './algorithms/BubbleSort';\r\nimport SelectionSort, {\r\n  SelectionSortKey,\r\n  SelectionSortDesc\r\n} from './algorithms/SelectionSort';\r\nimport InsertionSort, {\r\n  InsertionSortKey,\r\n  InsertionSortDesc\r\n} from './algorithms/InsertionSort';\r\nimport MergeSort, {\r\n  MergeSortKey,\r\n  MergeSortDesc\r\n} from './algorithms/MergeSort';\r\nimport QuickSort, {\r\n  QuickSortKey,\r\n  QuickSortDesc\r\n} from './algorithms/QuickSort';\r\nimport HeapSort, {\r\n  HeapSortKey,\r\n  HeapSortDesc\r\n} from './algorithms/HeapSort';\r\n\r\nclass SortingVisualizer extends Component {\r\n  state = {\r\n    darkMode: false,\r\n    array: [],\r\n    arraySize: 10,\r\n    trace: [],\r\n    algorithm: null,\r\n    appDrawerOpen: false\r\n  };\r\n\r\n  ALGORITHM = {\r\n    'Bubble Sort': BubbleSort,\r\n    'Selection Sort': SelectionSort,\r\n    'Insertion Sort': InsertionSort,\r\n    'Merge Sort': MergeSort,\r\n    'Quick Sort': QuickSort,\r\n    'Heap Sort': HeapSort,\r\n  };\r\n\r\n  ALGORITHM_KEY = {\r\n    'Bubble Sort': BubbleSortKey,\r\n    'Selection Sort': SelectionSortKey,\r\n    'Insertion Sort': InsertionSortKey,\r\n    'Merge Sort': MergeSortKey,\r\n    'Quick Sort': QuickSortKey,\r\n    'Heap Sort': HeapSortKey,\r\n  };\r\n\r\n  ALGORITHM_DESC = {\r\n    'Bubble Sort': BubbleSortDesc,\r\n    'Selection Sort': SelectionSortDesc,\r\n    'Insertion Sort': InsertionSortDesc,\r\n    'Merge Sort': MergeSortDesc,\r\n    'Quick Sort': QuickSortDesc,\r\n    'Heap Sort': HeapSortDesc,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.generateRandomArray();\r\n  }\r\n\r\n  generateRandomArray = () => {\r\n    // Generate pseudo-random number between 1 and max\r\n    function getRandomInt(max) {\r\n      return Math.floor(Math.random() * Math.floor(max)) + 1;\r\n    }\r\n\r\n    // Generate an array of length max\r\n    const array = Array(this.state.arraySize)\r\n      .fill(0)\r\n      .map(() => getRandomInt(this.state.arraySize * 5));\r\n\r\n    this.setState(\r\n      {\r\n        array,\r\n        trace: []\r\n      },\r\n      this.createTrace\r\n    );\r\n  };\r\n\r\n  handleAlgorithmChange = (algorithm) => {\r\n    this.setState({ algorithm }, this.generateRandomArray);\r\n  };\r\n\r\n  handleArraySizeChange = (size) => {\r\n    size = Number(size);\r\n    size = size > 100 ? 100 : size;\r\n    size = size < 0 ? 0 : size;\r\n    this.setState({ arraySize: size }, this.generateRandomArray);\r\n  };\r\n\r\n  createTrace = () => {\r\n    const numbers = [...this.state.array];\r\n    const sort = this.ALGORITHM[this.state.algorithm];\r\n    if (sort) {\r\n      const trace = sort(numbers);\r\n      this.setState({ trace });\r\n    }\r\n  };\r\n\r\n  toggleDarkMode = () => {\r\n    this.setState((prevState) => ({ darkMode: !prevState.darkMode }));\r\n  };\r\n\r\n  toggleAppDrawer = () => {\r\n    this.setState((prevState) => ({\r\n      appDrawerOpen: !prevState.appDrawerOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let theme = `App`;\r\n    if (this.state.darkMode) theme += ` App_dark`;\r\n    if (this.state.appDrawerOpen) theme += ` App_modal_open`;\r\n\r\n    const colorKey = this.ALGORITHM_KEY[this.state.algorithm];\r\n    const desc = this.ALGORITHM_DESC[this.state.algorithm];\r\n\r\n    const controls = (\r\n      <AppControls\r\n        onGenerateRandomArray={this.generateRandomArray}\r\n        algorithm={this.state.algorithm}\r\n        onAlgorithmChange={this.handleAlgorithmChange}\r\n        arraySize={this.state.arraySize}\r\n        onArraySizeChange={this.handleArraySizeChange}\r\n        onToggleDarkMode={this.toggleDarkMode}\r\n        darkMode={this.state.darkMode}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className={theme}>\r\n        <TopBar\r\n          drawerOpen={this.state.appDrawerOpen}\r\n          toggleDrawer={this.toggleAppDrawer}\r\n        >\r\n          {controls}\r\n        </TopBar>\r\n\r\n        <AppDrawer\r\n          open={this.state.appDrawerOpen}\r\n          closeDrawer={this.toggleAppDrawer}\r\n        >\r\n          {controls}\r\n        </AppDrawer>\r\n\r\n        <main className=\"App_Body\">\r\n          <SortVisualizer\r\n            array={this.state.array}\r\n            trace={this.state.trace}\r\n            colorKey={colorKey}\r\n            desc={desc}\r\n          />\r\n        </main>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingVisualizer;\r\n","export function randomIntFromInterval(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","export function linearSearchAnimations(array, target) {\r\n    let animations = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n        const ele = array[i];\r\n        const tar = parseInt(target);\r\n        if (ele === tar) {\r\n            animations.push([i, ele, true]);\r\n            break;\r\n        } else {\r\n            animations.push([i, ele, false]);\r\n        }\r\n    }\r\n    return animations;\r\n}\r\n\r\nexport function binarySearchAnimations(\r\n    array,\r\n    left,\r\n    right,\r\n    element,\r\n    animations = []\r\n) {\r\n    if (right >= left) {\r\n        let mid = parseInt(left + (right - left) / 2);\r\n        if (array[mid] === element) {\r\n            animations.push([left, right, mid, true]);\r\n            return true;\r\n        } else if (array[mid] > element) {\r\n            animations.push([left, right, mid, false]);\r\n            binarySearchAnimations(array, left, mid - 1, element, animations);\r\n        } else {\r\n            animations.push([left, right, mid, false]);\r\n            binarySearchAnimations(array, mid + 1, right, element, animations);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Header = ({ title }) => (\r\n    <div>\r\n        <h2 className=\"mt-3 text-white mb-3 text-center\" ><strong>{title}</strong></h2>\r\n    </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst ArrayBlock = ({ idx, val, type }) =>\r\n    type === \"binarySearch\" ? (\r\n        <div className=\"b-array-bar\">\r\n            {`${val}`}\r\n            <br />\r\n            <span>{`${idx}`}</span>\r\n        </div>\r\n    ) : (\r\n        <div className=\"l-array-bar\">\r\n            {`${val}`}\r\n            <br />\r\n            <span>{`${idx}`}</span>\r\n        </div>\r\n    );\r\n\r\nexport default ArrayBlock;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SideBar = () => (\r\n    <div className=\"bg-secondary py-2\">\r\n        <NavLink to=\"/\">\r\n            <span className=\"text-light ml-3\">\r\n                <i className=\"fas fa-arrow-left\"></i> Back\r\n            </span>\r\n        </NavLink>\r\n    </div>\r\n);\r\n\r\nexport default SideBar;\r\n","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB1(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C</Text>\r\n        <Text>\r\n          <code>\r\n          <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Recursive</b> implementation of Binary Search</h4></span>\r\n            <div className=\"container text-left\">\r\n              <div className=\"offset-3 mt-4 mb-5\">\r\n                <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C program to implement recursive Binary Search </code></div>\r\n                <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;stdio.h&gt; </code></div>\r\n                <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number4 index3 alt1\"><code className=\"comments\">&#47;&#8727; A recursive binary search function. It returns </code></div>\r\n                <div className=\"line number5 index4 alt2\"><code className=\"comments\"> location of x in given array arr[l..r] is present, </code></div>\r\n                <div className=\"line number6 index5 alt1\"><code className=\"comments\"> otherwise -1 &#8727;&#47;</code></div>\r\n                <div className=\"line number7 index6 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">binarySearch(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">l, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">r, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">x) </code></div>\r\n                <div className=\"line number8 index7 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(r &gt;= l) &#123; </code></div>\r\n                <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">mid = l + (r - l) / 2; </code></div>\r\n                <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; If the element is present at the middle </code></div>\r\n                <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> itself &#8727;&#47;</code></div>\r\n                <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[mid] == x) </code></div>\r\n                <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">mid; </code></div>\r\n                <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; If element is smaller than mid, then </code></div>\r\n                <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> it can only be present in left subarray &#8727;&#47;</code></div>\r\n                <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[mid] &gt; x) </code></div>\r\n                <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">binarySearch(arr, l, mid - 1, x); </code></div>\r\n                <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Else the element can only be present </code></div>\r\n                <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> in right subarray &#8727;&#47;</code></div>\r\n                <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">binarySearch(arr, mid + 1, r, x); </code></div>\r\n                <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; We reach here when element is not </code></div>\r\n                <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> present in array &#8727;&#47;</code></div>\r\n                <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">-1; </code></div>\r\n                <div className=\"line number30 index29 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number32 index31 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main(</code><code className=\"keyword bold\">void</code><code className=\"plain\">) </code></div>\r\n                <div className=\"line number33 index32 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 2, 3, 4, 10, 40 &#125;; </code></div>\r\n                <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]); </code></div>\r\n                <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">x = 10; </code></div>\r\n                <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">result = binarySearch(arr, 0, n - 1, x); </code></div>\r\n                <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">(result == -1) ? </code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"Element is not present in array\"</code><code className=\"plain\">) </code></div>\r\n                <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">: </code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"Element is present at index %d\"</code><code className=\"plain\">, </code></div>\r\n                <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">result); </code></div>\r\n                <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0; </code></div>\r\n                <div className=\"line number42 index41 alt1\"><code className=\"plain\">&#125; </code></div>\r\n              </div>\r\n            </div>\r\n          </h5>\r\n\r\n          <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Iterative</b> implementation of Binary Search</h4></span>\r\n            <div className=\"container text-left\">\r\n              <div className=\"offset-3 mt-4 mb-5\">\r\n                <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C program to implement iterative Binary Search </code></div>\r\n                <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;stdio.h&gt; </code></div>\r\n                <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number4 index3 alt1\"><code className=\"comments\">&#47;&#8727; A iterative binary search function. It returns </code></div>\r\n                <div className=\"line number5 index4 alt2\"><code className=\"comments\"> location of x in given array arr[l..r] if present, </code></div>\r\n                <div className=\"line number6 index5 alt1\"><code className=\"comments\"> otherwise -1 &#8727;&#47;</code></div>\r\n                <div className=\"line number7 index6 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">binarySearch(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">l, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">r, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">x) </code></div>\r\n                <div className=\"line number8 index7 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(l &lt;= r) &#123; </code></div>\r\n                <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">m = l + (r - l) / 2; </code></div>\r\n                <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Check if x is present at mid </code></div>\r\n                <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[m] == x) </code></div>\r\n                <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">m; </code></div>\r\n                <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If x greater, ignore left half </code></div>\r\n                <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[m] &lt; x) </code></div>\r\n                <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">l = m + 1; </code></div>\r\n                <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If x is smaller, ignore right half </code></div>\r\n                <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">else</code></div>\r\n                <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">r = m - 1; </code></div>\r\n                <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; if we reach here, then element was </code></div>\r\n                <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> not present &#8727;&#47;</code></div>\r\n                <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">-1; </code></div>\r\n                <div className=\"line number28 index27 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number30 index29 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main(</code><code className=\"keyword bold\">void</code><code className=\"plain\">) </code></div>\r\n                <div className=\"line number31 index30 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 2, 3, 4, 10, 40 &#125;; </code></div>\r\n                <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]); </code></div>\r\n                <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">x = 10; </code></div>\r\n                <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">result = binarySearch(arr, 0, n - 1, x); </code></div>\r\n                <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">(result == -1) ? </code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"Element is not present\"</code></div>\r\n                <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"string\">\" in array\"</code><code className=\"plain\">) </code></div>\r\n                <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">: </code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"Element is present at \"</code></div>\r\n                <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"string\">\"index %d\"</code><code className=\"plain\">, </code></div>\r\n                <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">result); </code></div>\r\n                <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0; </code></div>\r\n                <div className=\"line number42 index41 alt1\"><code className=\"plain\">&#125; </code></div>\r\n              </div>\r\n            </div>\r\n          </h5>\r\n        </code>\r\n      </Text>\r\n    </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB2(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C++</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Recursive</b> implementation of Binary Search</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C++ program to implement recursive Binary Search </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;bits/stdc++.h&gt; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"comments\">&#47;&#8727; A recursive binary search function. It returns </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"comments\"> location of x in given array arr[l..r] is present, </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"comments\"> otherwise -1 &#8727;&#47;</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">binarySearch(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">l, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">r, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">x) </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(r &gt;= l) &#123; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">mid = l + (r - l) / 2; </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If the element is present at the middle </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; itself </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[mid] == x) </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">mid; </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; If element is smaller than mid, then </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> it can only be present in left subarray &#8727;&#47;</code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[mid] &gt; x) </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">binarySearch(arr, l, mid - 1, x); </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Else the element can only be present </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> in right subarray &#8727;&#47;</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">binarySearch(arr, mid + 1, r, x); </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; We reach here when element is not </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> present in array &#8727;&#47;</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">-1; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main(</code><code className=\"keyword bold\">void</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 2, 3, 4, 10, 40 &#125;; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">x = 10; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]); </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">result = binarySearch(arr, 0, n - 1, x); </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">(result == -1) ? cout &lt;&lt; </code><code className=\"string\">\"Element is not present in array\"</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">: cout &lt;&lt; </code><code className=\"string\">\"Element is present at index \"</code> <code className=\"plain\">&lt;&lt; result; </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5><br></br><br></br>\r\n\r\n            <h5 className=\"mt-4 mb-4\"><span><h4 className=\"text-success\"><b>Iterative</b> implementation of Binary Search</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C++ program to implement iterative Binary Search </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include &lt;bits/stdc++.h&gt; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"comments\">&#47;&#8727; A iterative binary search function. It returns </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"comments\"> location of x in given array arr[l..r] if present, </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"comments\"> otherwise -1 &#8727;&#47;</code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">binarySearch(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">l, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">r, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">x) </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">while</code> <code className=\"plain\">(l &lt;= r) &#123; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">m = l + (r - l) / 2; </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Check if x is present at mid </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[m] == x) </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">m; </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If x greater, ignore left half </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[m] &lt; x) </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">l = m + 1; </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If x is smaller, ignore right half </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">else</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">r = m - 1; </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; if we reach here, then element was </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> not present &#8727;&#47;</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">-1; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main(</code><code className=\"keyword bold\">void</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 2, 3, 4, 10, 40 &#125;; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">x = 10; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]); </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">result = binarySearch(arr, 0, n - 1, x); </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">(result == -1) ? cout &lt;&lt; </code><code className=\"string\">\"Element is not present in array\"</code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">: cout &lt;&lt; </code><code className=\"string\">\"Element is present at index \"</code> <code className=\"plain\">&lt;&lt; result; </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0; </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB3(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref}>\r\n        <Text type=\"headline-4\">Source code in Python</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Recursive</b> implementation of Binary Search</h4></span>\r\n              <div className=\"container text-left\">\r\n              <div className=\"offset-3 mt-4 mb-5\">\r\n                <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Python3 Program for recursive binary search. </code></div>\r\n                <div className=\"line number2 index1 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number3 index2 alt2 highlighted\"><code className=\"comments\"># Returns index of x in arr if present, else -1 </code></div>\r\n                <div className=\"line number4 index3 alt1\"><code className=\"keyword\">def</code> <code className=\"plain\">binarySearch (arr, l, r, x): </code></div>\r\n                <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Check base case </code></div>\r\n                <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">r &gt;</code><code className=\"keyword\">=</code> <code className=\"plain\">l: </code></div>\r\n                <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mid </code><code className=\"keyword\">=</code> <code className=\"plain\">l </code><code className=\"keyword\">+</code> <code className=\"plain\">(r </code><code className=\"keyword\">-</code> <code className=\"plain\">l) </code><code className=\"keyword\">/</code><code className=\"keyword\">/</code> <code className=\"value\">2</code></div>\r\n                <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># If element is present at the middle itself </code></div>\r\n                <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">arr[mid] </code><code className=\"keyword\">=</code><code className=\"keyword\">=</code> <code className=\"plain\">x: </code></div>\r\n                <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">mid </code></div>\r\n                <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># If element is smaller than mid, then it&nbsp; </code></div>\r\n                <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># can only be present in left subarray </code></div>\r\n                <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">elif</code> <code className=\"plain\">arr[mid] &gt; x: </code></div>\r\n                <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">binarySearch(arr, l, mid</code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">, x) </code></div>\r\n                <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Else the element can only be present&nbsp; </code></div>\r\n                <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># in right subarray </code></div>\r\n                <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code><code className=\"plain\">: </code></div>\r\n                <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">binarySearch(arr, mid </code><code className=\"keyword\">+</code> <code className=\"value\">1</code><code className=\"plain\">, r, x) </code></div>\r\n                <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code><code className=\"plain\">: </code></div>\r\n                <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Element is not present in the array </code></div>\r\n                <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"keyword\">-</code><code className=\"value\">1</code></div>\r\n                <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number29 index28 alt2\"><code className=\"comments\"># Driver Code </code></div>\r\n                <div className=\"line number30 index29 alt1\"><code className=\"plain\">arr </code><code className=\"keyword\">=</code> <code className=\"plain\">[ </code><code className=\"value\">2</code><code className=\"plain\">, </code><code className=\"value\">3</code><code className=\"plain\">, </code><code className=\"value\">4</code><code className=\"plain\">, </code><code className=\"value\">10</code><code className=\"plain\">, </code><code className=\"value\">40</code> <code className=\"plain\">] </code></div>\r\n                <div className=\"line number31 index30 alt2\"><code className=\"plain\">x </code><code className=\"keyword\">=</code> <code className=\"value\">10</code></div>\r\n                <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number33 index32 alt2\"><code className=\"comments\"># Function call </code></div>\r\n                <div className=\"line number34 index33 alt1\"><code className=\"plain\">result </code><code className=\"keyword\">=</code> <code className=\"plain\">binarySearch(arr, </code><code className=\"value\">0</code><code className=\"plain\">, </code><code className=\"functions\">len</code><code className=\"plain\">(arr)</code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">, x) </code></div>\r\n                <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number36 index35 alt1\"><code className=\"keyword\">if</code> <code className=\"plain\">result !</code><code className=\"keyword\">=</code> <code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">: </code></div>\r\n                <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code> <code className=\"plain\">(</code><code className=\"string\">\"Element is present at index % d\"</code> <code className=\"keyword\">%</code> <code className=\"plain\">result) </code></div>\r\n                <div className=\"line number38 index37 alt1\"><code className=\"keyword\">else</code><code className=\"plain\">: </code></div>\r\n                <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code> <code className=\"plain\">(</code><code className=\"string\">\"Element is not present in array\"</code><code className=\"plain\">) </code></div></div>\r\n              </div>\r\n            </h5><br></br><br></br>\r\n\r\n            <h5><span><h4 className=\"text-success\"><b>Iterative</b> implementation of Binary Search</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Python3 code to implement iterative Binary&nbsp; </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\"># Search. </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"comments\"># It returns location of x in given array arr&nbsp; </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"comments\"># if present, else returns -1 </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"keyword\">def</code> <code className=\"plain\">binarySearch(arr, l, r, x): </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">l &lt;</code><code className=\"keyword\">=</code> <code className=\"plain\">r: </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">mid </code><code className=\"keyword\">=</code> <code className=\"plain\">l </code><code className=\"keyword\">+</code> <code className=\"plain\">(r </code><code className=\"keyword\">-</code> <code className=\"plain\">l) </code><code className=\"keyword\">/</code><code className=\"keyword\">/</code> <code className=\"value\">2</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># Check if x is present at mid </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">arr[mid] </code><code className=\"keyword\">=</code><code className=\"keyword\">=</code> <code className=\"plain\">x: </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">mid </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># If x is greater, ignore left half </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">elif</code> <code className=\"plain\">arr[mid] &lt; x: </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">l </code><code className=\"keyword\">=</code> <code className=\"plain\">mid </code><code className=\"keyword\">+</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># If x is smaller, ignore right half </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code><code className=\"plain\">: </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">r </code><code className=\"keyword\">=</code> <code className=\"plain\">mid </code><code className=\"keyword\">-</code> <code className=\"value\">1</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># If we reach here, then the element </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"># was not present </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"keyword\">-</code><code className=\"value\">1</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"comments\"># Driver Code </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"plain\">arr </code><code className=\"keyword\">=</code> <code className=\"plain\">[ </code><code className=\"value\">2</code><code className=\"plain\">, </code><code className=\"value\">3</code><code className=\"plain\">, </code><code className=\"value\">4</code><code className=\"plain\">, </code><code className=\"value\">10</code><code className=\"plain\">, </code><code className=\"value\">40</code> <code className=\"plain\">] </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"plain\">x </code><code className=\"keyword\">=</code> <code className=\"value\">10</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"comments\"># Function call </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"plain\">result </code><code className=\"keyword\">=</code> <code className=\"plain\">binarySearch(arr, </code><code className=\"value\">0</code><code className=\"plain\">, </code><code className=\"functions\">len</code><code className=\"plain\">(arr)</code><code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">, x) </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"keyword\">if</code> <code className=\"plain\">result !</code><code className=\"keyword\">=</code> <code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">: </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code> <code className=\"plain\">(</code><code className=\"string\">\"Element is present at index % d\"</code> <code className=\"keyword\">%</code> <code className=\"plain\">result) </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"keyword\">else</code><code className=\"plain\">: </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code> <code className=\"plain\">(</code><code className=\"string\">\"Element is not present in array\"</code><code className=\"plain\">) </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB4(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Java</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Recursive</b> implementation of Binary Search</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Java implementation of recursive Binary Search </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">BinarySearch &#123; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Returns index of x if it is present in arr[l.. </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; r], else return -1 </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">binarySearch(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[], </code><code className=\"keyword\">int</code> <code className=\"plain\">l, </code><code className=\"keyword\">int</code> <code className=\"plain\">r, </code><code className=\"keyword\">int</code> <code className=\"plain\">x) </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(r &gt;= l) &#123; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">mid = l + (r - l) / </code><code className=\"value\">2</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; If the element is present at the </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> middle itself &#8727;&#47;</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[mid] == x) </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">mid; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; If element is smaller than mid, then </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> it can only be present in left subarray &#8727;&#47;</code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[mid] &gt; x) </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">binarySearch(arr, l, mid - </code><code className=\"value\">1</code><code className=\"plain\">, x); </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Else the element can only be present </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> in right subarray &#8727;&#47;</code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">binarySearch(arr, mid + </code><code className=\"value\">1</code><code className=\"plain\">, r, x); </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; We reach here when element is not present </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> in array &#8727;&#47;</code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">-</code><code className=\"value\">1</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Driver method to test above &#8727;&#47;</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String args[]) </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">BinarySearch ob = </code><code className=\"keyword\">new</code> <code className=\"plain\">BinarySearch(); </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123; </code><code className=\"value\">2</code><code className=\"plain\">, </code><code className=\"value\">3</code><code className=\"plain\">, </code><code className=\"value\">4</code><code className=\"plain\">, </code><code className=\"value\">10</code><code className=\"plain\">, </code><code className=\"value\">40</code> <code className=\"plain\">&#125;; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">x = </code><code className=\"value\">10</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">result = ob.binarySearch(arr, </code><code className=\"value\">0</code><code className=\"plain\">, n - </code><code className=\"value\">1</code><code className=\"plain\">, x); </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(result == -</code><code className=\"value\">1</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Element not present\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Element found at index \"</code> <code className=\"plain\">+ result); </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Iterative</b> implementation of Binary Search</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Java implementation of iterative Binary Search </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">BinarySearch &#123; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Returns index of x if it is present in arr[], </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> else return -1 &#8727;&#47;</code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">binarySearch(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[], </code><code className=\"keyword\">int</code> <code className=\"plain\">x) </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">l = </code><code className=\"value\">0</code><code className=\"plain\">, r = arr.length - </code><code className=\"value\">1</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(l &lt;= r) &#123; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">m = l + (r - l) / </code><code className=\"value\">2</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Check if x is present at mid </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[m] == x) </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">m; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If x greater, ignore left half </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[m] &lt; x) </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">l = m + </code><code className=\"value\">1</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If x is smaller, ignore right half </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">r = m - </code><code className=\"value\">1</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; if we reach here, then element was </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\"> not present &#8727;&#47;</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">-</code><code className=\"value\">1</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#8727; Driver method to test above &#8727;&#47;</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String args[]) </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">BinarySearch ob = </code><code className=\"keyword\">new</code> <code className=\"plain\">BinarySearch(); </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123; </code><code className=\"value\">2</code><code className=\"plain\">, </code><code className=\"value\">3</code><code className=\"plain\">, </code><code className=\"value\">4</code><code className=\"plain\">, </code><code className=\"value\">10</code><code className=\"plain\">, </code><code className=\"value\">40</code> <code className=\"plain\">&#125;; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">x = </code><code className=\"value\">10</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">result = ob.binarySearch(arr, x); </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(result == -</code><code className=\"value\">1</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Element not present\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Element found at \"</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ </code><code className=\"string\">\"index \"</code> <code className=\"plain\">+ result); </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB5(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref}>\r\n        <Text type=\"headline-4\">Source code in C#</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Recursive</b> implementation of Binary Search</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C# implementation of recursive Binary Search </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">using</code> <code className=\"plain\">System; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG &#123; </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Returns index of x if it is present in </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; arr[l..r], else return -1 </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">int</code> <code className=\"plain\">binarySearch(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr, </code><code className=\"keyword\">int</code> <code className=\"plain\">l, </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">r, </code><code className=\"keyword\">int</code> <code className=\"plain\">x) </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(r &gt;= l) &#123; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">mid = l + (r - l) / 2; </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If the element is present at the </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; middle itself </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[mid] == x) </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">mid; </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If element is smaller than mid, then </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; it can only be present in left subarray </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[mid] &gt; x) </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">binarySearch(arr, l, mid - 1, x); </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Else the element can only be present </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; in right subarray </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">binarySearch(arr, mid + 1, r, x); </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; We reach here when element is not present </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; in array </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">-1; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver method to test above </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main() </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr = &#123; 2, 3, 4, 10, 40 &#125;; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length; </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">x = 10; </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">result = binarySearch(arr, 0, n - 1, x); </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(result == -1) </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"Element not present\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"Element found at index \"</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ result); </code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5><br></br><br></br>\r\n            \r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Iterative</b> implementation of Binary Search</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C# implementation of iterative Binary Search </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">using</code> <code className=\"plain\">System; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG &#123; </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Returns index of x if it is present in arr[], </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; else return -1 </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">static</code> <code className=\"keyword\">int</code> <code className=\"plain\">binarySearch(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr, </code><code className=\"keyword\">int</code> <code className=\"plain\">x) </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">l = 0, r = arr.Length - 1; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(l &lt;= r) &#123; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">m = l + (r - l) / 2; </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Check if x is present at mid </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[m] == x) </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">m; </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If x greater, ignore left half </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[m] &lt; x) </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">l = m + 1; </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If x is smaller, ignore right half </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">r = m - 1; </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; if we reach here, then element was </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; not present </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">-1; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver method to test above </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main() </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr = &#123; 2, 3, 4, 10, 40 &#125;; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">x = 10; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">result = binarySearch(arr, x); </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(result == -1) </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"Element not present\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"Element found at \"</code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ </code><code className=\"string\">\"index \"</code> <code className=\"plain\">+ result); </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function PageB6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in PHP</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Recursive</b> implementation of Binary Search</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"plain\">&lt;?php </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; PHP program to implement </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"comments\">&#47;&#47; recursive Binary Search </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"comments\">&#47;&#47; A recursive binary search </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"comments\">&#47;&#47; function. It returns location </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"comments\">&#47;&#47; of x in given array arr[l..r]&nbsp; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"comments\">&#47;&#47; is present, otherwise -1 </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"keyword\">function</code> <code className=\"plain\">binarySearch(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$l</code><code className=\"plain\">, </code><code className=\"variable\">$r</code><code className=\"plain\">, </code><code className=\"variable\">$x</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$r</code> <code className=\"plain\">&gt;= </code><code className=\"variable\">$l</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$mid</code> <code className=\"plain\">= </code><code className=\"functions\">ceil</code><code className=\"plain\">(</code><code className=\"variable\">$l</code> <code className=\"plain\">+ (</code><code className=\"variable\">$r</code> <code className=\"plain\">- </code><code className=\"variable\">$l</code><code className=\"plain\">) / 2); </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If the element is present&nbsp; </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; at the middle itself </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$mid</code><code className=\"plain\">] == </code><code className=\"variable\">$x</code><code className=\"plain\">)&nbsp; </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"functions\">floor</code><code className=\"plain\">(</code><code className=\"variable\">$mid</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If element is smaller than&nbsp; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; mid, then it can only be&nbsp; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; present in left subarray </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$mid</code><code className=\"plain\">] &gt; </code><code className=\"variable\">$x</code><code className=\"plain\">)&nbsp; </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">binarySearch(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$l</code><code className=\"plain\">,&nbsp; </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$mid</code> <code className=\"plain\">- 1, </code><code className=\"variable\">$x</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Else the element can only&nbsp; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; be present in right subarray </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">binarySearch(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$mid</code> <code className=\"plain\">+ 1,&nbsp; </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$r</code><code className=\"plain\">, </code><code className=\"variable\">$x</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"comments\">&#47;&#47; We reach here when element&nbsp; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"comments\">&#47;&#47; is not present in array </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"keyword\">return</code> <code className=\"plain\">-1; </code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"comments\">&#47;&#47; Driver Code </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"variable\">$arr</code> <code className=\"plain\">= </code><code className=\"keyword\">array</code><code className=\"plain\">(2, 3, 4, 10, 40); </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"variable\">$n</code> <code className=\"plain\">= </code><code className=\"functions\">count</code><code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"variable\">$x</code> <code className=\"plain\">= 10; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"variable\">$result</code> <code className=\"plain\">= binarySearch(</code><code className=\"variable\">$arr</code><code className=\"plain\">, 0, </code><code className=\"variable\">$n</code> <code className=\"plain\">- 1, </code><code className=\"variable\">$x</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"keyword\">if</code><code className=\"plain\">((</code><code className=\"variable\">$result</code> <code className=\"plain\">== -1)) </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"functions\">echo</code> <code className=\"string\">\"Element is not present in array\"</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"functions\">echo</code> <code className=\"string\">\"Element is present at index \"</code><code className=\"plain\">, </code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$result</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            \r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Iterative </b> implementation of Binary Search</h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"plain\">&lt;?php </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; PHP program to implement </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"comments\">&#47;&#47; iterative Binary Search </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"comments\">&#47;&#47; A iterative binary search&nbsp; </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"comments\">&#47;&#47; function. It returns location&nbsp; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"comments\">&#47;&#47; of x in given array arr[l..r]&nbsp; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"comments\">&#47;&#47; if present, otherwise -1 </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"keyword\">function</code> <code className=\"plain\">binarySearch(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$l</code><code className=\"plain\">,&nbsp; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$r</code><code className=\"plain\">, </code><code className=\"variable\">$x</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">while</code> <code className=\"plain\">(</code><code className=\"variable\">$l</code> <code className=\"plain\">&lt;= </code><code className=\"variable\">$r</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$m</code> <code className=\"plain\">= </code><code className=\"variable\">$l</code> <code className=\"plain\">+ (</code><code className=\"variable\">$r</code> <code className=\"plain\">- </code><code className=\"variable\">$l</code><code className=\"plain\">) / 2; </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Check if x is present at mid </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$m</code><code className=\"plain\">] == </code><code className=\"variable\">$x</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"functions\">floor</code><code className=\"plain\">(</code><code className=\"variable\">$m</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If x greater, ignore </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; left half </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$m</code><code className=\"plain\">] &lt; </code><code className=\"variable\">$x</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$l</code> <code className=\"plain\">= </code><code className=\"variable\">$m</code> <code className=\"plain\">+ 1; </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If x is smaller,&nbsp; </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; ignore right half </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$r</code> <code className=\"plain\">= </code><code className=\"variable\">$m</code> <code className=\"plain\">- 1; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; if we reach here, then&nbsp; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; element was not present </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">-1; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"comments\">&#47;&#47; Driver Code </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"variable\">$arr</code> <code className=\"plain\">= </code><code className=\"keyword\">array</code><code className=\"plain\">(2, 3, 4, 10, 40); </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"variable\">$n</code> <code className=\"plain\">= </code><code className=\"functions\">count</code><code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"variable\">$x</code> <code className=\"plain\">= 10; </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"variable\">$result</code> <code className=\"plain\">= binarySearch(</code><code className=\"variable\">$arr</code><code className=\"plain\">, 0,&nbsp; </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$n</code> <code className=\"plain\">- 1, </code><code className=\"variable\">$x</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"keyword\">if</code><code className=\"plain\">((</code><code className=\"variable\">$result</code> <code className=\"plain\">== -1)) </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"functions\">echo</code> <code className=\"string\">\"Element is not present in array\"</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"functions\">echo</code> <code className=\"string\">\"Element is present at index \"</code><code className=\"plain\">,&nbsp; </code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$result</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { FC, Suspense, useState } from \"react\";\r\nimport { AppBar } from \"@react-md/app-bar\";\r\nimport { CircularProgress } from \"@react-md/progress\";\r\nimport { Tabs, TabsManager } from \"@react-md/tabs\";\r\nimport { CrossFade } from \"@react-md/transition\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport useFakeLazyImport from \"../useFakeLazyImport\";\r\n\r\n\r\nimport Container from \"../Container\";\r\nimport PageB1 from \"./CodingwithC\";\r\nimport PageB2 from \"./CodingwithCpp\";\r\nimport PageB3 from \"./CodingwithPython\";\r\nimport PageB4 from \"./CodingwithJava\";\r\nimport PageB5 from \"./CodingwithC#\";\r\nimport PageB6 from \"./CodingwithPHP\";\r\n\r\ninterface CurrentPageProps {\r\n  page: number;\r\n}\r\n\r\nconst CurrentPage: FC<CurrentPageProps> = ({ page }) => {\r\n  let content = <PageB1 />;\r\n  if (page === 1) {\r\n    content = <PageB2 />;\r\n  } else if (page === 2) {\r\n    content = <PageB3 />;\r\n  } else if (page === 3) {\r\n    content = <PageB4 />;\r\n  } else if (page === 4) {\r\n    content = <PageB5 />;\r\n  } else if (page === 5) {\r\n    content = <PageB6 />;\r\n  }\r\n\r\n  return <CrossFade>{content}</CrossFade>;\r\n};\r\n\r\nconst CrossFadeExamplesAsyncBinary: FC = () => {\r\n  // just make it so it doesn't start loading until a new tab is shown\r\n  const [page, setPage] = useState<number>(-1);\r\n  const Content = useFakeLazyImport<CurrentPageProps>(CurrentPage, page, 5000);\r\n\r\n  return (\r\n    <>\r\n      <TabsManager\r\n        activeIndex={page === -1 ? 0 : page}\r\n        onActiveIndexChange={(index) => setPage(index)}\r\n        tabs={[\"C\", \"C++\", \"Python3\",\"Java\",\"C#\",\"PHP\"]}\r\n        tabsId=\"static-transition\"\r\n      >\r\n        <AppBar theme=\"default\">\r\n          <Tabs />\r\n        </AppBar>\r\n      </TabsManager>\r\n      <Container>\r\n        {page === -1 && (\r\n          <Text type=\"headline-6\">\r\n            {'Click on other tabs to start coding!'}\r\n          </Text>\r\n        )}\r\n        {page !== -1 && (\r\n          <Suspense fallback={<CircularProgress className=\"mt-4\" id=\"async-loading-progress\" />}>\r\n            <Content page={page} />\r\n          </Suspense>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrossFadeExamplesAsyncBinary;","import React, { FC } from \"react\";\r\nimport { Divider } from \"@react-md/divider\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport CrossFadeExamplesAsyncBinary from \"./CrossFadeElementAsyncBinary\";\r\n//import CrossFadeExamplesStatic from \"./CrossFadeExamplesStatic\";\r\n\r\nimport '../../../../sortingAlgorithms/__colorHub/codestyle.css';\r\n\r\nconst ViewcodesBinary: FC = () => (\r\n  <>\r\n    <Text type=\"headline-6\" margin=\"bottom\">\r\n      <div className=\"mt-1\"></div>\r\n      <h3 className=\"text-primary bg-white badge font-bold mt-2\">Code Explorer</h3>\r\n    </Text>\r\n    \r\n    <Divider />\r\n    <Text type=\"headline-6\">\r\n      <span className=\"text-info badge badge-pill col-lock bg-white\">Source Program in multiple&nbsp;<span className=\"text-danger\">Programming Languages</span></span>\r\n    </Text>\r\n    <CrossFadeExamplesAsyncBinary />\r\n    <Divider />\r\n  </>\r\n);\r\n\r\nexport default ViewcodesBinary;","import React, { FC, useState } from \"react\";\r\nimport { Button } from \"@react-md/button\";\r\nimport { useCSSTransition } from \"@react-md/transition\";\r\n\r\n//import Page1 from \"./Page1\";\r\nimport styles from \"./UseCSSTransition.module.scss\";\r\nimport '../../../../sortingAlgorithms/__colorHub/codestyle.css';\r\n\r\nimport { ExpandMoreSVGIcon, StorageSVGIcon, TextIconSpacing } from \"react-md\";\r\nimport ViewcodesBinary from \"./viewcodesbinary\";\r\n\r\nconst Binary: FC = () => {\r\n  const [transitionIn, setTransitionIn] = useState(false);\r\n  const [rendered, transitionProps] = useCSSTransition({\r\n    // changing this value causes the transition behavior to change\r\n    transitionIn,\r\n\r\n    // 5 seconds just for demo purposes... can also be an object\r\n    timeout: 5000,\r\n\r\n    // can also use a string that gets BEM-ified instead\r\n    classNames: {\r\n      enter: styles.enter,\r\n      enterActive: styles.entering,\r\n      exit: styles.exit,\r\n      exitActive: styles.exiting,\r\n    },\r\n\r\n    // can also trigger the css transition on initial mount\r\n    // appear: false,\r\n\r\n    // changes the `rendered` value to be false while not transitioning and\r\n    // `transitionIn` is false\r\n    temporary: true,\r\n\r\n    // an optional className to merge with the transition classNames\r\n    // className: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"text-white waves waves-effect waves-dark\" theme=\"error\" themeType=\"contained\" onClick={() => setTransitionIn(!transitionIn)}>\r\n        <TextIconSpacing icon={<StorageSVGIcon />}>\r\n          <TextIconSpacing icon={<ExpandMoreSVGIcon />} iconAfter>\r\n            Expand Codes\r\n          </TextIconSpacing>\r\n        </TextIconSpacing>\r\n      </Button>\r\n      {rendered && <div {...transitionProps}><ViewcodesBinary /></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Binary;","import React from \"react\";\r\n\r\nimport { randomIntFromInterval } from \"../../utils/randomIntGenerator.js\";\r\nimport { binarySearchAnimations } from \"./../searchingAlgorithms\";\r\n\r\nimport Header from \"./../../utils/header\";\r\nimport ArrayBlock from \"./../ArrayBlock\";\r\n\r\nimport SideBar from \"../../utils/sidebar\";\r\n\r\n//Stylesheets\r\nimport \"./binarySearch.css\";\r\nimport '../../sortingAlgorithms/__colorHub/codestyle.css';\r\nimport { Configuration } from \"react-md\";\r\nimport Binary from \"../../utils/Program_codes/view_code/BinarySearch/togglerbinary.tsx\";\r\n\r\nconst NUMBER_OF_ARRAY_BARS = 15;\r\nconst DEFAULT_COLOR = \"#6376f1\";\r\nconst FOUND_COLOR = \"#28B463\";\r\nconst NOT_FOUND_COLOR = \"#F16388\";\r\nconst ANIMATION_SPEED_SECONDS = 3;\r\n\r\nexport default class BinarySearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n            found: false,\r\n            disabled: false,\r\n            elementFoundAt: 0,\r\n            target: null,\r\n            msgAfterExecution: null,\r\n            msg: null,\r\n            previousLength: 0,\r\n            animations: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        let array = [];\r\n        const prevArray = document.getElementsByClassName(\"b-array-bar\");\r\n        document.getElementById(\"binarySearchTargetVal\").value = \"\";\r\n        for (let idx = 0; idx < prevArray.length; idx++) {\r\n            prevArray[idx].style.backgroundColor = DEFAULT_COLOR;\r\n            prevArray[idx].classList.remove(\"growFind\");\r\n            prevArray[idx].classList.remove(\"highlight\");\r\n        }\r\n        for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n            array.push(randomIntFromInterval(5, 850));\r\n        }\r\n        let sortedArray = array.slice().sort((a, b) => a - b);\r\n        this.setState({\r\n            array: sortedArray,\r\n            found: false,\r\n            disabled: false,\r\n            msgAfterExecution: null,\r\n            msg: null,\r\n            previousLength: this.state.animations.length,\r\n        });\r\n    }\r\n\r\n    hightlightWithinBounds(start, end, ArrayBlocks) {\r\n        for (let i = start; i <= end; i++) {\r\n            ArrayBlocks[i].style.backgroundColor = NOT_FOUND_COLOR;\r\n            ArrayBlocks[i].style.transition = \"100ms all\";\r\n        }\r\n    }\r\n\r\n    resetAllTiles(ArrayBlocks) {\r\n        for (let i = 0; i < ArrayBlocks.length; i++) {\r\n            ArrayBlocks[i].style.backgroundColor = DEFAULT_COLOR;\r\n            ArrayBlocks[i].style.transition = \"100ms all\";\r\n        }\r\n    }\r\n\r\n    binarySearch() {\r\n        //var msgAfterExecution = \"\";\r\n        const { array } = this.state;\r\n        const animations = [];\r\n        let count = 0;\r\n        let counter = 0;\r\n        const ArrayBlocks = document.getElementsByClassName(\"b-array-bar\");\r\n        const target = document.getElementById(\"binarySearchTargetVal\").value;\r\n        if (target === \"\") return;\r\n\r\n        binarySearchAnimations(\r\n            array,\r\n            0,\r\n            array.length - 1,\r\n            parseInt(target),\r\n            animations\r\n        );\r\n\r\n        for (let k = 0; k < animations.length; k++) {\r\n            const [left, right, mid, found] = animations[k];\r\n            count++;\r\n\r\n            if (k === animations.length - 1 && found) {\r\n                setTimeout(() => {\r\n                    console.log(\"Found !!!\");\r\n                    counter++;\r\n                    //msg = `${target} Element has been found !!`;\r\n                    this.setState({ disabled: true, msgAfterExecution: `${target} Element has been found !!`, msg: '', found: true });\r\n                    this.resetAllTiles(ArrayBlocks);\r\n                    ArrayBlocks[mid].classList.add(\"highlight\");\r\n                    ArrayBlocks[mid].style.backgroundColor = FOUND_COLOR;\r\n                }, (k + 1) * ANIMATION_SPEED_SECONDS * 1000);\r\n            }\r\n\r\n            \r\n            \r\n            if ((left === 0 && right === 0 && mid === 0) && !found) {\r\n                setTimeout(() => {\r\n                    console.log(\"ELement not found\");\r\n                    //msg = `Element ${target} not found`\r\n                    this.setState({\r\n                        disabled: true,\r\n                        msg: `Element ${target} not found`,\r\n                        found: false,\r\n                    });\r\n                    this.resetAllTiles(ArrayBlocks);\r\n                }, (k + 1) * ANIMATION_SPEED_SECONDS * 1000);\r\n            }\r\n\r\n            setTimeout(() => {\r\n                this.setState({ disabled: true });\r\n                this.resetAllTiles(ArrayBlocks);\r\n                this.hightlightWithinBounds(left, right, ArrayBlocks);\r\n            }, k * 1000 * ANIMATION_SPEED_SECONDS);\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState({ disabled: false, msg: `Element ${target} not found` });\r\n            if(counter === 0 && count=== 4){\r\n                alert(\"Element Not Found here !!!\");\r\n            }\r\n            //setTimeout(() => {this.resetArray()}, 5000);\r\n        }, count * 1000 * ANIMATION_SPEED_SECONDS);\r\n    }\r\n\r\n    render() {\r\n        const { array, found, disabled, msgAfterExecution, msg } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <SideBar />\r\n                <div className=\"jumbotron jumbotron-fluid bg-cover bg-light\">\r\n                    <center>\r\n                        <Header title=\"Binary Search\" />\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-1\"></div>\r\n                                <div className=\"input-group col-sm-10\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"binarySearchTargetVal\"\r\n                                        className=\"form-control teaxt-md-center\"\r\n                                        placeholder=\"--- Enter an element to find ---\"\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button\r\n                                            onClick={() => this.binarySearch()}\r\n                                            className=\"btn rounded-bottom btn-success\"\r\n                                            type=\"button\"\r\n                                            id=\"binarySearchBtn\"\r\n                                            disabled={disabled}\r\n                                        >\r\n                                            Search\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => this.resetArray()}\r\n                                            className=\"btn rounded-bottom btn-danger\"\r\n                                            id=\"binarySearchResetArray\"\r\n                                            type=\"button\"\r\n                                            disabled={disabled}\r\n                                        >\r\n                                            Generate new Array\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-1 \"></div>\r\n                                <span>\r\n                                    <b><h6 className=\"text-white col-md-7 col-sm-8 col-xl-7 col-10 badge-primary badge-pill mt-1 mb-3\">***Please Re-generate the array again to visualize proper result !!</h6></b>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"container\">\r\n                        {!found ? (\r\n                            <b><h4><p className=\"not-found text-white\">{msg}</p></h4></b>\r\n                        ) : null}\r\n                        {found ? (\r\n                            <b><p className=\"found\">{msgAfterExecution}</p></b>\r\n                        ) : null}\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"container\">\r\n                            {array.map((value, idx) => (\r\n                                <ArrayBlock\r\n                                    type={\"binarySearch\"}\r\n                                    key={idx}\r\n                                    idx={idx}\r\n                                    val={value}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </center>\r\n                </div>\r\n                <div className=\"row mt-3 col-lock mb-5 text-center\">\r\n                    <Configuration>\r\n                        <Binary />\r\n                    </Configuration>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function Page1(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C</Text>\r\n        <Text>\r\n          <code>\r\n          <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Implementation of Linear Search</b></h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C code to linearly search x in arr[]. If x </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; is present then return its location, otherwise </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"comments\">&#47;&#47; return -1 </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"preprocessor\">#include &lt;stdio.h&gt; </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">search(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">x) </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; n; i++) </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[i] == x) </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">i; </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">-1; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"comments\">&#47;&#47; Driver code </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main(</code><code className=\"keyword bold\">void</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 2, 3, 4, 10, 40 &#125;; </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">x = 10; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]); </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Function call </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">result = search(arr, n, x); </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">(result == -1) </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">? </code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"Element is not present in array\"</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">: </code><code className=\"functions bold\">printf</code><code className=\"plain\">(</code><code className=\"string\">\"Element is present at index %d\"</code><code className=\"plain\">, result); </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function Page2(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C++</Text>\r\n        <Text>\r\n          <code>\r\n          <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Implementation of Linear Search</b></h4><span><p>1<sup>st</sup> case:&nbsp;&nbsp;if element Found at last  O(n) to O(1)<br></br>2<sup>nd</sup> case:&nbsp;&nbsp;if element Not found O(n) to O(n/2)</p></span></span>\r\n            <div className=\"container text-left\">\r\n              <div className=\"offset-3 mt-4 mb-5\">\r\n                <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C++ code to linearly search x in arr[]. If x </code></div>\r\n                <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; is present then return its location, otherwise </code></div>\r\n                <div className=\"line number3 index2 alt2\"><code className=\"comments\">&#47;&#47; return -1 </code></div>\r\n                <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number5 index4 alt2\"><code className=\"preprocessor\">#include &lt;iostream&gt; </code></div>\r\n                <div className=\"line number6 index5 alt1\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std; </code></div>\r\n                <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number8 index7 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">search(</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[], </code><code className=\"color1 bold\">int</code> <code className=\"plain\">n, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">x) </code></div>\r\n                <div className=\"line number9 index8 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">i; </code></div>\r\n                <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code> <code className=\"plain\">(i = 0; i &lt; n; i++) </code></div>\r\n                <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[i] == x) </code></div>\r\n                <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">i; </code></div>\r\n                <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">-1; </code></div>\r\n                <div className=\"line number15 index14 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number17 index16 alt2\"><code className=\"comments\">&#47;&#47; Driver code </code></div>\r\n                <div className=\"line number18 index17 alt1\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main(</code><code className=\"keyword bold\">void</code><code className=\"plain\">) </code></div>\r\n                <div className=\"line number19 index18 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">arr[] = &#123; 2, 3, 4, 10, 40 &#125;; </code></div>\r\n                <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">x = 10; </code></div>\r\n                <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">n = </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr) / </code><code className=\"keyword bold\">sizeof</code><code className=\"plain\">(arr[0]); </code></div>\r\n                <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Function call </code></div>\r\n                <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">result = search(arr, n, x); </code></div>\r\n                <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">(result == -1) </code></div>\r\n                <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">? cout &lt;&lt; </code><code className=\"string\">\"Element is not present in array\"</code></div>\r\n                <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">: cout &lt;&lt; </code><code className=\"string\">\"Element is present at index \"</code> <code className=\"plain\">&lt;&lt; result; </code></div>\r\n                <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">return</code> <code className=\"plain\">0; </code></div>\r\n                <div className=\"line number30 index29 alt1\"><code className=\"plain\">&#125;</code></div>\r\n              </div>\r\n            </div>\r\n          </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Improve Linear Search Worst-Case Complexity</b></h4></span>\r\n                <div className=\"container text-left\">\r\n                  <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C++ program for linear search </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"preprocessor\">#include&lt;bits/stdc++.h&gt; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword bold\">using</code> <code className=\"keyword bold\">namespace</code> <code className=\"plain\">std; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword bold\">void</code> <code className=\"plain\">search(vector&lt;</code><code className=\"color1 bold\">int</code><code className=\"plain\">&gt; arr, </code><code className=\"color1 bold\">int</code> <code className=\"plain\">search_Element) </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">left = 0; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">length = arr.size(); </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">position = -1; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">right = length - 1; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Run loop from 0 to right </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">for</code><code className=\"plain\">(left = 0; left &lt;= right;)&nbsp; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If search_element is found with </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; left varaible </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[left] == search_Element)&nbsp; </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">position = left; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"Element found in Array at \"</code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&lt;&lt; position + 1 &lt;&lt; </code><code className=\"string\">\" Position with \"</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&lt;&lt; left + 1 &lt;&lt; </code><code className=\"string\">\" Attempt\"</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">break</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If search_element is found with </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; right varaible </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(arr[right] == search_Element)&nbsp; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">position = right; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"Element found in Array at \"</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&lt;&lt; position + 1 &lt;&lt; </code><code className=\"string\">\" Position with \"</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&lt;&lt; length - right &lt;&lt; </code><code className=\"string\">\" Attempt\"</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">break</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">left++; </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">right--; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; If element not found </code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword bold\">if</code> <code className=\"plain\">(position == -1) </code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">cout &lt;&lt; </code><code className=\"string\">\"Not found in Array with \"</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&lt;&lt; left &lt;&lt; </code><code className=\"string\">\" Attempt\"</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"comments\">&#47;&#47; Driver code </code></div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"color1 bold\">int</code> <code className=\"plain\">main() </code></div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">vector&lt;</code><code className=\"color1 bold\">int</code><code className=\"plain\">&gt; arr&#123; 1, 2, 3, 4, 5 &#125;; </code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"color1 bold\">int</code> <code className=\"plain\">search_element = 5; </code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Function call </code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">search(arr, search_element); </code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function Page3(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref}>\r\n        <Text type=\"headline-4\">Source code in Python</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Implementation of Linear Search</b></h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-4 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\"># Python3 code to linearly search x in arr[]. </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\"># If x is present then return its location, </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"comments\"># otherwise return -1 </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"keyword\">def</code> <code className=\"plain\">search(arr, n, x): </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">i </code><code className=\"keyword\">in</code> <code className=\"functions\">range</code><code className=\"plain\">(</code><code className=\"value\">0</code><code className=\"plain\">, n): </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[i] </code><code className=\"keyword\">=</code><code className=\"keyword\">=</code> <code className=\"plain\">x): </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">i </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"keyword\">-</code><code className=\"value\">1</code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"comments\"># Driver Code </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"plain\">arr </code><code className=\"keyword\">=</code> <code className=\"plain\">[</code><code className=\"value\">2</code><code className=\"plain\">, </code><code className=\"value\">3</code><code className=\"plain\">, </code><code className=\"value\">4</code><code className=\"plain\">, </code><code className=\"value\">10</code><code className=\"plain\">, </code><code className=\"value\">40</code><code className=\"plain\">] </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"plain\">x </code><code className=\"keyword\">=</code> <code className=\"value\">10</code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"plain\">n </code><code className=\"keyword\">=</code> <code className=\"functions\">len</code><code className=\"plain\">(arr) </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"comments\"># Function call </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"plain\">result </code><code className=\"keyword\">=</code> <code className=\"plain\">search(arr, n, x) </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"keyword\">if</code><code className=\"plain\">(result </code><code className=\"keyword\">=</code><code className=\"keyword\">=</code> <code className=\"keyword\">-</code><code className=\"value\">1</code><code className=\"plain\">): </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code><code className=\"plain\">(</code><code className=\"string\">\"Element is not present in array\"</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"keyword\">else</code><code className=\"plain\">: </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">print</code><code className=\"plain\">(</code><code className=\"string\">\"Element is present at index\"</code><code className=\"plain\">, result) </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            \r\n            <h5>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(                                                                                                                                              \r\n  function Page4(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in Java</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Implementation of Linear Search</b></h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Java code for linearly searching x in arr[]. If x </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; is present then return its location, otherwise </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"comments\">&#47;&#47; return -1 </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG&nbsp; </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">int</code> <code className=\"plain\">search(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[], </code><code className=\"keyword\">int</code> <code className=\"plain\">x) </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.length; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = </code><code className=\"value\">0</code><code className=\"plain\">; i &lt; n; i++)&nbsp; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[i] == x) </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">i; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">-</code><code className=\"value\">1</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver code </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String args[]) </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123; </code><code className=\"value\">2</code><code className=\"plain\">, </code><code className=\"value\">3</code><code className=\"plain\">, </code><code className=\"value\">4</code><code className=\"plain\">, </code><code className=\"value\">10</code><code className=\"plain\">, </code><code className=\"value\">40</code> <code className=\"plain\">&#125;; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">x = </code><code className=\"value\">10</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Function call </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">result = search(arr, x); </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(result == -</code><code className=\"value\">1</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.print( </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"string\">\"Element is not present in array\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.print(</code><code className=\"string\">\"Element is present at index \"</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ result); </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Improve Linear Search Worst-Case Complexity</b></h4></span><span><p className=\"text-primary\">1<sup>st</sup> case:&nbsp;&nbsp;if element Found at last  O(n) to O(1)<br></br>2<sup>nd</sup> case:&nbsp;&nbsp;if element Not found O(n) to O(n/2)</p></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; Java program for linear search </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">import</code> <code className=\"plain\">java.io.*; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG&nbsp; </code></div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">search(</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[], </code><code className=\"keyword\">int</code> <code className=\"plain\">search_Element) </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">left = </code><code className=\"value\">0</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">length = arr.length; </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">right = length - </code><code className=\"value\">1</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">position = -</code><code className=\"value\">1</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; run loop from 0 to right </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(left = </code><code className=\"value\">0</code><code className=\"plain\">; left &lt;= right;)&nbsp; </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; if search_element is found with left varaible </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[left] == search_Element)&nbsp; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">position = left; </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println( </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"string\">\"Element found in Array at \"</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ (position + </code><code className=\"value\">1</code><code className=\"plain\">) + </code><code className=\"string\">\" Position with \"</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ (left + </code><code className=\"value\">1</code><code className=\"plain\">) + </code><code className=\"string\">\" Attempt\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">break</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; if search_element is found with right varaible </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[right] == search_Element)&nbsp; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">position = right; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println( </code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"string\">\"Element found in Array at \"</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ (position + </code><code className=\"value\">1</code><code className=\"plain\">) + </code><code className=\"string\">\" Position with \"</code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ (length - right) + </code><code className=\"string\">\" Attempt\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">break</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">left++; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">right--; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; if element not found </code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(position == -</code><code className=\"value\">1</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">System.out.println(</code><code className=\"string\">\"Not found in Array with \"</code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ left + </code><code className=\"string\">\" Attempt\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver code </code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">main(String[] args) </code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">arr[] = &#123; </code><code className=\"value\">1</code><code className=\"plain\">, </code><code className=\"value\">2</code><code className=\"plain\">, </code><code className=\"value\">3</code><code className=\"plain\">, </code><code className=\"value\">4</code><code className=\"plain\">, </code><code className=\"value\">5</code> <code className=\"plain\">&#125;; </code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">search_element = </code><code className=\"value\">5</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Function call </code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">search(arr,search_element); </code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"plain\">&#125;</code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function Page5(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in C#</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Implementation of Linear Search</b></h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C# code to linearly search x in arr[]. If x </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; is present then return its location, otherwise </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"comments\">&#47;&#47; return -1 </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"keyword\">using</code> <code className=\"plain\">System; </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG &#123; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">int</code> <code className=\"plain\">search(</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr, </code><code className=\"keyword\">int</code> <code className=\"plain\">x) </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">n = arr.Length; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(</code><code className=\"keyword\">int</code> <code className=\"plain\">i = 0; i &lt; n; i++)&nbsp; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[i] == x) </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">i; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">-1; </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver code </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main() </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code><code className=\"plain\">[] arr = &#123; 2, 3, 4, 10, 40 &#125;; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">x = 10; </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Function call </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">result = search(arr, x); </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(result == -1) </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine( </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"string\">\"Element is not present in array\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"Element is present at index \"</code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ result); </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n            <h5><span><h4 className=\"text-success\"><b>Improve Linear Search Worst-Case Complexity</b></h4><span><p>1<sup>st</sup> case:&nbsp;&nbsp;if element Found at last  O(n) to O(1)<br></br>2<sup>nd</sup> case:&nbsp;&nbsp;if element Not found O(n) to O(n/2)</p></span></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-3 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"comments\">&#47;&#47; C# program for linear search </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"keyword\">using</code> <code className=\"plain\">System; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"keyword\">class</code> <code className=\"plain\">GFG&nbsp; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">search(</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr,&nbsp; </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">search_Element) </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">left = 0; </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">length = arr.Length; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">right = length - 1; </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">position = -1; </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; run loop from 0 to right </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code> <code className=\"plain\">(left = 0; left &lt;= right;)&nbsp; </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; if search_element is found with left varaible </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[left] == search_Element)&nbsp; </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">position = left; </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine( </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"string\">\"Element found in Array at \"</code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ (position + 1) + </code><code className=\"string\">\" Position with \"</code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ (left + 1) + </code><code className=\"string\">\" Attempt\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">break</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; if search_element is found with right varaible </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(arr[right] == search_Element)&nbsp; </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number32 index31 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">position = right; </code></div>\r\n                  <div className=\"line number33 index32 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine( </code></div>\r\n                  <div className=\"line number34 index33 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"string\">\"Element found in Array at \"</code></div>\r\n                  <div className=\"line number35 index34 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ (position + 1) + </code><code className=\"string\">\" Position with \"</code></div>\r\n                  <div className=\"line number36 index35 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ (length - right) + </code><code className=\"string\">\" Attempt\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number37 index36 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">break</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number38 index37 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number39 index38 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number40 index39 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">left++; </code></div>\r\n                  <div className=\"line number41 index40 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">right--; </code></div>\r\n                  <div className=\"line number42 index41 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number43 index42 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number44 index43 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; if element not found </code></div>\r\n                  <div className=\"line number45 index44 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code> <code className=\"plain\">(position == -1) </code></div>\r\n                  <div className=\"line number46 index45 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">Console.WriteLine(</code><code className=\"string\">\"Not found in Array with \"</code></div>\r\n                  <div className=\"line number47 index46 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">+ left + </code><code className=\"string\">\" Attempt\"</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number48 index47 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number49 index48 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number50 index49 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number51 index50 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Driver code </code></div>\r\n                  <div className=\"line number52 index51 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">public</code> <code className=\"keyword\">static</code> <code className=\"keyword\">void</code> <code className=\"plain\">Main(String[] args) </code></div>\r\n                  <div className=\"line number53 index52 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number54 index53 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">[]arr = &#123; 1, 2, 3, 4, 5 &#125;; </code></div>\r\n                  <div className=\"line number55 index54 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">int</code> <code className=\"plain\">search_element = 5; </code></div>\r\n                  <div className=\"line number56 index55 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number57 index56 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"comments\">&#47;&#47; Function call </code></div>\r\n                  <div className=\"line number58 index57 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">search(arr,search_element); </code></div>\r\n                  <div className=\"line number59 index58 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number60 index59 alt1\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number61 index60 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { forwardRef, HTMLAttributes } from \"react\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nexport default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(\r\n  function Page6(props, ref) {\r\n    return (\r\n      <div {...props} ref={ref} className=\"mt-3 mb-1\">\r\n        <Text type=\"headline-4\">Source code in PHP</Text>\r\n        <Text>\r\n          <code>\r\n            <h5 className=\"mt-5 mb-4\"><span><h4 className=\"text-success\"><b>Implementation of Linear Search</b></h4></span>\r\n              <div className=\"container text-left\">\r\n                <div className=\"offset-4 mt-4 mb-5\">\r\n                  <div className=\"line number1 index0 alt2\"><code className=\"plain\">&lt;?php </code></div>\r\n                  <div className=\"line number2 index1 alt1\"><code className=\"comments\">&#47;&#47; PHP code for linearly search x in arr[].&nbsp; </code></div>\r\n                  <div className=\"line number3 index2 alt2\"><code className=\"comments\">&#47;&#47; If x is present then return its location,&nbsp; </code></div>\r\n                  <div className=\"line number4 index3 alt1\"><code className=\"comments\">&#47;&#47; otherwise return -1&nbsp; </code></div>\r\n                  <div className=\"line number5 index4 alt2\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number6 index5 alt1\"><code className=\"keyword\">function</code> <code className=\"plain\">search(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$x</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number7 index6 alt2\"><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number8 index7 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$n</code> <code className=\"plain\">= sizeof(</code><code className=\"variable\">$arr</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number9 index8 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">for</code><code className=\"plain\">(</code><code className=\"variable\">$i</code> <code className=\"plain\">= 0; </code><code className=\"variable\">$i</code> <code className=\"plain\">&lt; </code><code className=\"variable\">$n</code><code className=\"plain\">; </code><code className=\"variable\">$i</code><code className=\"plain\">++) </code></div>\r\n                  <div className=\"line number10 index9 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#123; </code></div>\r\n                  <div className=\"line number11 index10 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">if</code><code className=\"plain\">(</code><code className=\"variable\">$arr</code><code className=\"plain\">[</code><code className=\"variable\">$i</code><code className=\"plain\">] == </code><code className=\"variable\">$x</code><code className=\"plain\">) </code></div>\r\n                  <div className=\"line number12 index11 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"variable\">$i</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number13 index12 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number14 index13 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"keyword\">return</code> <code className=\"plain\">-1; </code></div>\r\n                  <div className=\"line number15 index14 alt2\"><code className=\"plain\">&#125; </code></div>\r\n                  <div className=\"line number16 index15 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number17 index16 alt2\"><code className=\"comments\">&#47;&#47; Driver Code </code></div>\r\n                  <div className=\"line number18 index17 alt1\"><code className=\"variable\">$arr</code> <code className=\"plain\">= </code><code className=\"keyword\">array</code><code className=\"plain\">(2, 3, 4, 10, 40);&nbsp; </code></div>\r\n                  <div className=\"line number19 index18 alt2\"><code className=\"variable\">$x</code> <code className=\"plain\">= 10; </code></div>\r\n                  <div className=\"line number20 index19 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number21 index20 alt2\"><code className=\"comments\">&#47;&#47; Function call </code></div>\r\n                  <div className=\"line number22 index21 alt1\"><code className=\"variable\">$result</code> <code className=\"plain\">= search(</code><code className=\"variable\">$arr</code><code className=\"plain\">, </code><code className=\"variable\">$x</code><code className=\"plain\">); </code></div>\r\n                  <div className=\"line number23 index22 alt2\"><code className=\"keyword\">if</code><code className=\"plain\">(</code><code className=\"variable\">$result</code> <code className=\"plain\">== -1) </code></div>\r\n                  <div className=\"line number24 index23 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">echo</code> <code className=\"string\">\"Element is not present in array\"</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number25 index24 alt2\"><code className=\"keyword\">else</code></div>\r\n                  <div className=\"line number26 index25 alt1\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"functions\">echo</code> <code className=\"string\">\"Element is present at index \"</code> <code className=\"plain\">, </code></div>\r\n                  <div className=\"line number27 index26 alt2\"><code className=\"undefined spaces\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code className=\"variable\">$result</code><code className=\"plain\">; </code></div>\r\n                  <div className=\"line number28 index27 alt1\"><code className=\"undefined spaces\">&nbsp;</code>&nbsp;</div>\r\n                  <div className=\"line number29 index28 alt2\"><code className=\"comments\">&#47;&#47; This code is contributed </code></div>\r\n                  <div className=\"line number30 index29 alt1\"><code className=\"comments\">&#47;&#47; by jit_t </code></div>\r\n                  <div className=\"line number31 index30 alt2\"><code className=\"plain\">?&gt; </code></div>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </code>\r\n        </Text>\r\n      </div>\r\n    );\r\n  }\r\n);","import React, { FC, Suspense, useState } from \"react\";\r\nimport { AppBar } from \"@react-md/app-bar\";\r\nimport { CircularProgress } from \"@react-md/progress\";\r\nimport { Tabs, TabsManager } from \"@react-md/tabs\";\r\nimport { CrossFade } from \"@react-md/transition\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport useFakeLazyImport from \"../useFakeLazyImport\";\r\n\r\nimport Container from \"../Container\";\r\nimport Page1 from \"./CodingwithC\";\r\nimport Page2 from \"./CodingwithCpp\";\r\nimport Page3 from \"./CodingwithPython\";\r\nimport Page4 from \"./CodingwithJava\";\r\nimport Page5 from \"./CodingwithC#\";\r\nimport Page6 from \"./CodingwithPHP\";\r\n\r\ninterface CurrentPageProps {\r\n  page: number;\r\n}\r\n\r\nconst CurrentPage: FC<CurrentPageProps> = ({ page }) => {\r\n  let content = <Page1 />;\r\n  if (page === 1) {\r\n    content = <Page2 />;\r\n  } else if (page === 2) {\r\n    content = <Page3 />;\r\n  } else if (page === 3) {\r\n    content = <Page4 />;\r\n  } else if (page === 4) {\r\n    content = <Page5 />;\r\n  } else if (page === 5) {\r\n    content = <Page6 />;\r\n  }\r\n\r\n  return <CrossFade>{content}</CrossFade>;\r\n};\r\n\r\nconst CrossFadeExamplesAsync: FC = () => {\r\n  // just make it so it doesn't start loading until a new tab is shown\r\n  const [page, setPage] = useState<number>(-1);\r\n  const Content = useFakeLazyImport<CurrentPageProps>(CurrentPage, page, 5000);\r\n\r\n  return (\r\n    <>\r\n      <TabsManager\r\n        activeIndex={page === -1 ? 0 : page}\r\n        onActiveIndexChange={(index) => setPage(index)}\r\n        tabs={[\"C\", \"C++\", \"Python\",\"Java\",\"C#\",\"PHP\"]}\r\n        tabsId=\"static-transition\"\r\n      >\r\n        <AppBar theme=\"default\">\r\n          <Tabs />\r\n        </AppBar>\r\n      </TabsManager>\r\n      <Container>\r\n        {page === -1 && (\r\n          <Text type=\"headline-6\">\r\n            {'Click on other tabs to start coding!'}\r\n          </Text>\r\n        )}\r\n        {page !== -1 && (\r\n          <Suspense fallback={<CircularProgress className=\"mt-4\" id=\"async-loading-progress\" />}>\r\n            <Content page={page} />\r\n          </Suspense>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CrossFadeExamplesAsync;","import React, { FC } from \"react\";\r\nimport { Divider } from \"@react-md/divider\";\r\nimport { Text } from \"@react-md/typography\";\r\n\r\nimport CrossFadeExamplesAsync from \"./CrossFadeElementAsyncLinear\";\r\n//import CrossFadeExamplesStatic from \"./CrossFadeExamplesStatic\";\r\n\r\nimport '../../../../sortingAlgorithms/__colorHub/codestyle.css';\r\n\r\nconst Viewcodes: FC = () => (\r\n  <>\r\n    <Text type=\"headline-6\" margin=\"bottom\">\r\n      <div className=\"mt-1\"></div>\r\n      <h3 className=\"text-white bg-primary badge font-bold mt-2\">Code Explorer</h3>\r\n    </Text>\r\n    \r\n    <Divider style={{background: 'linear-gradient(to left, red, violet)'}} />\r\n    <Text type=\"headline-6\">\r\n    <span className=\"text-info badge bg-white badge-pill col-lock\">Source Program in multiple&nbsp;<span className=\"text-danger\">Programming Languages</span></span>\r\n    </Text>\r\n    <CrossFadeExamplesAsync />\r\n    <Divider />\r\n  </>\r\n);\r\n\r\nexport default Viewcodes;","import React, { FC, useState } from \"react\";\r\nimport { Button } from \"@react-md/button\";\r\nimport { useCSSTransition } from \"@react-md/transition\";\r\n\r\n//import Page1 from \"./Page1\";\r\nimport styles from \"./UseCSSTransition.module.scss\";\r\nimport { ExpandMoreSVGIcon, StorageSVGIcon, TextIconSpacing } from \"react-md\";\r\nimport Viewcodes from \"./viewcodeslinear\";\r\n\r\nconst Demo: FC = () => {\r\n  const [transitionIn, setTransitionIn] = useState(false);\r\n  const [rendered, transitionProps] = useCSSTransition({\r\n    // changing this value causes the transition behavior to change\r\n    transitionIn,\r\n\r\n    // 5 seconds just for demo purposes... can also be an object\r\n    timeout: 5000,\r\n\r\n    // can also use a string that gets BEM-ified instead\r\n    classNames: {\r\n      enter: styles.enter,\r\n      enterActive: styles.entering,\r\n      exit: styles.exit,\r\n      exitActive: styles.exiting,\r\n    },\r\n\r\n    // can also trigger the css transition on initial mount\r\n    // appear: false,\r\n\r\n    // changes the `rendered` value to be false while not transitioning and\r\n    // `transitionIn` is false\r\n    temporary: true,\r\n\r\n    // an optional className to merge with the transition classNames\r\n    // className: \"\",\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"text-white\" theme=\"error\" themeType=\"contained\" onClick={() => setTransitionIn(!transitionIn)}>\r\n        <TextIconSpacing icon={<StorageSVGIcon />}>\r\n          <TextIconSpacing icon={<ExpandMoreSVGIcon />} iconAfter>\r\n            Expand Codes\r\n          </TextIconSpacing>\r\n        </TextIconSpacing>\r\n      </Button>\r\n      {rendered && <div {...transitionProps}><Viewcodes /></div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Demo;\r\n\r\n/*\r\nvar com_modules = {\r\n  Demo,\r\n  Demo1\r\n}\r\n\r\nexport default com_modules;\r\n*/","import React from \"react\";\r\nimport { randomIntFromInterval } from \"../../utils/randomIntGenerator.js\";\r\nimport { linearSearchAnimations } from \"./../searchingAlgorithms\";\r\n\r\nimport Header from \"./../../utils/header\";\r\nimport ArrayBlock from \"./../ArrayBlock\";\r\n\r\nimport SideBar from \"../../utils/sidebar\";\r\n\r\n// Stylesheets\r\nimport \"./linearSearch.css\";\r\nimport '../../sortingAlgorithms/__colorHub/codestyle.css';\r\nimport Demo from \"../../utils/Program_codes/view_code/LinearSearch/toggler.tsx\";\r\nimport { Configuration } from \"react-md\";\r\n\r\nconst NUMBER_OF_ARRAY_BARS = 15;\r\nconst DEFAULT_COLOR = \"#6376f1\";\r\nconst FOUND_COLOR = \"#28B463\";\r\nconst NOT_FOUND_COLOR = \"#F16388\";\r\nconst ANIMATION_SPEED_SECONDS = 1;\r\n\r\nexport default class LinearSearch extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n            found: false,\r\n            disabled: false,\r\n            elementFoundAt: 0,\r\n            target: null,\r\n            msgAfterExecution: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        const array = [];\r\n        const prevArray = document.getElementsByClassName(\"l-array-bar\");\r\n        const found = false;\r\n        const disabled = false;\r\n        document.getElementById(\"targetVal\").value = \"\";\r\n        for (let idx = 0; idx < prevArray.length; idx++) {\r\n            prevArray[idx].style.backgroundColor = DEFAULT_COLOR;\r\n            prevArray[idx].classList.remove(\"growFind\");\r\n            prevArray[idx].classList.remove(\"highlight\");\r\n        }\r\n        for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n            array.push(randomIntFromInterval(5, 730));\r\n        }\r\n        this.setState({ array, found, disabled, msgAfterExecution: \"\" });\r\n    }\r\n\r\n    linearSearch() {\r\n        var msg = \"\";\r\n        const target = document.getElementById(\"targetVal\").value;\r\n        if (target === \"\") return;\r\n        const animations = linearSearchAnimations(this.state.array, target);\r\n        console.log(animations);\r\n        let count = 0;\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const [idx, currentEle, found] = animations[i];\r\n            const arrayBars = document.getElementsByClassName(\"l-array-bar\");\r\n            const arrayBar = arrayBars[idx];\r\n            const arrayBarStyle = arrayBar.style;\r\n\r\n            count++;\r\n\r\n            if (found) {\r\n                msg = `${currentEle} found at index ${idx}`;\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        found: true,\r\n                        disabled: true,\r\n                        elementFoundAt: idx,\r\n                        target: currentEle,\r\n                    });\r\n                    arrayBarStyle.backgroundColor = FOUND_COLOR;\r\n                    arrayBar.classList.add(\"growFind\");\r\n                    arrayBar.classList.add(\"highlight\");\r\n                }, i * ANIMATION_SPEED_SECONDS * 1000);\r\n                break;\r\n            } else {\r\n                msg = `${target} not found`;\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        found: false,\r\n                        disabled: true,\r\n                    });\r\n                    arrayBarStyle.backgroundColor = NOT_FOUND_COLOR;\r\n                    arrayBar.classList.add(\"growFind\");\r\n                }, i * ANIMATION_SPEED_SECONDS * 1000);\r\n            }\r\n        }\r\n        setTimeout(() => {\r\n            this.setState({\r\n                disabled: false,\r\n                msgAfterExecution: msg,\r\n            });\r\n        }, (count + 1) * ANIMATION_SPEED_SECONDS * 1000);\r\n    }\r\n\r\n    render() {\r\n        const { array, found, disabled, msgAfterExecution } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <SideBar />\r\n                <div className=\"jumbotron jumbotron-fluid bg-ls-cover bg-light\">\r\n                    <center>\r\n                        <Header title=\"Linear Search\" />\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-sm-1\"></div>\r\n                                <div className=\"input-group col-sm-10\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"targetVal\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"--- Enter an element to find ---\"\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <button\r\n                                            onClick={() => this.linearSearch()}\r\n                                            className=\"btn rounded-bottom btn-success\"\r\n                                            type=\"button\"\r\n                                            id=\"button-addon2\"\r\n                                            disabled={disabled}\r\n                                        >\r\n                                            Search\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => this.resetArray()}\r\n                                            className=\"btn rounded-bottom btn-danger\"\r\n                                            id=\"resetArray\"\r\n                                            type=\"button\"\r\n                                            disabled={disabled}\r\n                                        >\r\n                                            Generate new Array\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-1 \"></div>\r\n                                <span>\r\n                                    <b><h6 className=\"text-white col-md-7 col-sm-8 col-xl-7 col-10 badge-primary badge-pill mt-1 mb-3\">***Please Re-generate the array again to visualize proper result !!</h6></b>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        {!found ? (\r\n                            <b><p className=\"not-found growFind col-md-4 col-sm-4 col-4 col-xl-4 text-white\">\r\n                                {msgAfterExecution}\r\n                            </p></b>\r\n                        ) : null}\r\n                        {found ? (\r\n                            <b><p className=\"found growFind col-md-4 col-sm-4 col-4 col-xl-4\">\r\n                                {msgAfterExecution}\r\n                            </p></b>\r\n                        ) : null}\r\n                        <div className=\"container\">\r\n                            {array.map((value, idx) => (\r\n                                <ArrayBlock\r\n                                    type={`linearSearch`}\r\n                                    key={idx}\r\n                                    idx={idx}\r\n                                    val={value}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </center>\r\n                </div>\r\n                <div className=\"row mt-3 col-lock mb-0 text-center\">\r\n                    <Configuration>\r\n                        <Demo />\r\n                    </Configuration>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\n//  import { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\n\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"bg-primary text-white text-center text-lg-start Footer\">\r\n  \r\n      <div className=\"container p-4\">\r\n        \r\n        <div className=\"row\">\r\n\r\n          <div className=\"col-lg-6 col-md-12 mb-4 mb-md-0\">\r\n\r\n            <h4 className=\"text-uppercase\">About Me</h4>\r\n\r\n            <h5 className=\"mb-2\">\r\n              <p>\r\n              I am a modest learner with several extraordinary skills.\r\n              Currently, I'm studying B.Tech. at Techno Main Salt Lake.\r\n              I love to listen to songs, develop blogs and play games, learning new projects, watching specially horror movies.\r\n                Demonstrated with{' '}\r\n                    <span className=\"Footer__Heart\">&hearts;</span> by{' '}\r\n                    <a\r\n                      href=\"https://www.github.com/Ranjan-Das-cloud\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                      className=\"Footer__Link text-white\"\r\n                    >\r\n                      Ranjan Das\r\n                    </a>\r\n              </p>\r\n            </h5>\r\n          </div>\r\n          \r\n          <div className=\"col-lg-3 col-md-6 mb-4 mb-md-0\">\r\n            <h4 className=\"text-uppercase\">Resources</h4>\r\n\r\n            <ul className=\"list-unstyled mb-2\">\r\n              <li>\r\n                <h5><a href=\"https://www.geeksforgeeks.org/sorting-algorithms/\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"Footer__Link text-white\">GeekforGeeks</a></h5>\r\n              </li>\r\n              <li>\r\n                <h5><a href=\"https://www.programiz.com/dsa/bubble-sort\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"Footer__Link text-white\">Programiz</a></h5>\r\n              </li>\r\n              <li>\r\n                <h5><a href=\"https://www.javatpoint.com/data-structure-tutorial\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"Footer__Link text-white\">Javatpoint</a></h5>\r\n              </li>\r\n              <li>\r\n                <h5><a href=\"https://www.codeacademy.com\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"Footer__Link text-white\">Codeacademy</a></h5>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"col-lg-3 col-md-6 mb-4 mb-md-0\">\r\n            <h4 className=\"text-uppercase\">Code Editors</h4>\r\n\r\n            <ul className=\"list-unstyled mb-2\">\r\n              <li>\r\n                <h5><i class=\"cib-hackerrank\"></i>&nbsp;<a href=\"https://www.hackerrank.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"Footer__Link text-white\">HackerRank</a></h5>\r\n              </li>\r\n              <li>\r\n                <h5><i class=\"cib-hackerearth\"></i>&nbsp;<a href=\"https://www.hackerearth.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"Footer__Link text-white\">HackerEarth</a></h5>\r\n              </li>\r\n              <li>\r\n                <h5><i class=\"cib-leetcode\"></i>&nbsp;<a href=\"https://www.leetcode.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"Footer__Link text-white\">LeetCode</a></h5>\r\n              </li>\r\n              <li>\r\n                <h5><i class=\"cib-codepen\"></i>&nbsp;<a href=\"https://codepen.io/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"Footer__Link text-white\">CodePen</a></h5>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          \r\n        </div>\r\n        \r\n      </div>\r\n\r\n      <div className=\"mt-5\">\r\n          <div className='container has-text-centered'> \r\n          <div className='columns is-mobile is-centered'> \r\n            <div className='column is-5'> \r\n              <div> \r\n                <h1 className='title has-text-centered'> \r\n                    Contact Me \r\n                </h1> \r\n              </div> \r\n      \r\n              <div class='box'> \r\n                <div> \r\n                  <span class=\"icon is-large\"> \r\n                    <span class=\"fa-stack fa-lg\"> \r\n                      <a href=\"https://github.com/Ranjan-Das-cloud\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-white\"><i class=\"fab fa-github fa-stack-1x\"></i></a> \r\n                       \r\n                    </span> \r\n                  </span> \r\n      \r\n                  <span class=\"icon is-large\">\r\n                    <span class=\"fa-stack fa-lg\"> \r\n                    \r\n                      <a href=\"https://linkedin.com/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover-me text-white\"><i class=\"fab fa-linkedin fa-stack-1x has-text-white\"></i></a>\r\n                    </span> \r\n                  </span> \r\n      \r\n                  <span class=\"icon is-large\"> \r\n                    <span class=\"fa-stack fa-lg\"> \r\n                       \r\n                      <a href=\"mailto:ranjan.rd170@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover-me text-white\"><i class=\"fas fa-envelope fa-stack-1x has-text-white\"></i></a>\r\n                    </span> \r\n                  </span> \r\n      \r\n                  <span class=\"icon is-large\"> \r\n                    <span class=\"fa-stack fa-lg\"> \r\n                       \r\n                      <a href=\"https://www.medium.com/@ranjan.das\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover-me text-white\"><i class=\"fab fa-medium fa-stack-1x has-text-white\"></i></a>\r\n                    </span> \r\n                  </span> \r\n      \r\n                  <span class=\"icon is-large\"> \r\n                    <span class=\"fa-stack fa-lg\"> \r\n                      <a href=\"https://www.telegram.org\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"hover-me text-white\"><i class=\"fas fa-paper-plane fa-stack-1x has-text-white\"></i></a>\r\n                    </span> \r\n                  </span> \r\n                </div> \r\n              </div> \r\n            </div> \r\n          </div> \r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"text-center p-3\" style={{background: 'rgba(0, 0, 0, 0.2)'}}>\r\n        © 2020 Copyright :&nbsp;&nbsp;\r\n        <a className=\"text-white\" href=\"https://github.com/Ranjan-Das-cloud\">Ranjan-Das-cloud</a><span>&nbsp;&nbsp;<i className=\"fas fa-chess-king\"></i></span>\r\n      </div>\r\n      \r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nimport NavBar from \"./utils/navbar\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\n//  IndexTable\r\nimport IndexTable from \"./utils/indexPage\";\r\n\r\n//  Sorting Visualiser\r\nimport SortingVisualizer from \"./sortingAlgorithms/sortingVisualizer\";\r\n\r\n//  Searching Visualiser\r\nimport BinarySearch from \"./searchingAlgorithms/binarySearch/binarySearch\";\r\nimport LinearSearch from \"./searchingAlgorithms/linearSearch/linearSearch\";\r\n\r\n//  Stylesheets\r\nimport \"./App.css\";\r\nimport Footer from \"./sortingAlgorithms/components/subComponents/Footer\";\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                <Route exact path=\"/\" component={IndexTable} />\r\n                <Route path=\"/sorting\" component={SortingVisualizer} />\r\n                <Route path=\"/linear-search\" component={LinearSearch} />\r\n                <Route path=\"/binary-search\" component={BinarySearch} />\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\n// HashRouter basically it uses the hash in the URL to render the component. Since I was building a static one-page website, I needed to use this.\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"UseCSSTransition_enter__po5Dm\",\"entering\":\"UseCSSTransition_entering__BFzPn\",\"exit\":\"UseCSSTransition_exit__1Y9M4\",\"exiting\":\"UseCSSTransition_exiting__H1Y2m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"UseCSSTransition_enter__3RjJt\",\"entering\":\"UseCSSTransition_entering__3r6rK\",\"exit\":\"UseCSSTransition_exit__1Jb4A\",\"exiting\":\"UseCSSTransition_exiting__2jcua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"UseCSSTransition_enter__3W_Fp\",\"entering\":\"UseCSSTransition_entering__29LuZ\",\"exit\":\"UseCSSTransition_exit__1x_LZ\",\"exiting\":\"UseCSSTransition_exiting__2HvT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"UseCSSTransition_enter__U2w3i\",\"entering\":\"UseCSSTransition_entering__2cqbb\",\"exit\":\"UseCSSTransition_exit__3MyfI\",\"exiting\":\"UseCSSTransition_exiting__1QjJR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"UseCSSTransition_enter__yNbGR\",\"entering\":\"UseCSSTransition_entering__1_IBn\",\"exit\":\"UseCSSTransition_exit__8Gu3A\",\"exiting\":\"UseCSSTransition_exiting__1VOas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"UseCSSTransition_enter__2lOFv\",\"entering\":\"UseCSSTransition_entering__1xgx0\",\"exit\":\"UseCSSTransition_exit__3Jusp\",\"exiting\":\"UseCSSTransition_exiting__1kzDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"UseCSSTransition_enter__2XXFQ\",\"entering\":\"UseCSSTransition_entering__1TByO\",\"exit\":\"UseCSSTransition_exit__1vpfg\",\"exiting\":\"UseCSSTransition_exiting__2uh5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"UseCSSTransition_enter__3Hp6Z\",\"entering\":\"UseCSSTransition_entering__3SWo9\",\"exit\":\"UseCSSTransition_exit__1onc0\",\"exiting\":\"UseCSSTransition_exiting__3-l_0\"};"],"sourceRoot":""}