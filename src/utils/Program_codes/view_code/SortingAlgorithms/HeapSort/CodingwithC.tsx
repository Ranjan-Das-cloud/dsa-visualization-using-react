import React, { forwardRef, HTMLAttributes } from "react";
import { Text } from "@react-md/typography";

export default forwardRef<HTMLDivElement, HTMLAttributes<HTMLDivElement>>(
  function PageH1(props, ref) {
    return (
      <div {...props} ref={ref} className="mt-3 mb-1">
        <Text type="headline-4">Source code in C</Text>
        <Text>
          <code>
            <h5 className="mt-5 mb-4"><span><h4 style={{color:'#f0ffff'}}>Implementation of Heap Sort</h4></span>
              <div className="container text-left">
                <div className="offset-4 mt-4 mb-5">
                  <ul className="dp-j" style={{listStyleType:'none'}}><li className="alt"><span><span>#include&lt;stdio.h&gt;&nbsp;&nbsp;</span></span></li><li className=""><span><span className="keyword">int</span><span>&nbsp;temp;&nbsp;&nbsp;</span></span></li><li className="alt"><span>&nbsp;&nbsp;</span></li><li className=""><span><span className="keyword">void</span><span>&nbsp;heapify(</span><span className="keyword">int</span><span>&nbsp;arr[],&nbsp;</span><span className="keyword">int</span><span>&nbsp;size,&nbsp;</span><span className="keyword">int</span><span>&nbsp;i)&nbsp;&nbsp;</span></span></li><li className="alt"><span>&#123;&nbsp;&nbsp;</span></li><li className=""><span><span className="keyword">int</span><span>&nbsp;largest&nbsp;=&nbsp;i;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li className="alt"><span><span className="keyword">int</span><span>&nbsp;left&nbsp;=&nbsp;</span><span className="number">2</span><span>*i&nbsp;+&nbsp;</span><span className="number">1</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li className=""><span><span className="keyword">int</span><span>&nbsp;right&nbsp;=&nbsp;</span><span className="number">2</span><span>*i&nbsp;+&nbsp;</span><span className="number">2</span><span>;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></li><li className="alt"><span>&nbsp;&nbsp;</span></li><li className=""><span><span className="keyword">if</span><span>&nbsp;(left&nbsp;&lt;&nbsp;size&nbsp;&amp;&amp;&nbsp;arr[left]&nbsp;&gt;arr[largest])&nbsp;&nbsp;</span></span></li><li className="alt"><span>largest&nbsp;=&nbsp;left;&nbsp;&nbsp;</span></li><li className=""><span>&nbsp;&nbsp;</span></li><li className="alt"><span><span className="keyword">if</span><span>&nbsp;(right&nbsp;&lt;&nbsp;size&nbsp;&amp;&amp;&nbsp;arr[right]&nbsp;&gt;&nbsp;arr[largest])&nbsp;&nbsp;</span></span></li><li className=""><span>largest&nbsp;=&nbsp;right;&nbsp;&nbsp;</span></li><li className="alt"><span>&nbsp;&nbsp;</span></li><li className=""><span><span className="keyword">if</span><span>&nbsp;(largest&nbsp;!=&nbsp;i)&nbsp;&nbsp;</span></span></li><li className="alt"><span>&#123;&nbsp;&nbsp;</span></li><li className=""><span>temp&nbsp;=&nbsp;arr[i];&nbsp;&nbsp;</span></li><li className="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;arr[i]=&nbsp;arr[largest];&nbsp;&nbsp;&nbsp;</span></li><li className=""><span>&nbsp;&nbsp;&nbsp;&nbsp;arr[largest]&nbsp;=&nbsp;temp;&nbsp;&nbsp;</span></li><li className="alt"><span>heapify(arr,&nbsp;size,&nbsp;largest);&nbsp;&nbsp;</span></li><li className=""><span>&#125;&nbsp;&nbsp;</span></li><li className="alt"><span>&#125;&nbsp;&nbsp;</span></li><li className=""><span>&nbsp;&nbsp;</span></li><li className="alt"><span><span className="keyword">void</span><span>&nbsp;heapSort(</span><span className="keyword">int</span><span>&nbsp;arr[],&nbsp;</span><span className="keyword">int</span><span>&nbsp;size)&nbsp;&nbsp;</span></span></li><li className=""><span>&#123;&nbsp;&nbsp;</span></li><li className="alt"><span><span className="keyword">int</span><span>&nbsp;i;&nbsp;&nbsp;</span></span></li><li className=""><span><span className="keyword">for</span><span>&nbsp;(i&nbsp;=&nbsp;size&nbsp;/&nbsp;</span><span className="number">2</span><span>&nbsp;-&nbsp;</span><span className="number">1</span><span>;&nbsp;i&nbsp;&gt;=&nbsp;</span><span className="number">0</span><span>;&nbsp;i--)&nbsp;&nbsp;</span></span></li><li className="alt"><span>heapify(arr,&nbsp;size,&nbsp;i);&nbsp;&nbsp;</span></li><li className=""><span><span className="keyword">for</span><span>&nbsp;(i=size-</span><span className="number">1</span><span>;&nbsp;i&gt;=</span><span className="number">0</span><span>;&nbsp;i--)&nbsp;&nbsp;</span></span></li><li className="alt"><span>&#123;&nbsp;&nbsp;</span></li><li className=""><span>temp&nbsp;=&nbsp;arr[<span className="number">0</span><span>];&nbsp;&nbsp;</span></span></li><li className="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;arr[<span className="number">0</span><span>]=&nbsp;arr[i];&nbsp;&nbsp;&nbsp;</span></span></li><li className=""><span>&nbsp;&nbsp;&nbsp;&nbsp;arr[i]&nbsp;=&nbsp;temp;&nbsp;&nbsp;</span></li><li className="alt"><span>heapify(arr,&nbsp;i,&nbsp;<span className="number">0</span><span>);&nbsp;&nbsp;</span></span></li><li className=""><span>&#125;&nbsp;&nbsp;</span></li><li className="alt"><span>&#125;&nbsp;&nbsp;</span></li><li className=""><span>&nbsp;&nbsp;</span></li><li className="alt"><span><span className="keyword">void</span><span>&nbsp;main()&nbsp;&nbsp;</span></span></li><li className=""><span>&#123;&nbsp;&nbsp;</span></li><li className="alt"><span><span className="keyword">int</span><span>&nbsp;arr[]&nbsp;=&nbsp;&#123;</span><span className="number">1</span><span>,&nbsp;</span><span className="number">10</span><span>,&nbsp;</span><span className="number">2</span><span>,&nbsp;</span><span className="number">3</span><span>,&nbsp;</span><span className="number">4</span><span>,&nbsp;</span><span className="number">1</span><span>,&nbsp;</span><span className="number">2</span><span>,&nbsp;</span><span className="number">100</span><span>,</span><span className="number">23</span><span>,&nbsp;</span><span className="number">2</span><span>&#125;;&nbsp;&nbsp;</span></span></li><li className=""><span><span className="keyword">int</span><span>&nbsp;i;&nbsp;&nbsp;</span></span></li><li className="alt"><span><span className="keyword">int</span><span>&nbsp;size&nbsp;=&nbsp;sizeof(arr)/sizeof(arr[</span><span className="number">0</span><span>]);&nbsp;&nbsp;</span></span></li><li className=""><span>&nbsp;&nbsp;</span></li><li className="alt"><span>heapSort(arr,&nbsp;size);&nbsp;&nbsp;</span></li><li className=""><span>&nbsp;&nbsp;</span></li><li className="alt"><span>printf(<span className="string">"printing&nbsp;sorted&nbsp;elements\n"</span><span>);&nbsp;&nbsp;</span></span></li><li className=""><span><span className="keyword">for</span><span>&nbsp;(i=</span><span className="number">0</span><span>;&nbsp;i&lt;size;&nbsp;++i)&nbsp;&nbsp;</span></span></li><li className="alt"><span>printf(<span className="string">"%d\n"</span><span>,arr[i]);&nbsp;&nbsp;</span></span></li><li className=""><span>&#125;&nbsp;&nbsp;</span></li></ul>
                </div>
              </div>
            </h5>
          </code>
        </Text>
      </div>
    );
  }
);